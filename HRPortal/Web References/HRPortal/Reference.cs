//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace HRPortal.HRPortal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HRPortal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal")]
    public partial class HRPortal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DeleteTrainingParticipantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveTrainingCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAppraisalSuggestObjectivesOutcomesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertSubObjectiveEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetLastSubPcLineNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnMergePdfsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddICTHelpDeskSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrainingLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProffessionalBodyLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmploymentHistoryLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRefereeLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDeclarationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateProfileForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountForExtenalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgotPasswordtForExtenalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateIctRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProvideIctfeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIctRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyexternalJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemsByLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemDescByLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback EscalatedHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReopenHelpdeskRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmploymentHistoryForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAcademicQualificationsForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProffessionalQualificationsForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingAttendedForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProfessionalBodyForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRefereeForExternalApplcantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAcademicLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProfessionalLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrainingLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProffessionalBodyLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRefereeLineForExternalApplicantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyOnlineOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFavouriteJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFavouriteJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddImprestSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStoreRequsitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStaffClaimSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLeaveSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddImprestSurrenderSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPurchaseRequisitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetRequisitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingRequisitionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPettyCashSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPettyCashSurrenderSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateStaffClaimApprovalRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuggestLinesFromWorksRequisitionTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuggestPersonnelEquipmentSpecificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SuggestLinesFromRequisitionTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePurchaseRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProjectDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePersonnelSpecificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePersonnelSpecificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEquipmentSpecificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEquipmentSpecificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVehicleMaintenanceRequestDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendVehicleMaintenancetforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFuelRequisitionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendVehicleRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseDriverOpenTripsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDriverAllocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNonKeRRADriverAllocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFuelRequisitionforApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessDriverAllocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpateDriverAllocationToImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDriverEmailNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateFleetRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReassignDriverOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateFuelRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateMaintenanceRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback EscalatedHelpdeskRequestDynasoftOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateictreportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateReopenreportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateRMReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedCoreInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnsuggestsubindicatorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveCoreInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveCoreInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveAditionalInitiativesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveAditionalInitiativeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditIndividualCardSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendStaffPerformanceContractApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCancelStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLockStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSignStaffPerformanceContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSelectedPLogCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewPerformanceLogEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetPlogLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetSubPlogLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestPlogLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestPlogandSubPlogDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdatePerformanceTargetLinesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemovePerformanceLogLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertPlogSubActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendPlogApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCancelPlogApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnNewStandardAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLoadCompetenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddEvaluationPIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateStandardAppraisalReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGeneratePlogReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateIndividualPcReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateIndividualPcSubIndicatorReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertJDTargetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSuggestJDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetAnnualWorkplanLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertSelectedAdditionalActivitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateCSPReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateAWPReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateBoardPCReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitStandardAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCancelSubmitofStandardAppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitStandardAppraisalObjOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitStandardAppraisalPEOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStandardAppraisalPIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditStandardAppraisalPIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveStandardAppraisalPIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertStandardAppraisalTrainigNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRemoveStandardAppraisalTrainigNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditStandardAppraisalTrainigNeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitStandardAppraisalConfirmationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSendAppraisalEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingParticipantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditTrainingParticipantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePettyCashOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePettyCashLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulatePettyCashOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditPettyCashLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePettyCashLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPettyCashRequestApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPettyCashRequestApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePettyCashSurrenderLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPettyCashSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPettyCashSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrainingRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingParticipants2OperationCompleted;
        
        private System.Threading.SendOrPostCallback EditTrainingParticipants2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrainingParticipants2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingCost2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrainingcost2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTrainingRequestApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTrainingRequestApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateTrainingApplicationReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateTrainingPlanReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewTrainingRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewTrainingNeedsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTrainingNeedsApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditTrainingNeedsRequestLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteTrainingNeedsLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewTrainingFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrainingFeedbackLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateTrainingFeedbackReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditTrainingFeedbackLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteTrainingFeedbackLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitTrainingFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewTrainingEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitTrainingEvaluationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateTrainingEvaluationReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertEvaluationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePayslipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateEmployeeStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateP9OperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePurchaseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateStoreRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateIssueVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePettyCashVoucherOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateStaffClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHobbyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePersonalDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCommunicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQualificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImprestGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImprestGeneralDetails1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImprestObjectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTeamMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTeamMember1OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFuelOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendImprestMemoApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateImprestSurrenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateImprestSurrender1OperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulatePettyCashSurrenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendImprestSurrenderApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSurrenderLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWorksPurchaseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePurchaseRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePurchaseStoreRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPurchaseRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFleetRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetRequisitionStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFleetRequisitionNonStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFleetRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveStaffFromTravelRequisitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveMemberFromImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditTeamMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFuelFromImprestMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditFuelOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCasualsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditOtherCostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateLeaveFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRecordForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelRecordApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendStaffClaimApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveStaffClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelStaffClaimRecordApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStaffClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStaffClaim1OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditStaffClaimLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendStoreRequisitionApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStoreRequisitionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyexternalHrJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyinternalHrJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmploymentHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmploymentHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProffessionalQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrainingAttendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProfessionalBodyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddApplicantAccomplishmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAbilityDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCurrentDutiesSkillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOtherPersonalDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDutiesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAcademicLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProfessionalLineOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HRPortal() {
            this.Url = global::HRPortal.Properties.Settings.Default.HRPortal_HRPortal_HRPortal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DeleteTrainingParticipantsCompletedEventHandler DeleteTrainingParticipantsCompleted;
        
        /// <remarks/>
        public event AddTrainingCostCompletedEventHandler AddTrainingCostCompleted;
        
        /// <remarks/>
        public event RemoveTrainingCostCompletedEventHandler RemoveTrainingCostCompleted;
        
        /// <remarks/>
        public event FnAppraisalSuggestObjectivesOutcomesCompletedEventHandler FnAppraisalSuggestObjectivesOutcomesCompleted;
        
        /// <remarks/>
        public event FnInsertSubObjectiveEvaluationCompletedEventHandler FnInsertSubObjectiveEvaluationCompleted;
        
        /// <remarks/>
        public event FnGetLastSubPcLineNoCompletedEventHandler FnGetLastSubPcLineNoCompleted;
        
        /// <remarks/>
        public event FnMergePdfsCompletedEventHandler FnMergePdfsCompleted;
        
        /// <remarks/>
        public event FnCreateFolderCompletedEventHandler FnCreateFolderCompleted;
        
        /// <remarks/>
        public event AddICTHelpDeskSharepointLinksCompletedEventHandler AddICTHelpDeskSharepointLinksCompleted;
        
        /// <remarks/>
        public event DeleteTrainingLineCompletedEventHandler DeleteTrainingLineCompleted;
        
        /// <remarks/>
        public event DeleteProffessionalBodyLineCompletedEventHandler DeleteProffessionalBodyLineCompleted;
        
        /// <remarks/>
        public event DeleteEmploymentHistoryLineCompletedEventHandler DeleteEmploymentHistoryLineCompleted;
        
        /// <remarks/>
        public event DeleteRefereeLineCompletedEventHandler DeleteRefereeLineCompleted;
        
        /// <remarks/>
        public event AddDeclarationCompletedEventHandler AddDeclarationCompleted;
        
        /// <remarks/>
        public event CreateProfileForExternalApplicantsCompletedEventHandler CreateProfileForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event CreateAccountForExtenalApplicantsCompletedEventHandler CreateAccountForExtenalApplicantsCompleted;
        
        /// <remarks/>
        public event ForgotPasswordtForExtenalApplicantsCompletedEventHandler ForgotPasswordtForExtenalApplicantsCompleted;
        
        /// <remarks/>
        public event CreateIctRequestCompletedEventHandler CreateIctRequestCompleted;
        
        /// <remarks/>
        public event ProvideIctfeedbackCompletedEventHandler ProvideIctfeedbackCompleted;
        
        /// <remarks/>
        public event UpdateIctRequestCompletedEventHandler UpdateIctRequestCompleted;
        
        /// <remarks/>
        public event ApplyexternalJobCompletedEventHandler ApplyexternalJobCompleted;
        
        /// <remarks/>
        public event GetItemsByLocationCompletedEventHandler GetItemsByLocationCompleted;
        
        /// <remarks/>
        public event GetItemDescByLocationCompletedEventHandler GetItemDescByLocationCompleted;
        
        /// <remarks/>
        public event AssignHelpdeskRequestCompletedEventHandler AssignHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event EscalatedHelpdeskRequestCompletedEventHandler EscalatedHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event ResolveHelpdeskRequestCompletedEventHandler ResolveHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event ReopenHelpdeskRequestCompletedEventHandler ReopenHelpdeskRequestCompleted;
        
        /// <remarks/>
        public event AddEmploymentHistoryForExternalApplcantsCompletedEventHandler AddEmploymentHistoryForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event AddAcademicQualificationsForExternalApplcantsCompletedEventHandler AddAcademicQualificationsForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event AddProffessionalQualificationsForExternalApplcantsCompletedEventHandler AddProffessionalQualificationsForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event AddTrainingAttendedForExternalApplcantsCompletedEventHandler AddTrainingAttendedForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event AddProfessionalBodyForExternalApplcantsCompletedEventHandler AddProfessionalBodyForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event CreateRefereeForExternalApplcantsCompletedEventHandler CreateRefereeForExternalApplcantsCompleted;
        
        /// <remarks/>
        public event DeleteAcademicLineForExternalApplicantsCompletedEventHandler DeleteAcademicLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event DeleteProfessionalLineForExternalApplicantsCompletedEventHandler DeleteProfessionalLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event DeleteTrainingLineForExternalApplicantsCompletedEventHandler DeleteTrainingLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event DeleteProffessionalBodyLineForExternalApplicantsCompletedEventHandler DeleteProffessionalBodyLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event DeleteEmploymentHistoryLineForExternalApplicantsCompletedEventHandler DeleteEmploymentHistoryLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event DeleteRefereeLineForExternalApplicantsCompletedEventHandler DeleteRefereeLineForExternalApplicantsCompleted;
        
        /// <remarks/>
        public event ApplyOnlineCompletedEventHandler ApplyOnlineCompleted;
        
        /// <remarks/>
        public event AddFavouriteJobsCompletedEventHandler AddFavouriteJobsCompleted;
        
        /// <remarks/>
        public event DeleteFavouriteJobsCompletedEventHandler DeleteFavouriteJobsCompleted;
        
        /// <remarks/>
        public event AddImprestSharepointLinksCompletedEventHandler AddImprestSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddStoreRequsitionSharepointLinksCompletedEventHandler AddStoreRequsitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddStaffClaimSharepointLinksCompletedEventHandler AddStaffClaimSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddLeaveSharepointLinksCompletedEventHandler AddLeaveSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddImprestSurrenderSharepointLinksCompletedEventHandler AddImprestSurrenderSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddPurchaseRequisitionSharepointLinksCompletedEventHandler AddPurchaseRequisitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddFleetRequisitionSharepointLinksCompletedEventHandler AddFleetRequisitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddTrainingRequisitionSharepointLinksCompletedEventHandler AddTrainingRequisitionSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddPettyCashSharepointLinksCompletedEventHandler AddPettyCashSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddPettyCashSurrenderSharepointLinksCompletedEventHandler AddPettyCashSurrenderSharepointLinksCompleted;
        
        /// <remarks/>
        public event FnCreateStaffClaimApprovalRequestsCompletedEventHandler FnCreateStaffClaimApprovalRequestsCompleted;
        
        /// <remarks/>
        public event SuggestLinesFromWorksRequisitionTemplateCompletedEventHandler SuggestLinesFromWorksRequisitionTemplateCompleted;
        
        /// <remarks/>
        public event SuggestPersonnelEquipmentSpecificationCompletedEventHandler SuggestPersonnelEquipmentSpecificationCompleted;
        
        /// <remarks/>
        public event SuggestLinesFromRequisitionTemplateCompletedEventHandler SuggestLinesFromRequisitionTemplateCompleted;
        
        /// <remarks/>
        public event UpdateRequisitionLinesCompletedEventHandler UpdateRequisitionLinesCompleted;
        
        /// <remarks/>
        public event DeletePurchaseRequisitionLinesCompletedEventHandler DeletePurchaseRequisitionLinesCompleted;
        
        /// <remarks/>
        public event AddProjectDetailsCompletedEventHandler AddProjectDetailsCompleted;
        
        /// <remarks/>
        public event UpdatePersonnelSpecificationsCompletedEventHandler UpdatePersonnelSpecificationsCompleted;
        
        /// <remarks/>
        public event DeletePersonnelSpecificationsCompletedEventHandler DeletePersonnelSpecificationsCompleted;
        
        /// <remarks/>
        public event UpdateEquipmentSpecificationsCompletedEventHandler UpdateEquipmentSpecificationsCompleted;
        
        /// <remarks/>
        public event DeleteEquipmentSpecificationsCompletedEventHandler DeleteEquipmentSpecificationsCompleted;
        
        /// <remarks/>
        public event AddVehicleMaintenanceRequestDetailsCompletedEventHandler AddVehicleMaintenanceRequestDetailsCompleted;
        
        /// <remarks/>
        public event SendVehicleMaintenancetforApprovalCompletedEventHandler SendVehicleMaintenancetforApprovalCompleted;
        
        /// <remarks/>
        public event AddFuelRequisitionDetailsCompletedEventHandler AddFuelRequisitionDetailsCompleted;
        
        /// <remarks/>
        public event SendVehicleRequisitionApprovalCompletedEventHandler SendVehicleRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event CloseDriverOpenTripsCompletedEventHandler CloseDriverOpenTripsCompleted;
        
        /// <remarks/>
        public event AddDriverAllocationsCompletedEventHandler AddDriverAllocationsCompleted;
        
        /// <remarks/>
        public event AddNonKeRRADriverAllocationsCompletedEventHandler AddNonKeRRADriverAllocationsCompleted;
        
        /// <remarks/>
        public event SendFuelRequisitionforApprovalCompletedEventHandler SendFuelRequisitionforApprovalCompleted;
        
        /// <remarks/>
        public event ProcessDriverAllocationsCompletedEventHandler ProcessDriverAllocationsCompleted;
        
        /// <remarks/>
        public event UpateDriverAllocationToImprestMemoCompletedEventHandler UpateDriverAllocationToImprestMemoCompleted;
        
        /// <remarks/>
        public event SendDriverEmailNotificationCompletedEventHandler SendDriverEmailNotificationCompleted;
        
        /// <remarks/>
        public event GenerateFleetRequisitionCompletedEventHandler GenerateFleetRequisitionCompleted;
        
        /// <remarks/>
        public event ReassignDriverCompletedEventHandler ReassignDriverCompleted;
        
        /// <remarks/>
        public event GenerateFuelRequisitionCompletedEventHandler GenerateFuelRequisitionCompleted;
        
        /// <remarks/>
        public event GenerateMaintenanceRequisitionCompletedEventHandler GenerateMaintenanceRequisitionCompleted;
        
        /// <remarks/>
        public event EscalatedHelpdeskRequestDynasoftCompletedEventHandler EscalatedHelpdeskRequestDynasoftCompleted;
        
        /// <remarks/>
        public event GenerateictreportCompletedEventHandler GenerateictreportCompleted;
        
        /// <remarks/>
        public event GenerateReopenreportCompletedEventHandler GenerateReopenreportCompleted;
        
        /// <remarks/>
        public event GenerateRMReportCompletedEventHandler GenerateRMReportCompleted;
        
        /// <remarks/>
        public event GetAllItemsCompletedEventHandler GetAllItemsCompleted;
        
        /// <remarks/>
        public event FnNewStaffPerformanceContractCompletedEventHandler FnNewStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedCoreInitiativesCompletedEventHandler FnSubmitSelectedCoreInitiativesCompleted;
        
        /// <remarks/>
        public event FnsuggestsubindicatorsCompletedEventHandler FnsuggestsubindicatorsCompleted;
        
        /// <remarks/>
        public event FnSaveCoreInitiativesCompletedEventHandler FnSaveCoreInitiativesCompleted;
        
        /// <remarks/>
        public event FnRemoveCoreInitiativesCompletedEventHandler FnRemoveCoreInitiativesCompleted;
        
        /// <remarks/>
        public event FnSaveAditionalInitiativesCompletedEventHandler FnSaveAditionalInitiativesCompleted;
        
        /// <remarks/>
        public event FnRemoveAditionalInitiativeCompletedEventHandler FnRemoveAditionalInitiativeCompleted;
        
        /// <remarks/>
        public event FnDeleteIndividualCardSubActivitiesCompletedEventHandler FnDeleteIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnNewIndividualCardSubActivitiesCompletedEventHandler FnNewIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnEditIndividualCardSubActivitiesCompletedEventHandler FnEditIndividualCardSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnSendStaffPerformanceContractApprovalCompletedEventHandler FnSendStaffPerformanceContractApprovalCompleted;
        
        /// <remarks/>
        public event FnCancelStaffPerformanceContractCompletedEventHandler FnCancelStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnLockStaffPerformanceContractCompletedEventHandler FnLockStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnSignStaffPerformanceContractCompletedEventHandler FnSignStaffPerformanceContractCompleted;
        
        /// <remarks/>
        public event FnSubmitSelectedPLogCategoriesCompletedEventHandler FnSubmitSelectedPLogCategoriesCompleted;
        
        /// <remarks/>
        public event FnNewPerformanceLogEntryCompletedEventHandler FnNewPerformanceLogEntryCompleted;
        
        /// <remarks/>
        public event FnGetPlogLinesCompletedEventHandler FnGetPlogLinesCompleted;
        
        /// <remarks/>
        public event FnGetSubPlogLinesCompletedEventHandler FnGetSubPlogLinesCompleted;
        
        /// <remarks/>
        public event FnSuggestPlogLinesCompletedEventHandler FnSuggestPlogLinesCompleted;
        
        /// <remarks/>
        public event FnSuggestPlogandSubPlogDataCompletedEventHandler FnSuggestPlogandSubPlogDataCompleted;
        
        /// <remarks/>
        public event FnUpdatePerformanceTargetLinesDetailsCompletedEventHandler FnUpdatePerformanceTargetLinesDetailsCompleted;
        
        /// <remarks/>
        public event FnRemovePerformanceLogLineCompletedEventHandler FnRemovePerformanceLogLineCompleted;
        
        /// <remarks/>
        public event FnInsertPlogSubActivitiesCompletedEventHandler FnInsertPlogSubActivitiesCompleted;
        
        /// <remarks/>
        public event FnSendPlogApprovalCompletedEventHandler FnSendPlogApprovalCompleted;
        
        /// <remarks/>
        public event FnCancelPlogApprovalCompletedEventHandler FnCancelPlogApprovalCompleted;
        
        /// <remarks/>
        public event FnNewStandardAppraisalCompletedEventHandler FnNewStandardAppraisalCompleted;
        
        /// <remarks/>
        public event FnLoadCompetenciesCompletedEventHandler FnLoadCompetenciesCompleted;
        
        /// <remarks/>
        public event FnAddEvaluationPIPCompletedEventHandler FnAddEvaluationPIPCompleted;
        
        /// <remarks/>
        public event FnGenerateStandardAppraisalReportCompletedEventHandler FnGenerateStandardAppraisalReportCompleted;
        
        /// <remarks/>
        public event FnGeneratePlogReportCompletedEventHandler FnGeneratePlogReportCompleted;
        
        /// <remarks/>
        public event FnGenerateIndividualPcReportCompletedEventHandler FnGenerateIndividualPcReportCompleted;
        
        /// <remarks/>
        public event FnGenerateIndividualPcSubIndicatorReportCompletedEventHandler FnGenerateIndividualPcSubIndicatorReportCompleted;
        
        /// <remarks/>
        public event FnInsertJDTargetsCompletedEventHandler FnInsertJDTargetsCompleted;
        
        /// <remarks/>
        public event FnSuggestJDCompletedEventHandler FnSuggestJDCompleted;
        
        /// <remarks/>
        public event FnGetAnnualWorkplanLinesCompletedEventHandler FnGetAnnualWorkplanLinesCompleted;
        
        /// <remarks/>
        public event FnInsertSelectedAdditionalActivitiesCompletedEventHandler FnInsertSelectedAdditionalActivitiesCompleted;
        
        /// <remarks/>
        public event FnGenerateCSPReportCompletedEventHandler FnGenerateCSPReportCompleted;
        
        /// <remarks/>
        public event FnGenerateAWPReportCompletedEventHandler FnGenerateAWPReportCompleted;
        
        /// <remarks/>
        public event FnGenerateBoardPCReportCompletedEventHandler FnGenerateBoardPCReportCompleted;
        
        /// <remarks/>
        public event FnSubmitStandardAppraisalCompletedEventHandler FnSubmitStandardAppraisalCompleted;
        
        /// <remarks/>
        public event FnCancelSubmitofStandardAppraisalCompletedEventHandler FnCancelSubmitofStandardAppraisalCompleted;
        
        /// <remarks/>
        public event FnSubmitStandardAppraisalObjCompletedEventHandler FnSubmitStandardAppraisalObjCompleted;
        
        /// <remarks/>
        public event FnSubmitStandardAppraisalPECompletedEventHandler FnSubmitStandardAppraisalPECompleted;
        
        /// <remarks/>
        public event FnInsertStandardAppraisalPIPCompletedEventHandler FnInsertStandardAppraisalPIPCompleted;
        
        /// <remarks/>
        public event FnEditStandardAppraisalPIPCompletedEventHandler FnEditStandardAppraisalPIPCompleted;
        
        /// <remarks/>
        public event FnRemoveStandardAppraisalPIPCompletedEventHandler FnRemoveStandardAppraisalPIPCompleted;
        
        /// <remarks/>
        public event FnInsertStandardAppraisalTrainigNeedsCompletedEventHandler FnInsertStandardAppraisalTrainigNeedsCompleted;
        
        /// <remarks/>
        public event FnRemoveStandardAppraisalTrainigNeedsCompletedEventHandler FnRemoveStandardAppraisalTrainigNeedsCompleted;
        
        /// <remarks/>
        public event FnEditStandardAppraisalTrainigNeedsCompletedEventHandler FnEditStandardAppraisalTrainigNeedsCompleted;
        
        /// <remarks/>
        public event FnSubmitStandardAppraisalConfirmationCompletedEventHandler FnSubmitStandardAppraisalConfirmationCompleted;
        
        /// <remarks/>
        public event FnSendAppraisalEmailCompletedEventHandler FnSendAppraisalEmailCompleted;
        
        /// <remarks/>
        public event AddTrainingParticipantsCompletedEventHandler AddTrainingParticipantsCompleted;
        
        /// <remarks/>
        public event EditTrainingParticipantsCompletedEventHandler EditTrainingParticipantsCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event CreatePettyCashCompletedEventHandler CreatePettyCashCompleted;
        
        /// <remarks/>
        public event CreatePettyCashLinesCompletedEventHandler CreatePettyCashLinesCompleted;
        
        /// <remarks/>
        public event PopulatePettyCashCompletedEventHandler PopulatePettyCashCompleted;
        
        /// <remarks/>
        public event EditPettyCashLinesCompletedEventHandler EditPettyCashLinesCompleted;
        
        /// <remarks/>
        public event DeletePettyCashLinesCompletedEventHandler DeletePettyCashLinesCompleted;
        
        /// <remarks/>
        public event SendPettyCashRequestApprovalCompletedEventHandler SendPettyCashRequestApprovalCompleted;
        
        /// <remarks/>
        public event CancelPettyCashRequestApprovalCompletedEventHandler CancelPettyCashRequestApprovalCompleted;
        
        /// <remarks/>
        public event UpdatePettyCashSurrenderLineCompletedEventHandler UpdatePettyCashSurrenderLineCompleted;
        
        /// <remarks/>
        public event SendPettyCashSurrenderApprovalCompletedEventHandler SendPettyCashSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event CancelPettyCashSurrenderApprovalCompletedEventHandler CancelPettyCashSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event CreateTrainingRequisitionCompletedEventHandler CreateTrainingRequisitionCompleted;
        
        /// <remarks/>
        public event AddTrainingParticipants2CompletedEventHandler AddTrainingParticipants2Completed;
        
        /// <remarks/>
        public event EditTrainingParticipants2CompletedEventHandler EditTrainingParticipants2Completed;
        
        /// <remarks/>
        public event DeleteTrainingParticipants2CompletedEventHandler DeleteTrainingParticipants2Completed;
        
        /// <remarks/>
        public event AddTrainingCost2CompletedEventHandler AddTrainingCost2Completed;
        
        /// <remarks/>
        public event DeleteTrainingcost2CompletedEventHandler DeleteTrainingcost2Completed;
        
        /// <remarks/>
        public event SendTrainingRequestApprovalCompletedEventHandler SendTrainingRequestApprovalCompleted;
        
        /// <remarks/>
        public event CancelTrainingRequestApprovalCompletedEventHandler CancelTrainingRequestApprovalCompleted;
        
        /// <remarks/>
        public event FnGenerateTrainingApplicationReportCompletedEventHandler FnGenerateTrainingApplicationReportCompleted;
        
        /// <remarks/>
        public event FnGenerateTrainingPlanReportCompletedEventHandler FnGenerateTrainingPlanReportCompleted;
        
        /// <remarks/>
        public event CreateNewTrainingRequestCompletedEventHandler CreateNewTrainingRequestCompleted;
        
        /// <remarks/>
        public event CreateNewTrainingNeedsLinesCompletedEventHandler CreateNewTrainingNeedsLinesCompleted;
        
        /// <remarks/>
        public event SendTrainingNeedsApprovalCompletedEventHandler SendTrainingNeedsApprovalCompleted;
        
        /// <remarks/>
        public event FnEditTrainingNeedsRequestLinesCompletedEventHandler FnEditTrainingNeedsRequestLinesCompleted;
        
        /// <remarks/>
        public event FnDeleteTrainingNeedsLinesCompletedEventHandler FnDeleteTrainingNeedsLinesCompleted;
        
        /// <remarks/>
        public event CreateNewTrainingFeedbackCompletedEventHandler CreateNewTrainingFeedbackCompleted;
        
        /// <remarks/>
        public event CreateTrainingFeedbackLinesCompletedEventHandler CreateTrainingFeedbackLinesCompleted;
        
        /// <remarks/>
        public event FnGenerateTrainingFeedbackReportCompletedEventHandler FnGenerateTrainingFeedbackReportCompleted;
        
        /// <remarks/>
        public event FnEditTrainingFeedbackLinesCompletedEventHandler FnEditTrainingFeedbackLinesCompleted;
        
        /// <remarks/>
        public event FnDeleteTrainingFeedbackLinesCompletedEventHandler FnDeleteTrainingFeedbackLinesCompleted;
        
        /// <remarks/>
        public event SubmitTrainingFeedbackCompletedEventHandler SubmitTrainingFeedbackCompleted;
        
        /// <remarks/>
        public event CreateNewTrainingEvaluationCompletedEventHandler CreateNewTrainingEvaluationCompleted;
        
        /// <remarks/>
        public event SubmitTrainingEvaluationCompletedEventHandler SubmitTrainingEvaluationCompleted;
        
        /// <remarks/>
        public event FnGenerateTrainingEvaluationReportCompletedEventHandler FnGenerateTrainingEvaluationReportCompleted;
        
        /// <remarks/>
        public event FnInsertEvaluationLinesCompletedEventHandler FnInsertEvaluationLinesCompleted;
        
        /// <remarks/>
        public event LeaveApplicationCompletedEventHandler LeaveApplicationCompleted;
        
        /// <remarks/>
        public event GeneratePayslipCompletedEventHandler GeneratePayslipCompleted;
        
        /// <remarks/>
        public event GenerateImprestMemoCompletedEventHandler GenerateImprestMemoCompleted;
        
        /// <remarks/>
        public event GenerateEmployeeStatementCompletedEventHandler GenerateEmployeeStatementCompleted;
        
        /// <remarks/>
        public event GenerateP9CompletedEventHandler GenerateP9Completed;
        
        /// <remarks/>
        public event GeneratePurchaseRequisitionCompletedEventHandler GeneratePurchaseRequisitionCompleted;
        
        /// <remarks/>
        public event GenerateStoreRequisitionCompletedEventHandler GenerateStoreRequisitionCompleted;
        
        /// <remarks/>
        public event GenerateIssueVoucherCompletedEventHandler GenerateIssueVoucherCompleted;
        
        /// <remarks/>
        public event GeneratePettyCashVoucherCompletedEventHandler GeneratePettyCashVoucherCompleted;
        
        /// <remarks/>
        public event GenerateStaffClaimCompletedEventHandler GenerateStaffClaimCompleted;
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event AddHobbyCompletedEventHandler AddHobbyCompleted;
        
        /// <remarks/>
        public event UpdateGeneralDetailsCompletedEventHandler UpdateGeneralDetailsCompleted;
        
        /// <remarks/>
        public event UpdatePersonalDetailsCompletedEventHandler UpdatePersonalDetailsCompleted;
        
        /// <remarks/>
        public event UpdateCommunicationDetailsCompletedEventHandler UpdateCommunicationDetailsCompleted;
        
        /// <remarks/>
        public event AddRefereeCompletedEventHandler AddRefereeCompleted;
        
        /// <remarks/>
        public event AddQualificationCompletedEventHandler AddQualificationCompleted;
        
        /// <remarks/>
        public event ApplyCompletedEventHandler ApplyCompleted;
        
        /// <remarks/>
        public event ImprestGeneralDetailsCompletedEventHandler ImprestGeneralDetailsCompleted;
        
        /// <remarks/>
        public event ImprestGeneralDetails1CompletedEventHandler ImprestGeneralDetails1Completed;
        
        /// <remarks/>
        public event GetImprestObjectiveCompletedEventHandler GetImprestObjectiveCompleted;
        
        /// <remarks/>
        public event AddTeamMemberCompletedEventHandler AddTeamMemberCompleted;
        
        /// <remarks/>
        public event AddTeamMember1CompletedEventHandler AddTeamMember1Completed;
        
        /// <remarks/>
        public event AddFuelCompletedEventHandler AddFuelCompleted;
        
        /// <remarks/>
        public event AddCasualsCompletedEventHandler AddCasualsCompleted;
        
        /// <remarks/>
        public event AddOtherCostsCompletedEventHandler AddOtherCostsCompleted;
        
        /// <remarks/>
        public event SendImprestMemoApprovalCompletedEventHandler SendImprestMemoApprovalCompleted;
        
        /// <remarks/>
        public event CreateImprestSurrenderCompletedEventHandler CreateImprestSurrenderCompleted;
        
        /// <remarks/>
        public event CreateImprestSurrender1CompletedEventHandler CreateImprestSurrender1Completed;
        
        /// <remarks/>
        public event PopulatePettyCashSurrenderCompletedEventHandler PopulatePettyCashSurrenderCompleted;
        
        /// <remarks/>
        public event SendImprestSurrenderApprovalCompletedEventHandler SendImprestSurrenderApprovalCompleted;
        
        /// <remarks/>
        public event UpdateSurrenderLineCompletedEventHandler UpdateSurrenderLineCompleted;
        
        /// <remarks/>
        public event CreateWorksPurchaseRequisitionCompletedEventHandler CreateWorksPurchaseRequisitionCompleted;
        
        /// <remarks/>
        public event CreatePurchaseRequisitionCompletedEventHandler CreatePurchaseRequisitionCompleted;
        
        /// <remarks/>
        public event CreatePurchaseStoreRequisitionCompletedEventHandler CreatePurchaseStoreRequisitionCompleted;
        
        /// <remarks/>
        public event CreateRequisitionLineCompletedEventHandler CreateRequisitionLineCompleted;
        
        /// <remarks/>
        public event SendPurchaseRequisitionApprovalCompletedEventHandler SendPurchaseRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event CreateFleetRequisitionCompletedEventHandler CreateFleetRequisitionCompleted;
        
        /// <remarks/>
        public event AddFleetRequisitionStaffCompletedEventHandler AddFleetRequisitionStaffCompleted;
        
        /// <remarks/>
        public event AddFleetRequisitionNonStaffCompletedEventHandler AddFleetRequisitionNonStaffCompleted;
        
        /// <remarks/>
        public event SendFleetRequisitionApprovalCompletedEventHandler SendFleetRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event RemoveStaffFromTravelRequisitionCompletedEventHandler RemoveStaffFromTravelRequisitionCompleted;
        
        /// <remarks/>
        public event RemoveMemberFromImprestMemoCompletedEventHandler RemoveMemberFromImprestMemoCompleted;
        
        /// <remarks/>
        public event EditTeamMemberCompletedEventHandler EditTeamMemberCompleted;
        
        /// <remarks/>
        public event RemoveFuelFromImprestMemoCompletedEventHandler RemoveFuelFromImprestMemoCompleted;
        
        /// <remarks/>
        public event EditFuelCompletedEventHandler EditFuelCompleted;
        
        /// <remarks/>
        public event RemoveCasualsCompletedEventHandler RemoveCasualsCompleted;
        
        /// <remarks/>
        public event EditCasualsCompletedEventHandler EditCasualsCompleted;
        
        /// <remarks/>
        public event RemoveOtherCostsCompletedEventHandler RemoveOtherCostsCompleted;
        
        /// <remarks/>
        public event EditOtherCostsCompletedEventHandler EditOtherCostsCompleted;
        
        /// <remarks/>
        public event GenerateLeaveFormCompletedEventHandler GenerateLeaveFormCompleted;
        
        /// <remarks/>
        public event SendRecordForApprovalCompletedEventHandler SendRecordForApprovalCompleted;
        
        /// <remarks/>
        public event CancelRecordApprovalCompletedEventHandler CancelRecordApprovalCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event DeleteRequisitionLineCompletedEventHandler DeleteRequisitionLineCompleted;
        
        /// <remarks/>
        public event SendStaffClaimApprovalCompletedEventHandler SendStaffClaimApprovalCompleted;
        
        /// <remarks/>
        public event ApproveStaffClaimCompletedEventHandler ApproveStaffClaimCompleted;
        
        /// <remarks/>
        public event CancelStaffClaimRecordApprovalCompletedEventHandler CancelStaffClaimRecordApprovalCompleted;
        
        /// <remarks/>
        public event CreateStaffClaimCompletedEventHandler CreateStaffClaimCompleted;
        
        /// <remarks/>
        public event CreateStaffClaim1CompletedEventHandler CreateStaffClaim1Completed;
        
        /// <remarks/>
        public event DeleteStaffClaimLineCompletedEventHandler DeleteStaffClaimLineCompleted;
        
        /// <remarks/>
        public event CreateStaffClaimLineCompletedEventHandler CreateStaffClaimLineCompleted;
        
        /// <remarks/>
        public event EditStaffClaimLineCompletedEventHandler EditStaffClaimLineCompleted;
        
        /// <remarks/>
        public event SendStoreRequisitionApprovalCompletedEventHandler SendStoreRequisitionApprovalCompleted;
        
        /// <remarks/>
        public event CreateStoreRequisitionLineCompletedEventHandler CreateStoreRequisitionLineCompleted;
        
        /// <remarks/>
        public event ApplyexternalHrJobsCompletedEventHandler ApplyexternalHrJobsCompleted;
        
        /// <remarks/>
        public event ApplyinternalHrJobsCompletedEventHandler ApplyinternalHrJobsCompleted;
        
        /// <remarks/>
        public event UpdateEmploymentHistoryCompletedEventHandler UpdateEmploymentHistoryCompleted;
        
        /// <remarks/>
        public event AddEmploymentHistoryCompletedEventHandler AddEmploymentHistoryCompleted;
        
        /// <remarks/>
        public event AddAcademicQualificationsCompletedEventHandler AddAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event AddProffessionalQualificationsCompletedEventHandler AddProffessionalQualificationsCompleted;
        
        /// <remarks/>
        public event AddTrainingAttendedCompletedEventHandler AddTrainingAttendedCompleted;
        
        /// <remarks/>
        public event AddProfessionalBodyCompletedEventHandler AddProfessionalBodyCompleted;
        
        /// <remarks/>
        public event AddApplicantAccomplishmentCompletedEventHandler AddApplicantAccomplishmentCompleted;
        
        /// <remarks/>
        public event AddAbilityDetailsCompletedEventHandler AddAbilityDetailsCompleted;
        
        /// <remarks/>
        public event CreateRefereeCompletedEventHandler CreateRefereeCompleted;
        
        /// <remarks/>
        public event AddCurrentDutiesSkillsCompletedEventHandler AddCurrentDutiesSkillsCompleted;
        
        /// <remarks/>
        public event AddOtherPersonalDetailsCompletedEventHandler AddOtherPersonalDetailsCompleted;
        
        /// <remarks/>
        public event AddDutiesDetailsCompletedEventHandler AddDutiesDetailsCompleted;
        
        /// <remarks/>
        public event DeleteAcademicLineCompletedEventHandler DeleteAcademicLineCompleted;
        
        /// <remarks/>
        public event DeleteProfessionalLineCompletedEventHandler DeleteProfessionalLineCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteTrainingParticipants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteTrainingParticipants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteTrainingParticipants(int id, string reqNo) {
            object[] results = this.Invoke("DeleteTrainingParticipants", new object[] {
                        id,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTrainingParticipantsAsync(int id, string reqNo) {
            this.DeleteTrainingParticipantsAsync(id, reqNo, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingParticipantsAsync(int id, string reqNo, object userState) {
            if ((this.DeleteTrainingParticipantsOperationCompleted == null)) {
                this.DeleteTrainingParticipantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingParticipantsOperationCompleted);
            }
            this.InvokeAsync("DeleteTrainingParticipants", new object[] {
                        id,
                        reqNo}, this.DeleteTrainingParticipantsOperationCompleted, userState);
        }
        
        private void OnDeleteTrainingParticipantsOperationCompleted(object arg) {
            if ((this.DeleteTrainingParticipantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingParticipantsCompleted(this, new DeleteTrainingParticipantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTrainingCost", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTrainingCost_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrainingCost(string docNo, int costcategory, decimal unitcost, int quantity, string description) {
            object[] results = this.Invoke("AddTrainingCost", new object[] {
                        docNo,
                        costcategory,
                        unitcost,
                        quantity,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingCostAsync(string docNo, int costcategory, decimal unitcost, int quantity, string description) {
            this.AddTrainingCostAsync(docNo, costcategory, unitcost, quantity, description, null);
        }
        
        /// <remarks/>
        public void AddTrainingCostAsync(string docNo, int costcategory, decimal unitcost, int quantity, string description, object userState) {
            if ((this.AddTrainingCostOperationCompleted == null)) {
                this.AddTrainingCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingCostOperationCompleted);
            }
            this.InvokeAsync("AddTrainingCost", new object[] {
                        docNo,
                        costcategory,
                        unitcost,
                        quantity,
                        description}, this.AddTrainingCostOperationCompleted, userState);
        }
        
        private void OnAddTrainingCostOperationCompleted(object arg) {
            if ((this.AddTrainingCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingCostCompleted(this, new AddTrainingCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveTrainingCost", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveTrainingCost_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveTrainingCost(string docNo, int lineno) {
            object[] results = this.Invoke("RemoveTrainingCost", new object[] {
                        docNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveTrainingCostAsync(string docNo, int lineno) {
            this.RemoveTrainingCostAsync(docNo, lineno, null);
        }
        
        /// <remarks/>
        public void RemoveTrainingCostAsync(string docNo, int lineno, object userState) {
            if ((this.RemoveTrainingCostOperationCompleted == null)) {
                this.RemoveTrainingCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTrainingCostOperationCompleted);
            }
            this.InvokeAsync("RemoveTrainingCost", new object[] {
                        docNo,
                        lineno}, this.RemoveTrainingCostOperationCompleted, userState);
        }
        
        private void OnRemoveTrainingCostOperationCompleted(object arg) {
            if ((this.RemoveTrainingCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveTrainingCostCompleted(this, new RemoveTrainingCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAppraisalSuggestObjectivesOutc" +
            "omes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAppraisalSuggestObjectivesOutcomes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAppraisalSuggestObjectivesOutcomes(string docNo) {
            object[] results = this.Invoke("FnAppraisalSuggestObjectivesOutcomes", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAppraisalSuggestObjectivesOutcomesAsync(string docNo) {
            this.FnAppraisalSuggestObjectivesOutcomesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnAppraisalSuggestObjectivesOutcomesAsync(string docNo, object userState) {
            if ((this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted == null)) {
                this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAppraisalSuggestObjectivesOutcomesOperationCompleted);
            }
            this.InvokeAsync("FnAppraisalSuggestObjectivesOutcomes", new object[] {
                        docNo}, this.FnAppraisalSuggestObjectivesOutcomesOperationCompleted, userState);
        }
        
        private void OnFnAppraisalSuggestObjectivesOutcomesOperationCompleted(object arg) {
            if ((this.FnAppraisalSuggestObjectivesOutcomesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAppraisalSuggestObjectivesOutcomesCompleted(this, new FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertSubObjectiveEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertSubObjectiveEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertSubObjectiveEvaluation(int lineno, string docNo, string initiativeNo, decimal finalTarget) {
            object[] results = this.Invoke("FnInsertSubObjectiveEvaluation", new object[] {
                        lineno,
                        docNo,
                        initiativeNo,
                        finalTarget});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertSubObjectiveEvaluationAsync(int lineno, string docNo, string initiativeNo, decimal finalTarget) {
            this.FnInsertSubObjectiveEvaluationAsync(lineno, docNo, initiativeNo, finalTarget, null);
        }
        
        /// <remarks/>
        public void FnInsertSubObjectiveEvaluationAsync(int lineno, string docNo, string initiativeNo, decimal finalTarget, object userState) {
            if ((this.FnInsertSubObjectiveEvaluationOperationCompleted == null)) {
                this.FnInsertSubObjectiveEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertSubObjectiveEvaluationOperationCompleted);
            }
            this.InvokeAsync("FnInsertSubObjectiveEvaluation", new object[] {
                        lineno,
                        docNo,
                        initiativeNo,
                        finalTarget}, this.FnInsertSubObjectiveEvaluationOperationCompleted, userState);
        }
        
        private void OnFnInsertSubObjectiveEvaluationOperationCompleted(object arg) {
            if ((this.FnInsertSubObjectiveEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertSubObjectiveEvaluationCompleted(this, new FnInsertSubObjectiveEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGetLastSubPcLineNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGetLastSubPcLineNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnGetLastSubPcLineNo() {
            object[] results = this.Invoke("FnGetLastSubPcLineNo", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetLastSubPcLineNoAsync() {
            this.FnGetLastSubPcLineNoAsync(null);
        }
        
        /// <remarks/>
        public void FnGetLastSubPcLineNoAsync(object userState) {
            if ((this.FnGetLastSubPcLineNoOperationCompleted == null)) {
                this.FnGetLastSubPcLineNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetLastSubPcLineNoOperationCompleted);
            }
            this.InvokeAsync("FnGetLastSubPcLineNo", new object[0], this.FnGetLastSubPcLineNoOperationCompleted, userState);
        }
        
        private void OnFnGetLastSubPcLineNoOperationCompleted(object arg) {
            if ((this.FnGetLastSubPcLineNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetLastSubPcLineNoCompleted(this, new FnGetLastSubPcLineNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnMergePdfs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnMergePdfs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnMergePdfs(string tenderNo, string finalDocument) {
            object[] results = this.Invoke("FnMergePdfs", new object[] {
                        tenderNo,
                        finalDocument});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnMergePdfsAsync(string tenderNo, string finalDocument) {
            this.FnMergePdfsAsync(tenderNo, finalDocument, null);
        }
        
        /// <remarks/>
        public void FnMergePdfsAsync(string tenderNo, string finalDocument, object userState) {
            if ((this.FnMergePdfsOperationCompleted == null)) {
                this.FnMergePdfsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnMergePdfsOperationCompleted);
            }
            this.InvokeAsync("FnMergePdfs", new object[] {
                        tenderNo,
                        finalDocument}, this.FnMergePdfsOperationCompleted, userState);
        }
        
        private void OnFnMergePdfsOperationCompleted(object arg) {
            if ((this.FnMergePdfsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnMergePdfsCompleted(this, new FnMergePdfsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCreateFolder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCreateFolder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateFolder(string tenderNo) {
            object[] results = this.Invoke("FnCreateFolder", new object[] {
                        tenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateFolderAsync(string tenderNo) {
            this.FnCreateFolderAsync(tenderNo, null);
        }
        
        /// <remarks/>
        public void FnCreateFolderAsync(string tenderNo, object userState) {
            if ((this.FnCreateFolderOperationCompleted == null)) {
                this.FnCreateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateFolderOperationCompleted);
            }
            this.InvokeAsync("FnCreateFolder", new object[] {
                        tenderNo}, this.FnCreateFolderOperationCompleted, userState);
        }
        
        private void OnFnCreateFolderOperationCompleted(object arg) {
            if ((this.FnCreateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateFolderCompleted(this, new FnCreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddICTHelpDeskSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddICTHelpDeskSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddICTHelpDeskSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddICTHelpDeskSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddICTHelpDeskSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddICTHelpDeskSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddICTHelpDeskSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddICTHelpDeskSharepointLinksOperationCompleted == null)) {
                this.AddICTHelpDeskSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddICTHelpDeskSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddICTHelpDeskSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddICTHelpDeskSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddICTHelpDeskSharepointLinksOperationCompleted(object arg) {
            if ((this.AddICTHelpDeskSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddICTHelpDeskSharepointLinksCompleted(this, new AddICTHelpDeskSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteTrainingLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteTrainingLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteTrainingLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteTrainingLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTrainingLineAsync(int id, string appNo) {
            this.DeleteTrainingLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteTrainingLineOperationCompleted == null)) {
                this.DeleteTrainingLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingLineOperationCompleted);
            }
            this.InvokeAsync("DeleteTrainingLine", new object[] {
                        id,
                        appNo}, this.DeleteTrainingLineOperationCompleted, userState);
        }
        
        private void OnDeleteTrainingLineOperationCompleted(object arg) {
            if ((this.DeleteTrainingLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingLineCompleted(this, new DeleteTrainingLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteProffessionalBodyLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteProffessionalBodyLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProffessionalBodyLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteProffessionalBodyLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProffessionalBodyLineAsync(int id, string appNo) {
            this.DeleteProffessionalBodyLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteProffessionalBodyLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteProffessionalBodyLineOperationCompleted == null)) {
                this.DeleteProffessionalBodyLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProffessionalBodyLineOperationCompleted);
            }
            this.InvokeAsync("DeleteProffessionalBodyLine", new object[] {
                        id,
                        appNo}, this.DeleteProffessionalBodyLineOperationCompleted, userState);
        }
        
        private void OnDeleteProffessionalBodyLineOperationCompleted(object arg) {
            if ((this.DeleteProffessionalBodyLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProffessionalBodyLineCompleted(this, new DeleteProffessionalBodyLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteEmploymentHistoryLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteEmploymentHistoryLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteEmploymentHistoryLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteEmploymentHistoryLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmploymentHistoryLineAsync(int id, string appNo) {
            this.DeleteEmploymentHistoryLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteEmploymentHistoryLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteEmploymentHistoryLineOperationCompleted == null)) {
                this.DeleteEmploymentHistoryLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmploymentHistoryLineOperationCompleted);
            }
            this.InvokeAsync("DeleteEmploymentHistoryLine", new object[] {
                        id,
                        appNo}, this.DeleteEmploymentHistoryLineOperationCompleted, userState);
        }
        
        private void OnDeleteEmploymentHistoryLineOperationCompleted(object arg) {
            if ((this.DeleteEmploymentHistoryLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmploymentHistoryLineCompleted(this, new DeleteEmploymentHistoryLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteRefereeLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteRefereeLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRefereeLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteRefereeLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRefereeLineAsync(int id, string appNo) {
            this.DeleteRefereeLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteRefereeLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteRefereeLineOperationCompleted == null)) {
                this.DeleteRefereeLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRefereeLineOperationCompleted);
            }
            this.InvokeAsync("DeleteRefereeLine", new object[] {
                        id,
                        appNo}, this.DeleteRefereeLineOperationCompleted, userState);
        }
        
        private void OnDeleteRefereeLineOperationCompleted(object arg) {
            if ((this.DeleteRefereeLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRefereeLineCompleted(this, new DeleteRefereeLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddDeclaration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddDeclaration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDeclaration(bool declaration, string appNo) {
            object[] results = this.Invoke("AddDeclaration", new object[] {
                        declaration,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDeclarationAsync(bool declaration, string appNo) {
            this.AddDeclarationAsync(declaration, appNo, null);
        }
        
        /// <remarks/>
        public void AddDeclarationAsync(bool declaration, string appNo, object userState) {
            if ((this.AddDeclarationOperationCompleted == null)) {
                this.AddDeclarationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDeclarationOperationCompleted);
            }
            this.InvokeAsync("AddDeclaration", new object[] {
                        declaration,
                        appNo}, this.AddDeclarationOperationCompleted, userState);
        }
        
        private void OnAddDeclarationOperationCompleted(object arg) {
            if ((this.AddDeclarationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDeclarationCompleted(this, new AddDeclarationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateProfileForExternalApplican" +
            "ts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateProfileForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateProfileForExternalApplicants(
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string email, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string altPhoneNo, 
                    string altEmail, 
                    string positionHeld, 
                    string currentEmployer, 
                    decimal grossSalary, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime effectiveDate) {
            object[] results = this.Invoke("CreateProfileForExternalApplicants", new object[] {
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        email,
                        religion,
                        idNumber,
                        phoneNo,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        altPhoneNo,
                        altEmail,
                        positionHeld,
                        currentEmployer,
                        grossSalary,
                        effectiveDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateProfileForExternalApplicantsAsync(
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string email, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string altPhoneNo, 
                    string altEmail, 
                    string positionHeld, 
                    string currentEmployer, 
                    decimal grossSalary, 
                    System.DateTime effectiveDate) {
            this.CreateProfileForExternalApplicantsAsync(surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, email, religion, idNumber, phoneNo, ethinc, postalAddress, postalAddressCode, city, expected_salary, registrationDetails, nhifNo, nssfNo, pinNo, altPhoneNo, altEmail, positionHeld, currentEmployer, grossSalary, effectiveDate, null);
        }
        
        /// <remarks/>
        public void CreateProfileForExternalApplicantsAsync(
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string email, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string altPhoneNo, 
                    string altEmail, 
                    string positionHeld, 
                    string currentEmployer, 
                    decimal grossSalary, 
                    System.DateTime effectiveDate, 
                    object userState) {
            if ((this.CreateProfileForExternalApplicantsOperationCompleted == null)) {
                this.CreateProfileForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateProfileForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("CreateProfileForExternalApplicants", new object[] {
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        email,
                        religion,
                        idNumber,
                        phoneNo,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        altPhoneNo,
                        altEmail,
                        positionHeld,
                        currentEmployer,
                        grossSalary,
                        effectiveDate}, this.CreateProfileForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnCreateProfileForExternalApplicantsOperationCompleted(object arg) {
            if ((this.CreateProfileForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateProfileForExternalApplicantsCompleted(this, new CreateProfileForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateAccountForExtenalApplicant" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateAccountForExtenalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateAccountForExtenalApplicants(string fname, string lname, string email, string password, string salt) {
            object[] results = this.Invoke("CreateAccountForExtenalApplicants", new object[] {
                        fname,
                        lname,
                        email,
                        password,
                        salt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccountForExtenalApplicantsAsync(string fname, string lname, string email, string password, string salt) {
            this.CreateAccountForExtenalApplicantsAsync(fname, lname, email, password, salt, null);
        }
        
        /// <remarks/>
        public void CreateAccountForExtenalApplicantsAsync(string fname, string lname, string email, string password, string salt, object userState) {
            if ((this.CreateAccountForExtenalApplicantsOperationCompleted == null)) {
                this.CreateAccountForExtenalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountForExtenalApplicantsOperationCompleted);
            }
            this.InvokeAsync("CreateAccountForExtenalApplicants", new object[] {
                        fname,
                        lname,
                        email,
                        password,
                        salt}, this.CreateAccountForExtenalApplicantsOperationCompleted, userState);
        }
        
        private void OnCreateAccountForExtenalApplicantsOperationCompleted(object arg) {
            if ((this.CreateAccountForExtenalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountForExtenalApplicantsCompleted(this, new CreateAccountForExtenalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ForgotPasswordtForExtenalApplica" +
            "nts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ForgotPasswordtForExtenalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ForgotPasswordtForExtenalApplicants(string email, string password, string salt) {
            object[] results = this.Invoke("ForgotPasswordtForExtenalApplicants", new object[] {
                        email,
                        password,
                        salt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ForgotPasswordtForExtenalApplicantsAsync(string email, string password, string salt) {
            this.ForgotPasswordtForExtenalApplicantsAsync(email, password, salt, null);
        }
        
        /// <remarks/>
        public void ForgotPasswordtForExtenalApplicantsAsync(string email, string password, string salt, object userState) {
            if ((this.ForgotPasswordtForExtenalApplicantsOperationCompleted == null)) {
                this.ForgotPasswordtForExtenalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgotPasswordtForExtenalApplicantsOperationCompleted);
            }
            this.InvokeAsync("ForgotPasswordtForExtenalApplicants", new object[] {
                        email,
                        password,
                        salt}, this.ForgotPasswordtForExtenalApplicantsOperationCompleted, userState);
        }
        
        private void OnForgotPasswordtForExtenalApplicantsOperationCompleted(object arg) {
            if ((this.ForgotPasswordtForExtenalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgotPasswordtForExtenalApplicantsCompleted(this, new ForgotPasswordtForExtenalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateIctRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateIctRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateIctRequest(string empNo, string description, string region, string tdepatrment, string tcategory) {
            object[] results = this.Invoke("CreateIctRequest", new object[] {
                        empNo,
                        description,
                        region,
                        tdepatrment,
                        tcategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateIctRequestAsync(string empNo, string description, string region, string tdepatrment, string tcategory) {
            this.CreateIctRequestAsync(empNo, description, region, tdepatrment, tcategory, null);
        }
        
        /// <remarks/>
        public void CreateIctRequestAsync(string empNo, string description, string region, string tdepatrment, string tcategory, object userState) {
            if ((this.CreateIctRequestOperationCompleted == null)) {
                this.CreateIctRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateIctRequestOperationCompleted);
            }
            this.InvokeAsync("CreateIctRequest", new object[] {
                        empNo,
                        description,
                        region,
                        tdepatrment,
                        tcategory}, this.CreateIctRequestOperationCompleted, userState);
        }
        
        private void OnCreateIctRequestOperationCompleted(object arg) {
            if ((this.CreateIctRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateIctRequestCompleted(this, new CreateIctRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ProvideIctfeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ProvideIctfeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ProvideIctfeedback(string appNo, string description) {
            object[] results = this.Invoke("ProvideIctfeedback", new object[] {
                        appNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProvideIctfeedbackAsync(string appNo, string description) {
            this.ProvideIctfeedbackAsync(appNo, description, null);
        }
        
        /// <remarks/>
        public void ProvideIctfeedbackAsync(string appNo, string description, object userState) {
            if ((this.ProvideIctfeedbackOperationCompleted == null)) {
                this.ProvideIctfeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProvideIctfeedbackOperationCompleted);
            }
            this.InvokeAsync("ProvideIctfeedback", new object[] {
                        appNo,
                        description}, this.ProvideIctfeedbackOperationCompleted, userState);
        }
        
        private void OnProvideIctfeedbackOperationCompleted(object arg) {
            if ((this.ProvideIctfeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProvideIctfeedbackCompleted(this, new ProvideIctfeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateIctRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateIctRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateIctRequest(string appNo, string description) {
            object[] results = this.Invoke("UpdateIctRequest", new object[] {
                        appNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateIctRequestAsync(string appNo, string description) {
            this.UpdateIctRequestAsync(appNo, description, null);
        }
        
        /// <remarks/>
        public void UpdateIctRequestAsync(string appNo, string description, object userState) {
            if ((this.UpdateIctRequestOperationCompleted == null)) {
                this.UpdateIctRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIctRequestOperationCompleted);
            }
            this.InvokeAsync("UpdateIctRequest", new object[] {
                        appNo,
                        description}, this.UpdateIctRequestOperationCompleted, userState);
        }
        
        private void OnUpdateIctRequestOperationCompleted(object arg) {
            if ((this.UpdateIctRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIctRequestCompleted(this, new UpdateIctRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ApplyexternalJob", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ApplyexternalJob_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyexternalJob(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails) {
            object[] results = this.Invoke("ApplyexternalJob", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyexternalJobAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails) {
            this.ApplyexternalJobAsync(jobId, surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, religion, idNumber, phoneNo, email, ethinc, postalAddress, postalAddressCode, city, expected_salary, registrationDetails, null);
        }
        
        /// <remarks/>
        public void ApplyexternalJobAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    object userState) {
            if ((this.ApplyexternalJobOperationCompleted == null)) {
                this.ApplyexternalJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyexternalJobOperationCompleted);
            }
            this.InvokeAsync("ApplyexternalJob", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails}, this.ApplyexternalJobOperationCompleted, userState);
        }
        
        private void OnApplyexternalJobOperationCompleted(object arg) {
            if ((this.ApplyexternalJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyexternalJobCompleted(this, new ApplyexternalJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GetItemsByLocation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GetItemsByLocation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetItemsByLocation(string location, string category) {
            object[] results = this.Invoke("GetItemsByLocation", new object[] {
                        location,
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemsByLocationAsync(string location, string category) {
            this.GetItemsByLocationAsync(location, category, null);
        }
        
        /// <remarks/>
        public void GetItemsByLocationAsync(string location, string category, object userState) {
            if ((this.GetItemsByLocationOperationCompleted == null)) {
                this.GetItemsByLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemsByLocationOperationCompleted);
            }
            this.InvokeAsync("GetItemsByLocation", new object[] {
                        location,
                        category}, this.GetItemsByLocationOperationCompleted, userState);
        }
        
        private void OnGetItemsByLocationOperationCompleted(object arg) {
            if ((this.GetItemsByLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemsByLocationCompleted(this, new GetItemsByLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GetItemDescByLocation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GetItemDescByLocation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetItemDescByLocation(string location, string category) {
            object[] results = this.Invoke("GetItemDescByLocation", new object[] {
                        location,
                        category});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemDescByLocationAsync(string location, string category) {
            this.GetItemDescByLocationAsync(location, category, null);
        }
        
        /// <remarks/>
        public void GetItemDescByLocationAsync(string location, string category, object userState) {
            if ((this.GetItemDescByLocationOperationCompleted == null)) {
                this.GetItemDescByLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemDescByLocationOperationCompleted);
            }
            this.InvokeAsync("GetItemDescByLocation", new object[] {
                        location,
                        category}, this.GetItemDescByLocationOperationCompleted, userState);
        }
        
        private void OnGetItemDescByLocationOperationCompleted(object arg) {
            if ((this.GetItemDescByLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemDescByLocationCompleted(this, new GetItemDescByLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AssignHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AssignHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AssignHelpdeskRequest(string jobNo, string assignee) {
            object[] results = this.Invoke("AssignHelpdeskRequest", new object[] {
                        jobNo,
                        assignee});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AssignHelpdeskRequestAsync(string jobNo, string assignee) {
            this.AssignHelpdeskRequestAsync(jobNo, assignee, null);
        }
        
        /// <remarks/>
        public void AssignHelpdeskRequestAsync(string jobNo, string assignee, object userState) {
            if ((this.AssignHelpdeskRequestOperationCompleted == null)) {
                this.AssignHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("AssignHelpdeskRequest", new object[] {
                        jobNo,
                        assignee}, this.AssignHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnAssignHelpdeskRequestOperationCompleted(object arg) {
            if ((this.AssignHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignHelpdeskRequestCompleted(this, new AssignHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EscalatedHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EscalatedHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EscalatedHelpdeskRequest(string jobNo, string assignee, string description) {
            object[] results = this.Invoke("EscalatedHelpdeskRequest", new object[] {
                        jobNo,
                        assignee,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EscalatedHelpdeskRequestAsync(string jobNo, string assignee, string description) {
            this.EscalatedHelpdeskRequestAsync(jobNo, assignee, description, null);
        }
        
        /// <remarks/>
        public void EscalatedHelpdeskRequestAsync(string jobNo, string assignee, string description, object userState) {
            if ((this.EscalatedHelpdeskRequestOperationCompleted == null)) {
                this.EscalatedHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEscalatedHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("EscalatedHelpdeskRequest", new object[] {
                        jobNo,
                        assignee,
                        description}, this.EscalatedHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnEscalatedHelpdeskRequestOperationCompleted(object arg) {
            if ((this.EscalatedHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EscalatedHelpdeskRequestCompleted(this, new EscalatedHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ResolveHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ResolveHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResolveHelpdeskRequest(string jobNo, string description) {
            object[] results = this.Invoke("ResolveHelpdeskRequest", new object[] {
                        jobNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResolveHelpdeskRequestAsync(string jobNo, string description) {
            this.ResolveHelpdeskRequestAsync(jobNo, description, null);
        }
        
        /// <remarks/>
        public void ResolveHelpdeskRequestAsync(string jobNo, string description, object userState) {
            if ((this.ResolveHelpdeskRequestOperationCompleted == null)) {
                this.ResolveHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("ResolveHelpdeskRequest", new object[] {
                        jobNo,
                        description}, this.ResolveHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnResolveHelpdeskRequestOperationCompleted(object arg) {
            if ((this.ResolveHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveHelpdeskRequestCompleted(this, new ResolveHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ReopenHelpdeskRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ReopenHelpdeskRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ReopenHelpdeskRequest(string jobNo, string description) {
            object[] results = this.Invoke("ReopenHelpdeskRequest", new object[] {
                        jobNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReopenHelpdeskRequestAsync(string jobNo, string description) {
            this.ReopenHelpdeskRequestAsync(jobNo, description, null);
        }
        
        /// <remarks/>
        public void ReopenHelpdeskRequestAsync(string jobNo, string description, object userState) {
            if ((this.ReopenHelpdeskRequestOperationCompleted == null)) {
                this.ReopenHelpdeskRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReopenHelpdeskRequestOperationCompleted);
            }
            this.InvokeAsync("ReopenHelpdeskRequest", new object[] {
                        jobNo,
                        description}, this.ReopenHelpdeskRequestOperationCompleted, userState);
        }
        
        private void OnReopenHelpdeskRequestOperationCompleted(object arg) {
            if ((this.ReopenHelpdeskRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReopenHelpdeskRequestCompleted(this, new ReopenHelpdeskRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddEmploymentHistoryForExternalA" +
            "pplcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddEmploymentHistoryForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddEmploymentHistoryForExternalApplcants([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string company, string designation, string jobGrade, string email) {
            object[] results = this.Invoke("AddEmploymentHistoryForExternalApplcants", new object[] {
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmploymentHistoryForExternalApplcantsAsync(System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string email) {
            this.AddEmploymentHistoryForExternalApplcantsAsync(startDate, endDate, company, designation, jobGrade, email, null);
        }
        
        /// <remarks/>
        public void AddEmploymentHistoryForExternalApplcantsAsync(System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string email, object userState) {
            if ((this.AddEmploymentHistoryForExternalApplcantsOperationCompleted == null)) {
                this.AddEmploymentHistoryForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmploymentHistoryForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("AddEmploymentHistoryForExternalApplcants", new object[] {
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        email}, this.AddEmploymentHistoryForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnAddEmploymentHistoryForExternalApplcantsOperationCompleted(object arg) {
            if ((this.AddEmploymentHistoryForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmploymentHistoryForExternalApplcantsCompleted(this, new AddEmploymentHistoryForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddAcademicQualificationsForExte" +
            "rnalApplcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddAcademicQualificationsForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAcademicQualificationsForExternalApplcants(string email, string institution, string awardAttainment, string specialization, string gradeAttained, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("AddAcademicQualificationsForExternalApplcants", new object[] {
                        email,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAcademicQualificationsForExternalApplcantsAsync(string email, string institution, string awardAttainment, string specialization, string gradeAttained, System.DateTime fromDate, System.DateTime toDate) {
            this.AddAcademicQualificationsForExternalApplcantsAsync(email, institution, awardAttainment, specialization, gradeAttained, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void AddAcademicQualificationsForExternalApplcantsAsync(string email, string institution, string awardAttainment, string specialization, string gradeAttained, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.AddAcademicQualificationsForExternalApplcantsOperationCompleted == null)) {
                this.AddAcademicQualificationsForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAcademicQualificationsForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("AddAcademicQualificationsForExternalApplcants", new object[] {
                        email,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        fromDate,
                        toDate}, this.AddAcademicQualificationsForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnAddAcademicQualificationsForExternalApplcantsOperationCompleted(object arg) {
            if ((this.AddAcademicQualificationsForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAcademicQualificationsForExternalApplcantsCompleted(this, new AddAcademicQualificationsForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddProffessionalQualificationsFo" +
            "rExternalApplcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddProffessionalQualificationsForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProffessionalQualificationsForExternalApplcants(string email, string institution, string awardAttainment, string specialization, string gradeAttained, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("AddProffessionalQualificationsForExternalApplcants", new object[] {
                        email,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProffessionalQualificationsForExternalApplcantsAsync(string email, string institution, string awardAttainment, string specialization, string gradeAttained, System.DateTime fromDate, System.DateTime toDate) {
            this.AddProffessionalQualificationsForExternalApplcantsAsync(email, institution, awardAttainment, specialization, gradeAttained, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void AddProffessionalQualificationsForExternalApplcantsAsync(string email, string institution, string awardAttainment, string specialization, string gradeAttained, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.AddProffessionalQualificationsForExternalApplcantsOperationCompleted == null)) {
                this.AddProffessionalQualificationsForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProffessionalQualificationsForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("AddProffessionalQualificationsForExternalApplcants", new object[] {
                        email,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        fromDate,
                        toDate}, this.AddProffessionalQualificationsForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnAddProffessionalQualificationsForExternalApplcantsOperationCompleted(object arg) {
            if ((this.AddProffessionalQualificationsForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProffessionalQualificationsForExternalApplcantsCompleted(this, new AddProffessionalQualificationsForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTrainingAttendedForExternalAp" +
            "plcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTrainingAttendedForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrainingAttendedForExternalApplcants([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate, string institution, string courseName, string email, string attained) {
            object[] results = this.Invoke("AddTrainingAttendedForExternalApplcants", new object[] {
                        fromDate,
                        toDate,
                        institution,
                        courseName,
                        email,
                        attained});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingAttendedForExternalApplcantsAsync(System.DateTime fromDate, System.DateTime toDate, string institution, string courseName, string email, string attained) {
            this.AddTrainingAttendedForExternalApplcantsAsync(fromDate, toDate, institution, courseName, email, attained, null);
        }
        
        /// <remarks/>
        public void AddTrainingAttendedForExternalApplcantsAsync(System.DateTime fromDate, System.DateTime toDate, string institution, string courseName, string email, string attained, object userState) {
            if ((this.AddTrainingAttendedForExternalApplcantsOperationCompleted == null)) {
                this.AddTrainingAttendedForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingAttendedForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("AddTrainingAttendedForExternalApplcants", new object[] {
                        fromDate,
                        toDate,
                        institution,
                        courseName,
                        email,
                        attained}, this.AddTrainingAttendedForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnAddTrainingAttendedForExternalApplcantsOperationCompleted(object arg) {
            if ((this.AddTrainingAttendedForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingAttendedForExternalApplcantsCompleted(this, new AddTrainingAttendedForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddProfessionalBodyForExternalAp" +
            "plcants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddProfessionalBodyForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProfessionalBodyForExternalApplcants(string email, string pBody, string mNo, string mType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime rDate) {
            object[] results = this.Invoke("AddProfessionalBodyForExternalApplcants", new object[] {
                        email,
                        pBody,
                        mNo,
                        mType,
                        rDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProfessionalBodyForExternalApplcantsAsync(string email, string pBody, string mNo, string mType, System.DateTime rDate) {
            this.AddProfessionalBodyForExternalApplcantsAsync(email, pBody, mNo, mType, rDate, null);
        }
        
        /// <remarks/>
        public void AddProfessionalBodyForExternalApplcantsAsync(string email, string pBody, string mNo, string mType, System.DateTime rDate, object userState) {
            if ((this.AddProfessionalBodyForExternalApplcantsOperationCompleted == null)) {
                this.AddProfessionalBodyForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProfessionalBodyForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("AddProfessionalBodyForExternalApplcants", new object[] {
                        email,
                        pBody,
                        mNo,
                        mType,
                        rDate}, this.AddProfessionalBodyForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnAddProfessionalBodyForExternalApplcantsOperationCompleted(object arg) {
            if ((this.AddProfessionalBodyForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProfessionalBodyForExternalApplcantsCompleted(this, new AddProfessionalBodyForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateRefereeForExternalApplcant" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateRefereeForExternalApplcants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRefereeForExternalApplcants(string email, string name, string occupation, string address, string postCode, string phone, string applicantEmail, string knownPeriod) {
            object[] results = this.Invoke("CreateRefereeForExternalApplcants", new object[] {
                        email,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        applicantEmail,
                        knownPeriod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRefereeForExternalApplcantsAsync(string email, string name, string occupation, string address, string postCode, string phone, string applicantEmail, string knownPeriod) {
            this.CreateRefereeForExternalApplcantsAsync(email, name, occupation, address, postCode, phone, applicantEmail, knownPeriod, null);
        }
        
        /// <remarks/>
        public void CreateRefereeForExternalApplcantsAsync(string email, string name, string occupation, string address, string postCode, string phone, string applicantEmail, string knownPeriod, object userState) {
            if ((this.CreateRefereeForExternalApplcantsOperationCompleted == null)) {
                this.CreateRefereeForExternalApplcantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRefereeForExternalApplcantsOperationCompleted);
            }
            this.InvokeAsync("CreateRefereeForExternalApplcants", new object[] {
                        email,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        applicantEmail,
                        knownPeriod}, this.CreateRefereeForExternalApplcantsOperationCompleted, userState);
        }
        
        private void OnCreateRefereeForExternalApplcantsOperationCompleted(object arg) {
            if ((this.CreateRefereeForExternalApplcantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRefereeForExternalApplcantsCompleted(this, new CreateRefereeForExternalApplcantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteAcademicLineForExternalApp" +
            "licants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteAcademicLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAcademicLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("DeleteAcademicLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAcademicLineForExternalApplicantsAsync(int id, string email) {
            this.DeleteAcademicLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void DeleteAcademicLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.DeleteAcademicLineForExternalApplicantsOperationCompleted == null)) {
                this.DeleteAcademicLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAcademicLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("DeleteAcademicLineForExternalApplicants", new object[] {
                        id,
                        email}, this.DeleteAcademicLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnDeleteAcademicLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.DeleteAcademicLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAcademicLineForExternalApplicantsCompleted(this, new DeleteAcademicLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteProfessionalLineForExterna" +
            "lApplicants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteProfessionalLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProfessionalLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("DeleteProfessionalLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProfessionalLineForExternalApplicantsAsync(int id, string email) {
            this.DeleteProfessionalLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void DeleteProfessionalLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.DeleteProfessionalLineForExternalApplicantsOperationCompleted == null)) {
                this.DeleteProfessionalLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProfessionalLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("DeleteProfessionalLineForExternalApplicants", new object[] {
                        id,
                        email}, this.DeleteProfessionalLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnDeleteProfessionalLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.DeleteProfessionalLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProfessionalLineForExternalApplicantsCompleted(this, new DeleteProfessionalLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteTrainingLineForExternalApp" +
            "licants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteTrainingLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteTrainingLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("DeleteTrainingLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTrainingLineForExternalApplicantsAsync(int id, string email) {
            this.DeleteTrainingLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.DeleteTrainingLineForExternalApplicantsOperationCompleted == null)) {
                this.DeleteTrainingLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("DeleteTrainingLineForExternalApplicants", new object[] {
                        id,
                        email}, this.DeleteTrainingLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnDeleteTrainingLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.DeleteTrainingLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingLineForExternalApplicantsCompleted(this, new DeleteTrainingLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteProffessionalBodyLineForEx" +
            "ternalApplicants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteProffessionalBodyLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProffessionalBodyLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("DeleteProffessionalBodyLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProffessionalBodyLineForExternalApplicantsAsync(int id, string email) {
            this.DeleteProffessionalBodyLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void DeleteProffessionalBodyLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.DeleteProffessionalBodyLineForExternalApplicantsOperationCompleted == null)) {
                this.DeleteProffessionalBodyLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProffessionalBodyLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("DeleteProffessionalBodyLineForExternalApplicants", new object[] {
                        id,
                        email}, this.DeleteProffessionalBodyLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnDeleteProffessionalBodyLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.DeleteProffessionalBodyLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProffessionalBodyLineForExternalApplicantsCompleted(this, new DeleteProffessionalBodyLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteEmploymentHistoryLineForEx" +
            "ternalApplicants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteEmploymentHistoryLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteEmploymentHistoryLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("DeleteEmploymentHistoryLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmploymentHistoryLineForExternalApplicantsAsync(int id, string email) {
            this.DeleteEmploymentHistoryLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void DeleteEmploymentHistoryLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.DeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted == null)) {
                this.DeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("DeleteEmploymentHistoryLineForExternalApplicants", new object[] {
                        id,
                        email}, this.DeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnDeleteEmploymentHistoryLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.DeleteEmploymentHistoryLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmploymentHistoryLineForExternalApplicantsCompleted(this, new DeleteEmploymentHistoryLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteRefereeLineForExternalAppl" +
            "icants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteRefereeLineForExternalApplicants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRefereeLineForExternalApplicants(int id, string email) {
            object[] results = this.Invoke("DeleteRefereeLineForExternalApplicants", new object[] {
                        id,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRefereeLineForExternalApplicantsAsync(int id, string email) {
            this.DeleteRefereeLineForExternalApplicantsAsync(id, email, null);
        }
        
        /// <remarks/>
        public void DeleteRefereeLineForExternalApplicantsAsync(int id, string email, object userState) {
            if ((this.DeleteRefereeLineForExternalApplicantsOperationCompleted == null)) {
                this.DeleteRefereeLineForExternalApplicantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRefereeLineForExternalApplicantsOperationCompleted);
            }
            this.InvokeAsync("DeleteRefereeLineForExternalApplicants", new object[] {
                        id,
                        email}, this.DeleteRefereeLineForExternalApplicantsOperationCompleted, userState);
        }
        
        private void OnDeleteRefereeLineForExternalApplicantsOperationCompleted(object arg) {
            if ((this.DeleteRefereeLineForExternalApplicantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRefereeLineForExternalApplicantsCompleted(this, new DeleteRefereeLineForExternalApplicantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ApplyOnline", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ApplyOnline_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyOnline(string email, string jobId) {
            object[] results = this.Invoke("ApplyOnline", new object[] {
                        email,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyOnlineAsync(string email, string jobId) {
            this.ApplyOnlineAsync(email, jobId, null);
        }
        
        /// <remarks/>
        public void ApplyOnlineAsync(string email, string jobId, object userState) {
            if ((this.ApplyOnlineOperationCompleted == null)) {
                this.ApplyOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyOnlineOperationCompleted);
            }
            this.InvokeAsync("ApplyOnline", new object[] {
                        email,
                        jobId}, this.ApplyOnlineOperationCompleted, userState);
        }
        
        private void OnApplyOnlineOperationCompleted(object arg) {
            if ((this.ApplyOnlineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyOnlineCompleted(this, new ApplyOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFavouriteJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFavouriteJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFavouriteJobs(string email, string jobId, string jobDesc) {
            object[] results = this.Invoke("AddFavouriteJobs", new object[] {
                        email,
                        jobId,
                        jobDesc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFavouriteJobsAsync(string email, string jobId, string jobDesc) {
            this.AddFavouriteJobsAsync(email, jobId, jobDesc, null);
        }
        
        /// <remarks/>
        public void AddFavouriteJobsAsync(string email, string jobId, string jobDesc, object userState) {
            if ((this.AddFavouriteJobsOperationCompleted == null)) {
                this.AddFavouriteJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFavouriteJobsOperationCompleted);
            }
            this.InvokeAsync("AddFavouriteJobs", new object[] {
                        email,
                        jobId,
                        jobDesc}, this.AddFavouriteJobsOperationCompleted, userState);
        }
        
        private void OnAddFavouriteJobsOperationCompleted(object arg) {
            if ((this.AddFavouriteJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFavouriteJobsCompleted(this, new AddFavouriteJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteFavouriteJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteFavouriteJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteFavouriteJobs(int id, string jobId) {
            object[] results = this.Invoke("DeleteFavouriteJobs", new object[] {
                        id,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFavouriteJobsAsync(int id, string jobId) {
            this.DeleteFavouriteJobsAsync(id, jobId, null);
        }
        
        /// <remarks/>
        public void DeleteFavouriteJobsAsync(int id, string jobId, object userState) {
            if ((this.DeleteFavouriteJobsOperationCompleted == null)) {
                this.DeleteFavouriteJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFavouriteJobsOperationCompleted);
            }
            this.InvokeAsync("DeleteFavouriteJobs", new object[] {
                        id,
                        jobId}, this.DeleteFavouriteJobsOperationCompleted, userState);
        }
        
        private void OnDeleteFavouriteJobsOperationCompleted(object arg) {
            if ((this.DeleteFavouriteJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFavouriteJobsCompleted(this, new DeleteFavouriteJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddImprestSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddImprestSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddImprestSharepointLinks(string imprestno, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddImprestSharepointLinks", new object[] {
                        imprestno,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddImprestSharepointLinksAsync(string imprestno, string filename, string sharepointlink) {
            this.AddImprestSharepointLinksAsync(imprestno, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddImprestSharepointLinksAsync(string imprestno, string filename, string sharepointlink, object userState) {
            if ((this.AddImprestSharepointLinksOperationCompleted == null)) {
                this.AddImprestSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddImprestSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddImprestSharepointLinks", new object[] {
                        imprestno,
                        filename,
                        sharepointlink}, this.AddImprestSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddImprestSharepointLinksOperationCompleted(object arg) {
            if ((this.AddImprestSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddImprestSharepointLinksCompleted(this, new AddImprestSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddStoreRequsitionSharepointLink" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddStoreRequsitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStoreRequsitionSharepointLinks(string storerequsitionnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddStoreRequsitionSharepointLinks", new object[] {
                        storerequsitionnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStoreRequsitionSharepointLinksAsync(string storerequsitionnumber, string filename, string sharepointlink) {
            this.AddStoreRequsitionSharepointLinksAsync(storerequsitionnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddStoreRequsitionSharepointLinksAsync(string storerequsitionnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddStoreRequsitionSharepointLinksOperationCompleted == null)) {
                this.AddStoreRequsitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStoreRequsitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddStoreRequsitionSharepointLinks", new object[] {
                        storerequsitionnumber,
                        filename,
                        sharepointlink}, this.AddStoreRequsitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddStoreRequsitionSharepointLinksOperationCompleted(object arg) {
            if ((this.AddStoreRequsitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStoreRequsitionSharepointLinksCompleted(this, new AddStoreRequsitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddStaffClaimSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddStaffClaimSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStaffClaimSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddStaffClaimSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStaffClaimSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddStaffClaimSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddStaffClaimSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddStaffClaimSharepointLinksOperationCompleted == null)) {
                this.AddStaffClaimSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStaffClaimSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddStaffClaimSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddStaffClaimSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddStaffClaimSharepointLinksOperationCompleted(object arg) {
            if ((this.AddStaffClaimSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStaffClaimSharepointLinksCompleted(this, new AddStaffClaimSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddLeaveSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddLeaveSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLeaveSharepointLinks(string leaveno, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddLeaveSharepointLinks", new object[] {
                        leaveno,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLeaveSharepointLinksAsync(string leaveno, string filename, string sharepointlink) {
            this.AddLeaveSharepointLinksAsync(leaveno, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddLeaveSharepointLinksAsync(string leaveno, string filename, string sharepointlink, object userState) {
            if ((this.AddLeaveSharepointLinksOperationCompleted == null)) {
                this.AddLeaveSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLeaveSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddLeaveSharepointLinks", new object[] {
                        leaveno,
                        filename,
                        sharepointlink}, this.AddLeaveSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddLeaveSharepointLinksOperationCompleted(object arg) {
            if ((this.AddLeaveSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLeaveSharepointLinksCompleted(this, new AddLeaveSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddImprestSurrenderSharepointLin" +
            "ks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddImprestSurrenderSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddImprestSurrenderSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddImprestSurrenderSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddImprestSurrenderSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddImprestSurrenderSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddImprestSurrenderSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddImprestSurrenderSharepointLinksOperationCompleted == null)) {
                this.AddImprestSurrenderSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddImprestSurrenderSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddImprestSurrenderSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddImprestSurrenderSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddImprestSurrenderSharepointLinksOperationCompleted(object arg) {
            if ((this.AddImprestSurrenderSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddImprestSurrenderSharepointLinksCompleted(this, new AddImprestSurrenderSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddPurchaseRequisitionSharepoint" +
            "Links", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddPurchaseRequisitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPurchaseRequisitionSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddPurchaseRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPurchaseRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddPurchaseRequisitionSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddPurchaseRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddPurchaseRequisitionSharepointLinksOperationCompleted == null)) {
                this.AddPurchaseRequisitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPurchaseRequisitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddPurchaseRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddPurchaseRequisitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddPurchaseRequisitionSharepointLinksOperationCompleted(object arg) {
            if ((this.AddPurchaseRequisitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPurchaseRequisitionSharepointLinksCompleted(this, new AddPurchaseRequisitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFleetRequisitionSharepointLin" +
            "ks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFleetRequisitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFleetRequisitionSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddFleetRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddFleetRequisitionSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddFleetRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddFleetRequisitionSharepointLinksOperationCompleted == null)) {
                this.AddFleetRequisitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetRequisitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddFleetRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddFleetRequisitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddFleetRequisitionSharepointLinksOperationCompleted(object arg) {
            if ((this.AddFleetRequisitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetRequisitionSharepointLinksCompleted(this, new AddFleetRequisitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTrainingRequisitionSharepoint" +
            "Links", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTrainingRequisitionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrainingRequisitionSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddTrainingRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddTrainingRequisitionSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddTrainingRequisitionSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddTrainingRequisitionSharepointLinksOperationCompleted == null)) {
                this.AddTrainingRequisitionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingRequisitionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddTrainingRequisitionSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddTrainingRequisitionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddTrainingRequisitionSharepointLinksOperationCompleted(object arg) {
            if ((this.AddTrainingRequisitionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingRequisitionSharepointLinksCompleted(this, new AddTrainingRequisitionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddPettyCashSharepointLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddPettyCashSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPettyCashSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddPettyCashSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPettyCashSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddPettyCashSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddPettyCashSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddPettyCashSharepointLinksOperationCompleted == null)) {
                this.AddPettyCashSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPettyCashSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddPettyCashSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddPettyCashSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddPettyCashSharepointLinksOperationCompleted(object arg) {
            if ((this.AddPettyCashSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPettyCashSharepointLinksCompleted(this, new AddPettyCashSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddPettyCashSurrenderSharepointL" +
            "inks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddPettyCashSurrenderSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPettyCashSurrenderSharepointLinks(string staffclaimnumber, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddPettyCashSurrenderSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPettyCashSurrenderSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink) {
            this.AddPettyCashSurrenderSharepointLinksAsync(staffclaimnumber, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddPettyCashSurrenderSharepointLinksAsync(string staffclaimnumber, string filename, string sharepointlink, object userState) {
            if ((this.AddPettyCashSurrenderSharepointLinksOperationCompleted == null)) {
                this.AddPettyCashSurrenderSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPettyCashSurrenderSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddPettyCashSurrenderSharepointLinks", new object[] {
                        staffclaimnumber,
                        filename,
                        sharepointlink}, this.AddPettyCashSurrenderSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddPettyCashSurrenderSharepointLinksOperationCompleted(object arg) {
            if ((this.AddPettyCashSurrenderSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPettyCashSurrenderSharepointLinksCompleted(this, new AddPettyCashSurrenderSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCreateStaffClaimApprovalReques" +
            "ts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCreateStaffClaimApprovalRequests_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateStaffClaimApprovalRequests(string employeeno, string staffClaimNo) {
            object[] results = this.Invoke("FnCreateStaffClaimApprovalRequests", new object[] {
                        employeeno,
                        staffClaimNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateStaffClaimApprovalRequestsAsync(string employeeno, string staffClaimNo) {
            this.FnCreateStaffClaimApprovalRequestsAsync(employeeno, staffClaimNo, null);
        }
        
        /// <remarks/>
        public void FnCreateStaffClaimApprovalRequestsAsync(string employeeno, string staffClaimNo, object userState) {
            if ((this.FnCreateStaffClaimApprovalRequestsOperationCompleted == null)) {
                this.FnCreateStaffClaimApprovalRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateStaffClaimApprovalRequestsOperationCompleted);
            }
            this.InvokeAsync("FnCreateStaffClaimApprovalRequests", new object[] {
                        employeeno,
                        staffClaimNo}, this.FnCreateStaffClaimApprovalRequestsOperationCompleted, userState);
        }
        
        private void OnFnCreateStaffClaimApprovalRequestsOperationCompleted(object arg) {
            if ((this.FnCreateStaffClaimApprovalRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateStaffClaimApprovalRequestsCompleted(this, new FnCreateStaffClaimApprovalRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SuggestLinesFromWorksRequisition" +
            "Template", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SuggestLinesFromWorksRequisitionTemplate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SuggestLinesFromWorksRequisitionTemplate(string docNo, string templateId) {
            object[] results = this.Invoke("SuggestLinesFromWorksRequisitionTemplate", new object[] {
                        docNo,
                        templateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SuggestLinesFromWorksRequisitionTemplateAsync(string docNo, string templateId) {
            this.SuggestLinesFromWorksRequisitionTemplateAsync(docNo, templateId, null);
        }
        
        /// <remarks/>
        public void SuggestLinesFromWorksRequisitionTemplateAsync(string docNo, string templateId, object userState) {
            if ((this.SuggestLinesFromWorksRequisitionTemplateOperationCompleted == null)) {
                this.SuggestLinesFromWorksRequisitionTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuggestLinesFromWorksRequisitionTemplateOperationCompleted);
            }
            this.InvokeAsync("SuggestLinesFromWorksRequisitionTemplate", new object[] {
                        docNo,
                        templateId}, this.SuggestLinesFromWorksRequisitionTemplateOperationCompleted, userState);
        }
        
        private void OnSuggestLinesFromWorksRequisitionTemplateOperationCompleted(object arg) {
            if ((this.SuggestLinesFromWorksRequisitionTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuggestLinesFromWorksRequisitionTemplateCompleted(this, new SuggestLinesFromWorksRequisitionTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SuggestPersonnelEquipmentSpecifi" +
            "cation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SuggestPersonnelEquipmentSpecification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SuggestPersonnelEquipmentSpecification(string docNo, string projectTemplateId, string workTemplateId) {
            object[] results = this.Invoke("SuggestPersonnelEquipmentSpecification", new object[] {
                        docNo,
                        projectTemplateId,
                        workTemplateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SuggestPersonnelEquipmentSpecificationAsync(string docNo, string projectTemplateId, string workTemplateId) {
            this.SuggestPersonnelEquipmentSpecificationAsync(docNo, projectTemplateId, workTemplateId, null);
        }
        
        /// <remarks/>
        public void SuggestPersonnelEquipmentSpecificationAsync(string docNo, string projectTemplateId, string workTemplateId, object userState) {
            if ((this.SuggestPersonnelEquipmentSpecificationOperationCompleted == null)) {
                this.SuggestPersonnelEquipmentSpecificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuggestPersonnelEquipmentSpecificationOperationCompleted);
            }
            this.InvokeAsync("SuggestPersonnelEquipmentSpecification", new object[] {
                        docNo,
                        projectTemplateId,
                        workTemplateId}, this.SuggestPersonnelEquipmentSpecificationOperationCompleted, userState);
        }
        
        private void OnSuggestPersonnelEquipmentSpecificationOperationCompleted(object arg) {
            if ((this.SuggestPersonnelEquipmentSpecificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuggestPersonnelEquipmentSpecificationCompleted(this, new SuggestPersonnelEquipmentSpecificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SuggestLinesFromRequisitionTempl" +
            "ate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SuggestLinesFromRequisitionTemplate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SuggestLinesFromRequisitionTemplate(string docNo, string templateId) {
            object[] results = this.Invoke("SuggestLinesFromRequisitionTemplate", new object[] {
                        docNo,
                        templateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SuggestLinesFromRequisitionTemplateAsync(string docNo, string templateId) {
            this.SuggestLinesFromRequisitionTemplateAsync(docNo, templateId, null);
        }
        
        /// <remarks/>
        public void SuggestLinesFromRequisitionTemplateAsync(string docNo, string templateId, object userState) {
            if ((this.SuggestLinesFromRequisitionTemplateOperationCompleted == null)) {
                this.SuggestLinesFromRequisitionTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSuggestLinesFromRequisitionTemplateOperationCompleted);
            }
            this.InvokeAsync("SuggestLinesFromRequisitionTemplate", new object[] {
                        docNo,
                        templateId}, this.SuggestLinesFromRequisitionTemplateOperationCompleted, userState);
        }
        
        private void OnSuggestLinesFromRequisitionTemplateOperationCompleted(object arg) {
            if ((this.SuggestLinesFromRequisitionTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SuggestLinesFromRequisitionTemplateCompleted(this, new SuggestLinesFromRequisitionTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateRequisitionLines(int id, string reqNo, decimal amount, decimal qty) {
            object[] results = this.Invoke("UpdateRequisitionLines", new object[] {
                        id,
                        reqNo,
                        amount,
                        qty});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRequisitionLinesAsync(int id, string reqNo, decimal amount, decimal qty) {
            this.UpdateRequisitionLinesAsync(id, reqNo, amount, qty, null);
        }
        
        /// <remarks/>
        public void UpdateRequisitionLinesAsync(int id, string reqNo, decimal amount, decimal qty, object userState) {
            if ((this.UpdateRequisitionLinesOperationCompleted == null)) {
                this.UpdateRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("UpdateRequisitionLines", new object[] {
                        id,
                        reqNo,
                        amount,
                        qty}, this.UpdateRequisitionLinesOperationCompleted, userState);
        }
        
        private void OnUpdateRequisitionLinesOperationCompleted(object arg) {
            if ((this.UpdateRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRequisitionLinesCompleted(this, new UpdateRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeletePurchaseRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeletePurchaseRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeletePurchaseRequisitionLines(int id, string reqNo) {
            object[] results = this.Invoke("DeletePurchaseRequisitionLines", new object[] {
                        id,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePurchaseRequisitionLinesAsync(int id, string reqNo) {
            this.DeletePurchaseRequisitionLinesAsync(id, reqNo, null);
        }
        
        /// <remarks/>
        public void DeletePurchaseRequisitionLinesAsync(int id, string reqNo, object userState) {
            if ((this.DeletePurchaseRequisitionLinesOperationCompleted == null)) {
                this.DeletePurchaseRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePurchaseRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("DeletePurchaseRequisitionLines", new object[] {
                        id,
                        reqNo}, this.DeletePurchaseRequisitionLinesOperationCompleted, userState);
        }
        
        private void OnDeletePurchaseRequisitionLinesOperationCompleted(object arg) {
            if ((this.DeletePurchaseRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePurchaseRequisitionLinesCompleted(this, new DeletePurchaseRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddProjectDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddProjectDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProjectDetails(string docNo, string projectTemplateId, string workTemplate, string roadCode, string linkName, string constituency, decimal workLength) {
            object[] results = this.Invoke("AddProjectDetails", new object[] {
                        docNo,
                        projectTemplateId,
                        workTemplate,
                        roadCode,
                        linkName,
                        constituency,
                        workLength});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProjectDetailsAsync(string docNo, string projectTemplateId, string workTemplate, string roadCode, string linkName, string constituency, decimal workLength) {
            this.AddProjectDetailsAsync(docNo, projectTemplateId, workTemplate, roadCode, linkName, constituency, workLength, null);
        }
        
        /// <remarks/>
        public void AddProjectDetailsAsync(string docNo, string projectTemplateId, string workTemplate, string roadCode, string linkName, string constituency, decimal workLength, object userState) {
            if ((this.AddProjectDetailsOperationCompleted == null)) {
                this.AddProjectDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProjectDetailsOperationCompleted);
            }
            this.InvokeAsync("AddProjectDetails", new object[] {
                        docNo,
                        projectTemplateId,
                        workTemplate,
                        roadCode,
                        linkName,
                        constituency,
                        workLength}, this.AddProjectDetailsOperationCompleted, userState);
        }
        
        private void OnAddProjectDetailsOperationCompleted(object arg) {
            if ((this.AddProjectDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProjectDetailsCompleted(this, new AddProjectDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdatePersonnelSpecifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdatePersonnelSpecifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePersonnelSpecifications(int id, string docNo, int noOfStafff, string desc) {
            object[] results = this.Invoke("UpdatePersonnelSpecifications", new object[] {
                        id,
                        docNo,
                        noOfStafff,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePersonnelSpecificationsAsync(int id, string docNo, int noOfStafff, string desc) {
            this.UpdatePersonnelSpecificationsAsync(id, docNo, noOfStafff, desc, null);
        }
        
        /// <remarks/>
        public void UpdatePersonnelSpecificationsAsync(int id, string docNo, int noOfStafff, string desc, object userState) {
            if ((this.UpdatePersonnelSpecificationsOperationCompleted == null)) {
                this.UpdatePersonnelSpecificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePersonnelSpecificationsOperationCompleted);
            }
            this.InvokeAsync("UpdatePersonnelSpecifications", new object[] {
                        id,
                        docNo,
                        noOfStafff,
                        desc}, this.UpdatePersonnelSpecificationsOperationCompleted, userState);
        }
        
        private void OnUpdatePersonnelSpecificationsOperationCompleted(object arg) {
            if ((this.UpdatePersonnelSpecificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePersonnelSpecificationsCompleted(this, new UpdatePersonnelSpecificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeletePersonnelSpecifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeletePersonnelSpecifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeletePersonnelSpecifications(int id, string docNo, string desc) {
            object[] results = this.Invoke("DeletePersonnelSpecifications", new object[] {
                        id,
                        docNo,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePersonnelSpecificationsAsync(int id, string docNo, string desc) {
            this.DeletePersonnelSpecificationsAsync(id, docNo, desc, null);
        }
        
        /// <remarks/>
        public void DeletePersonnelSpecificationsAsync(int id, string docNo, string desc, object userState) {
            if ((this.DeletePersonnelSpecificationsOperationCompleted == null)) {
                this.DeletePersonnelSpecificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePersonnelSpecificationsOperationCompleted);
            }
            this.InvokeAsync("DeletePersonnelSpecifications", new object[] {
                        id,
                        docNo,
                        desc}, this.DeletePersonnelSpecificationsOperationCompleted, userState);
        }
        
        private void OnDeletePersonnelSpecificationsOperationCompleted(object arg) {
            if ((this.DeletePersonnelSpecificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePersonnelSpecificationsCompleted(this, new DeletePersonnelSpecificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateEquipmentSpecifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateEquipmentSpecifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateEquipmentSpecifications(int id, string docNo, decimal qty) {
            object[] results = this.Invoke("UpdateEquipmentSpecifications", new object[] {
                        id,
                        docNo,
                        qty});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEquipmentSpecificationsAsync(int id, string docNo, decimal qty) {
            this.UpdateEquipmentSpecificationsAsync(id, docNo, qty, null);
        }
        
        /// <remarks/>
        public void UpdateEquipmentSpecificationsAsync(int id, string docNo, decimal qty, object userState) {
            if ((this.UpdateEquipmentSpecificationsOperationCompleted == null)) {
                this.UpdateEquipmentSpecificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEquipmentSpecificationsOperationCompleted);
            }
            this.InvokeAsync("UpdateEquipmentSpecifications", new object[] {
                        id,
                        docNo,
                        qty}, this.UpdateEquipmentSpecificationsOperationCompleted, userState);
        }
        
        private void OnUpdateEquipmentSpecificationsOperationCompleted(object arg) {
            if ((this.UpdateEquipmentSpecificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEquipmentSpecificationsCompleted(this, new UpdateEquipmentSpecificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteEquipmentSpecifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteEquipmentSpecifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteEquipmentSpecifications(int id, string docNo) {
            object[] results = this.Invoke("DeleteEquipmentSpecifications", new object[] {
                        id,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEquipmentSpecificationsAsync(int id, string docNo) {
            this.DeleteEquipmentSpecificationsAsync(id, docNo, null);
        }
        
        /// <remarks/>
        public void DeleteEquipmentSpecificationsAsync(int id, string docNo, object userState) {
            if ((this.DeleteEquipmentSpecificationsOperationCompleted == null)) {
                this.DeleteEquipmentSpecificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEquipmentSpecificationsOperationCompleted);
            }
            this.InvokeAsync("DeleteEquipmentSpecifications", new object[] {
                        id,
                        docNo}, this.DeleteEquipmentSpecificationsOperationCompleted, userState);
        }
        
        private void OnDeleteEquipmentSpecificationsOperationCompleted(object arg) {
            if ((this.DeleteEquipmentSpecificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEquipmentSpecificationsCompleted(this, new DeleteEquipmentSpecificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddVehicleMaintenanceRequestDeta" +
            "ils", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddVehicleMaintenanceRequestDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddVehicleMaintenanceRequestDetails(string employeeNo, string region, string registrationnumber, decimal odometerreading, int servicetype, string description, string fundingcode, string projectnumber, string budgetline, string maintenancecost, string vendornumber, string tservicecode) {
            object[] results = this.Invoke("AddVehicleMaintenanceRequestDetails", new object[] {
                        employeeNo,
                        region,
                        registrationnumber,
                        odometerreading,
                        servicetype,
                        description,
                        fundingcode,
                        projectnumber,
                        budgetline,
                        maintenancecost,
                        vendornumber,
                        tservicecode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddVehicleMaintenanceRequestDetailsAsync(string employeeNo, string region, string registrationnumber, decimal odometerreading, int servicetype, string description, string fundingcode, string projectnumber, string budgetline, string maintenancecost, string vendornumber, string tservicecode) {
            this.AddVehicleMaintenanceRequestDetailsAsync(employeeNo, region, registrationnumber, odometerreading, servicetype, description, fundingcode, projectnumber, budgetline, maintenancecost, vendornumber, tservicecode, null);
        }
        
        /// <remarks/>
        public void AddVehicleMaintenanceRequestDetailsAsync(string employeeNo, string region, string registrationnumber, decimal odometerreading, int servicetype, string description, string fundingcode, string projectnumber, string budgetline, string maintenancecost, string vendornumber, string tservicecode, object userState) {
            if ((this.AddVehicleMaintenanceRequestDetailsOperationCompleted == null)) {
                this.AddVehicleMaintenanceRequestDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVehicleMaintenanceRequestDetailsOperationCompleted);
            }
            this.InvokeAsync("AddVehicleMaintenanceRequestDetails", new object[] {
                        employeeNo,
                        region,
                        registrationnumber,
                        odometerreading,
                        servicetype,
                        description,
                        fundingcode,
                        projectnumber,
                        budgetline,
                        maintenancecost,
                        vendornumber,
                        tservicecode}, this.AddVehicleMaintenanceRequestDetailsOperationCompleted, userState);
        }
        
        private void OnAddVehicleMaintenanceRequestDetailsOperationCompleted(object arg) {
            if ((this.AddVehicleMaintenanceRequestDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVehicleMaintenanceRequestDetailsCompleted(this, new AddVehicleMaintenanceRequestDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendVehicleMaintenancetforApprov" +
            "al", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendVehicleMaintenancetforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendVehicleMaintenancetforApproval(string docNo) {
            object[] results = this.Invoke("SendVehicleMaintenancetforApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendVehicleMaintenancetforApprovalAsync(string docNo) {
            this.SendVehicleMaintenancetforApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendVehicleMaintenancetforApprovalAsync(string docNo, object userState) {
            if ((this.SendVehicleMaintenancetforApprovalOperationCompleted == null)) {
                this.SendVehicleMaintenancetforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendVehicleMaintenancetforApprovalOperationCompleted);
            }
            this.InvokeAsync("SendVehicleMaintenancetforApproval", new object[] {
                        docNo}, this.SendVehicleMaintenancetforApprovalOperationCompleted, userState);
        }
        
        private void OnSendVehicleMaintenancetforApprovalOperationCompleted(object arg) {
            if ((this.SendVehicleMaintenancetforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendVehicleMaintenancetforApprovalCompleted(this, new SendVehicleMaintenancetforApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFuelRequisitionDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFuelRequisitionDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFuelRequisitionDetails(string employeeNo, int fueltype, string vendornumber, decimal litersrequested, string vehicleregistration, decimal mileage, decimal pricerperLiter, string driverCode) {
            object[] results = this.Invoke("AddFuelRequisitionDetails", new object[] {
                        employeeNo,
                        fueltype,
                        vendornumber,
                        litersrequested,
                        vehicleregistration,
                        mileage,
                        pricerperLiter,
                        driverCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFuelRequisitionDetailsAsync(string employeeNo, int fueltype, string vendornumber, decimal litersrequested, string vehicleregistration, decimal mileage, decimal pricerperLiter, string driverCode) {
            this.AddFuelRequisitionDetailsAsync(employeeNo, fueltype, vendornumber, litersrequested, vehicleregistration, mileage, pricerperLiter, driverCode, null);
        }
        
        /// <remarks/>
        public void AddFuelRequisitionDetailsAsync(string employeeNo, int fueltype, string vendornumber, decimal litersrequested, string vehicleregistration, decimal mileage, decimal pricerperLiter, string driverCode, object userState) {
            if ((this.AddFuelRequisitionDetailsOperationCompleted == null)) {
                this.AddFuelRequisitionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFuelRequisitionDetailsOperationCompleted);
            }
            this.InvokeAsync("AddFuelRequisitionDetails", new object[] {
                        employeeNo,
                        fueltype,
                        vendornumber,
                        litersrequested,
                        vehicleregistration,
                        mileage,
                        pricerperLiter,
                        driverCode}, this.AddFuelRequisitionDetailsOperationCompleted, userState);
        }
        
        private void OnAddFuelRequisitionDetailsOperationCompleted(object arg) {
            if ((this.AddFuelRequisitionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFuelRequisitionDetailsCompleted(this, new AddFuelRequisitionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendVehicleRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendVehicleRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendVehicleRequisitionApproval(string imprestNumber) {
            object[] results = this.Invoke("SendVehicleRequisitionApproval", new object[] {
                        imprestNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendVehicleRequisitionApprovalAsync(string imprestNumber) {
            this.SendVehicleRequisitionApprovalAsync(imprestNumber, null);
        }
        
        /// <remarks/>
        public void SendVehicleRequisitionApprovalAsync(string imprestNumber, object userState) {
            if ((this.SendVehicleRequisitionApprovalOperationCompleted == null)) {
                this.SendVehicleRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendVehicleRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendVehicleRequisitionApproval", new object[] {
                        imprestNumber}, this.SendVehicleRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendVehicleRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendVehicleRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendVehicleRequisitionApprovalCompleted(this, new SendVehicleRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CloseDriverOpenTrips", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CloseDriverOpenTrips_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CloseDriverOpenTrips(string requisitionNumber) {
            object[] results = this.Invoke("CloseDriverOpenTrips", new object[] {
                        requisitionNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CloseDriverOpenTripsAsync(string requisitionNumber) {
            this.CloseDriverOpenTripsAsync(requisitionNumber, null);
        }
        
        /// <remarks/>
        public void CloseDriverOpenTripsAsync(string requisitionNumber, object userState) {
            if ((this.CloseDriverOpenTripsOperationCompleted == null)) {
                this.CloseDriverOpenTripsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseDriverOpenTripsOperationCompleted);
            }
            this.InvokeAsync("CloseDriverOpenTrips", new object[] {
                        requisitionNumber}, this.CloseDriverOpenTripsOperationCompleted, userState);
        }
        
        private void OnCloseDriverOpenTripsOperationCompleted(object arg) {
            if ((this.CloseDriverOpenTripsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseDriverOpenTripsCompleted(this, new CloseDriverOpenTripsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddDriverAllocations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddDriverAllocations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDriverAllocations(string requisitionNumber, string driverCode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofTrip, string vehiclenumber, int noofdays) {
            object[] results = this.Invoke("AddDriverAllocations", new object[] {
                        requisitionNumber,
                        driverCode,
                        dateofTrip,
                        vehiclenumber,
                        noofdays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDriverAllocationsAsync(string requisitionNumber, string driverCode, System.DateTime dateofTrip, string vehiclenumber, int noofdays) {
            this.AddDriverAllocationsAsync(requisitionNumber, driverCode, dateofTrip, vehiclenumber, noofdays, null);
        }
        
        /// <remarks/>
        public void AddDriverAllocationsAsync(string requisitionNumber, string driverCode, System.DateTime dateofTrip, string vehiclenumber, int noofdays, object userState) {
            if ((this.AddDriverAllocationsOperationCompleted == null)) {
                this.AddDriverAllocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDriverAllocationsOperationCompleted);
            }
            this.InvokeAsync("AddDriverAllocations", new object[] {
                        requisitionNumber,
                        driverCode,
                        dateofTrip,
                        vehiclenumber,
                        noofdays}, this.AddDriverAllocationsOperationCompleted, userState);
        }
        
        private void OnAddDriverAllocationsOperationCompleted(object arg) {
            if ((this.AddDriverAllocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDriverAllocationsCompleted(this, new AddDriverAllocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddNonKeRRADriverAllocations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddNonKeRRADriverAllocations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddNonKeRRADriverAllocations(string requisitionNumber, string driverIDNumber, string driverName, string phonenumber, string emailaddress, string drivinglicenseNumber) {
            object[] results = this.Invoke("AddNonKeRRADriverAllocations", new object[] {
                        requisitionNumber,
                        driverIDNumber,
                        driverName,
                        phonenumber,
                        emailaddress,
                        drivinglicenseNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNonKeRRADriverAllocationsAsync(string requisitionNumber, string driverIDNumber, string driverName, string phonenumber, string emailaddress, string drivinglicenseNumber) {
            this.AddNonKeRRADriverAllocationsAsync(requisitionNumber, driverIDNumber, driverName, phonenumber, emailaddress, drivinglicenseNumber, null);
        }
        
        /// <remarks/>
        public void AddNonKeRRADriverAllocationsAsync(string requisitionNumber, string driverIDNumber, string driverName, string phonenumber, string emailaddress, string drivinglicenseNumber, object userState) {
            if ((this.AddNonKeRRADriverAllocationsOperationCompleted == null)) {
                this.AddNonKeRRADriverAllocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNonKeRRADriverAllocationsOperationCompleted);
            }
            this.InvokeAsync("AddNonKeRRADriverAllocations", new object[] {
                        requisitionNumber,
                        driverIDNumber,
                        driverName,
                        phonenumber,
                        emailaddress,
                        drivinglicenseNumber}, this.AddNonKeRRADriverAllocationsOperationCompleted, userState);
        }
        
        private void OnAddNonKeRRADriverAllocationsOperationCompleted(object arg) {
            if ((this.AddNonKeRRADriverAllocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNonKeRRADriverAllocationsCompleted(this, new AddNonKeRRADriverAllocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendFuelRequisitionforApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendFuelRequisitionforApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendFuelRequisitionforApproval(string docNo) {
            object[] results = this.Invoke("SendFuelRequisitionforApproval", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFuelRequisitionforApprovalAsync(string docNo) {
            this.SendFuelRequisitionforApprovalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void SendFuelRequisitionforApprovalAsync(string docNo, object userState) {
            if ((this.SendFuelRequisitionforApprovalOperationCompleted == null)) {
                this.SendFuelRequisitionforApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFuelRequisitionforApprovalOperationCompleted);
            }
            this.InvokeAsync("SendFuelRequisitionforApproval", new object[] {
                        docNo}, this.SendFuelRequisitionforApprovalOperationCompleted, userState);
        }
        
        private void OnSendFuelRequisitionforApprovalOperationCompleted(object arg) {
            if ((this.SendFuelRequisitionforApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFuelRequisitionforApprovalCompleted(this, new SendFuelRequisitionforApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ProcessDriverAllocations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ProcessDriverAllocations_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ProcessDriverAllocations(string docNumber) {
            object[] results = this.Invoke("ProcessDriverAllocations", new object[] {
                        docNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessDriverAllocationsAsync(string docNumber) {
            this.ProcessDriverAllocationsAsync(docNumber, null);
        }
        
        /// <remarks/>
        public void ProcessDriverAllocationsAsync(string docNumber, object userState) {
            if ((this.ProcessDriverAllocationsOperationCompleted == null)) {
                this.ProcessDriverAllocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessDriverAllocationsOperationCompleted);
            }
            this.InvokeAsync("ProcessDriverAllocations", new object[] {
                        docNumber}, this.ProcessDriverAllocationsOperationCompleted, userState);
        }
        
        private void OnProcessDriverAllocationsOperationCompleted(object arg) {
            if ((this.ProcessDriverAllocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessDriverAllocationsCompleted(this, new ProcessDriverAllocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpateDriverAllocationToImprestMe" +
            "mo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpateDriverAllocationToImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpateDriverAllocationToImprestMemo(string docNumber, string imprestNumber) {
            object[] results = this.Invoke("UpateDriverAllocationToImprestMemo", new object[] {
                        docNumber,
                        imprestNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpateDriverAllocationToImprestMemoAsync(string docNumber, string imprestNumber) {
            this.UpateDriverAllocationToImprestMemoAsync(docNumber, imprestNumber, null);
        }
        
        /// <remarks/>
        public void UpateDriverAllocationToImprestMemoAsync(string docNumber, string imprestNumber, object userState) {
            if ((this.UpateDriverAllocationToImprestMemoOperationCompleted == null)) {
                this.UpateDriverAllocationToImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpateDriverAllocationToImprestMemoOperationCompleted);
            }
            this.InvokeAsync("UpateDriverAllocationToImprestMemo", new object[] {
                        docNumber,
                        imprestNumber}, this.UpateDriverAllocationToImprestMemoOperationCompleted, userState);
        }
        
        private void OnUpateDriverAllocationToImprestMemoOperationCompleted(object arg) {
            if ((this.UpateDriverAllocationToImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpateDriverAllocationToImprestMemoCompleted(this, new UpateDriverAllocationToImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendDriverEmailNotification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendDriverEmailNotification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendDriverEmailNotification(string docNumber) {
            object[] results = this.Invoke("SendDriverEmailNotification", new object[] {
                        docNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendDriverEmailNotificationAsync(string docNumber) {
            this.SendDriverEmailNotificationAsync(docNumber, null);
        }
        
        /// <remarks/>
        public void SendDriverEmailNotificationAsync(string docNumber, object userState) {
            if ((this.SendDriverEmailNotificationOperationCompleted == null)) {
                this.SendDriverEmailNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDriverEmailNotificationOperationCompleted);
            }
            this.InvokeAsync("SendDriverEmailNotification", new object[] {
                        docNumber}, this.SendDriverEmailNotificationOperationCompleted, userState);
        }
        
        private void OnSendDriverEmailNotificationOperationCompleted(object arg) {
            if ((this.SendDriverEmailNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDriverEmailNotificationCompleted(this, new SendDriverEmailNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateFleetRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateFleetRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateFleetRequisition(string transportRequisitionNo) {
            object[] results = this.Invoke("GenerateFleetRequisition", new object[] {
                        transportRequisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateFleetRequisitionAsync(string transportRequisitionNo) {
            this.GenerateFleetRequisitionAsync(transportRequisitionNo, null);
        }
        
        /// <remarks/>
        public void GenerateFleetRequisitionAsync(string transportRequisitionNo, object userState) {
            if ((this.GenerateFleetRequisitionOperationCompleted == null)) {
                this.GenerateFleetRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateFleetRequisitionOperationCompleted);
            }
            this.InvokeAsync("GenerateFleetRequisition", new object[] {
                        transportRequisitionNo}, this.GenerateFleetRequisitionOperationCompleted, userState);
        }
        
        private void OnGenerateFleetRequisitionOperationCompleted(object arg) {
            if ((this.GenerateFleetRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateFleetRequisitionCompleted(this, new GenerateFleetRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ReassignDriver", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ReassignDriver_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ReassignDriver(string transportNo, string driverCode, string newTrip, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date) {
            object[] results = this.Invoke("ReassignDriver", new object[] {
                        transportNo,
                        driverCode,
                        newTrip,
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReassignDriverAsync(string transportNo, string driverCode, string newTrip, System.DateTime date) {
            this.ReassignDriverAsync(transportNo, driverCode, newTrip, date, null);
        }
        
        /// <remarks/>
        public void ReassignDriverAsync(string transportNo, string driverCode, string newTrip, System.DateTime date, object userState) {
            if ((this.ReassignDriverOperationCompleted == null)) {
                this.ReassignDriverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReassignDriverOperationCompleted);
            }
            this.InvokeAsync("ReassignDriver", new object[] {
                        transportNo,
                        driverCode,
                        newTrip,
                        date}, this.ReassignDriverOperationCompleted, userState);
        }
        
        private void OnReassignDriverOperationCompleted(object arg) {
            if ((this.ReassignDriverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReassignDriverCompleted(this, new ReassignDriverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateFuelRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateFuelRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateFuelRequisition(string transportRequisitionNo) {
            object[] results = this.Invoke("GenerateFuelRequisition", new object[] {
                        transportRequisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateFuelRequisitionAsync(string transportRequisitionNo) {
            this.GenerateFuelRequisitionAsync(transportRequisitionNo, null);
        }
        
        /// <remarks/>
        public void GenerateFuelRequisitionAsync(string transportRequisitionNo, object userState) {
            if ((this.GenerateFuelRequisitionOperationCompleted == null)) {
                this.GenerateFuelRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateFuelRequisitionOperationCompleted);
            }
            this.InvokeAsync("GenerateFuelRequisition", new object[] {
                        transportRequisitionNo}, this.GenerateFuelRequisitionOperationCompleted, userState);
        }
        
        private void OnGenerateFuelRequisitionOperationCompleted(object arg) {
            if ((this.GenerateFuelRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateFuelRequisitionCompleted(this, new GenerateFuelRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateMaintenanceRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateMaintenanceRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateMaintenanceRequisition(string transportRequisitionNo) {
            object[] results = this.Invoke("GenerateMaintenanceRequisition", new object[] {
                        transportRequisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateMaintenanceRequisitionAsync(string transportRequisitionNo) {
            this.GenerateMaintenanceRequisitionAsync(transportRequisitionNo, null);
        }
        
        /// <remarks/>
        public void GenerateMaintenanceRequisitionAsync(string transportRequisitionNo, object userState) {
            if ((this.GenerateMaintenanceRequisitionOperationCompleted == null)) {
                this.GenerateMaintenanceRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateMaintenanceRequisitionOperationCompleted);
            }
            this.InvokeAsync("GenerateMaintenanceRequisition", new object[] {
                        transportRequisitionNo}, this.GenerateMaintenanceRequisitionOperationCompleted, userState);
        }
        
        private void OnGenerateMaintenanceRequisitionOperationCompleted(object arg) {
            if ((this.GenerateMaintenanceRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateMaintenanceRequisitionCompleted(this, new GenerateMaintenanceRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EscalatedHelpdeskRequestDynasoft" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EscalatedHelpdeskRequestDynasoft_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EscalatedHelpdeskRequestDynasoft(string jobNo, string assignee, string description) {
            object[] results = this.Invoke("EscalatedHelpdeskRequestDynasoft", new object[] {
                        jobNo,
                        assignee,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EscalatedHelpdeskRequestDynasoftAsync(string jobNo, string assignee, string description) {
            this.EscalatedHelpdeskRequestDynasoftAsync(jobNo, assignee, description, null);
        }
        
        /// <remarks/>
        public void EscalatedHelpdeskRequestDynasoftAsync(string jobNo, string assignee, string description, object userState) {
            if ((this.EscalatedHelpdeskRequestDynasoftOperationCompleted == null)) {
                this.EscalatedHelpdeskRequestDynasoftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEscalatedHelpdeskRequestDynasoftOperationCompleted);
            }
            this.InvokeAsync("EscalatedHelpdeskRequestDynasoft", new object[] {
                        jobNo,
                        assignee,
                        description}, this.EscalatedHelpdeskRequestDynasoftOperationCompleted, userState);
        }
        
        private void OnEscalatedHelpdeskRequestDynasoftOperationCompleted(object arg) {
            if ((this.EscalatedHelpdeskRequestDynasoftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EscalatedHelpdeskRequestDynasoftCompleted(this, new EscalatedHelpdeskRequestDynasoftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:Generateictreport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="Generateictreport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Generateictreport([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime requestdate) {
            object[] results = this.Invoke("Generateictreport", new object[] {
                        requestdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateictreportAsync(System.DateTime requestdate) {
            this.GenerateictreportAsync(requestdate, null);
        }
        
        /// <remarks/>
        public void GenerateictreportAsync(System.DateTime requestdate, object userState) {
            if ((this.GenerateictreportOperationCompleted == null)) {
                this.GenerateictreportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateictreportOperationCompleted);
            }
            this.InvokeAsync("Generateictreport", new object[] {
                        requestdate}, this.GenerateictreportOperationCompleted, userState);
        }
        
        private void OnGenerateictreportOperationCompleted(object arg) {
            if ((this.GenerateictreportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateictreportCompleted(this, new GenerateictreportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateReopenreport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateReopenreport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateReopenreport() {
            object[] results = this.Invoke("GenerateReopenreport", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateReopenreportAsync() {
            this.GenerateReopenreportAsync(null);
        }
        
        /// <remarks/>
        public void GenerateReopenreportAsync(object userState) {
            if ((this.GenerateReopenreportOperationCompleted == null)) {
                this.GenerateReopenreportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateReopenreportOperationCompleted);
            }
            this.InvokeAsync("GenerateReopenreport", new object[0], this.GenerateReopenreportOperationCompleted, userState);
        }
        
        private void OnGenerateReopenreportOperationCompleted(object arg) {
            if ((this.GenerateReopenreportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateReopenreportCompleted(this, new GenerateReopenreportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateRMReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateRMReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateRMReport() {
            object[] results = this.Invoke("GenerateRMReport", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateRMReportAsync() {
            this.GenerateRMReportAsync(null);
        }
        
        /// <remarks/>
        public void GenerateRMReportAsync(object userState) {
            if ((this.GenerateRMReportOperationCompleted == null)) {
                this.GenerateRMReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateRMReportOperationCompleted);
            }
            this.InvokeAsync("GenerateRMReport", new object[0], this.GenerateRMReportOperationCompleted, userState);
        }
        
        private void OnGenerateRMReportOperationCompleted(object arg) {
            if ((this.GenerateRMReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateRMReportCompleted(this, new GenerateRMReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GetAllItems", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GetAllItems_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetAllItems(string itemcategory, string location) {
            object[] results = this.Invoke("GetAllItems", new object[] {
                        itemcategory,
                        location});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllItemsAsync(string itemcategory, string location) {
            this.GetAllItemsAsync(itemcategory, location, null);
        }
        
        /// <remarks/>
        public void GetAllItemsAsync(string itemcategory, string location, object userState) {
            if ((this.GetAllItemsOperationCompleted == null)) {
                this.GetAllItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllItemsOperationCompleted);
            }
            this.InvokeAsync("GetAllItems", new object[] {
                        itemcategory,
                        location}, this.GetAllItemsOperationCompleted, userState);
        }
        
        private void OnGetAllItemsOperationCompleted(object arg) {
            if ((this.GetAllItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllItemsCompleted(this, new GetAllItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewStaffPerformanceContract(string contractNo, string employeeNo, string description, string seniorOfficerPC, string type) {
            object[] results = this.Invoke("FnNewStaffPerformanceContract", new object[] {
                        contractNo,
                        employeeNo,
                        description,
                        seniorOfficerPC,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewStaffPerformanceContractAsync(string contractNo, string employeeNo, string description, string seniorOfficerPC, string type) {
            this.FnNewStaffPerformanceContractAsync(contractNo, employeeNo, description, seniorOfficerPC, type, null);
        }
        
        /// <remarks/>
        public void FnNewStaffPerformanceContractAsync(string contractNo, string employeeNo, string description, string seniorOfficerPC, string type, object userState) {
            if ((this.FnNewStaffPerformanceContractOperationCompleted == null)) {
                this.FnNewStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnNewStaffPerformanceContract", new object[] {
                        contractNo,
                        employeeNo,
                        description,
                        seniorOfficerPC,
                        type}, this.FnNewStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnNewStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnNewStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewStaffPerformanceContractCompleted(this, new FnNewStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedCoreInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedCoreInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedCoreInitiatives(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedCoreInitiatives", new object[] {
                        strategyid,
                        personalscorecardid,
                        workplanNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedCoreInitiativesAsync(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber) {
            this.FnSubmitSelectedCoreInitiativesAsync(strategyid, personalscorecardid, workplanNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedCoreInitiativesAsync(string strategyid, string personalscorecardid, string workplanNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedCoreInitiativesOperationCompleted == null)) {
                this.FnSubmitSelectedCoreInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedCoreInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedCoreInitiatives", new object[] {
                        strategyid,
                        personalscorecardid,
                        workplanNumber,
                        initiativeNumber}, this.FnSubmitSelectedCoreInitiativesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedCoreInitiativesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedCoreInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedCoreInitiativesCompleted(this, new FnSubmitSelectedCoreInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:Fnsuggestsubindicators", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="Fnsuggestsubindicators_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Fnsuggestsubindicators(string strategyid, string docNo, string initiativeNumber, string no) {
            object[] results = this.Invoke("Fnsuggestsubindicators", new object[] {
                        strategyid,
                        docNo,
                        initiativeNumber,
                        no});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnsuggestsubindicatorsAsync(string strategyid, string docNo, string initiativeNumber, string no) {
            this.FnsuggestsubindicatorsAsync(strategyid, docNo, initiativeNumber, no, null);
        }
        
        /// <remarks/>
        public void FnsuggestsubindicatorsAsync(string strategyid, string docNo, string initiativeNumber, string no, object userState) {
            if ((this.FnsuggestsubindicatorsOperationCompleted == null)) {
                this.FnsuggestsubindicatorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnsuggestsubindicatorsOperationCompleted);
            }
            this.InvokeAsync("Fnsuggestsubindicators", new object[] {
                        strategyid,
                        docNo,
                        initiativeNumber,
                        no}, this.FnsuggestsubindicatorsOperationCompleted, userState);
        }
        
        private void OnFnsuggestsubindicatorsOperationCompleted(object arg) {
            if ((this.FnsuggestsubindicatorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnsuggestsubindicatorsCompleted(this, new FnsuggestsubindicatorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSaveCoreInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSaveCoreInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveCoreInitiatives(int entryNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, decimal agreedTarget, decimal assignedweight, string comments) {
            object[] results = this.Invoke("FnSaveCoreInitiatives", new object[] {
                        entryNumber,
                        startdate,
                        enddate,
                        agreedTarget,
                        assignedweight,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveCoreInitiativesAsync(int entryNumber, System.DateTime startdate, System.DateTime enddate, decimal agreedTarget, decimal assignedweight, string comments) {
            this.FnSaveCoreInitiativesAsync(entryNumber, startdate, enddate, agreedTarget, assignedweight, comments, null);
        }
        
        /// <remarks/>
        public void FnSaveCoreInitiativesAsync(int entryNumber, System.DateTime startdate, System.DateTime enddate, decimal agreedTarget, decimal assignedweight, string comments, object userState) {
            if ((this.FnSaveCoreInitiativesOperationCompleted == null)) {
                this.FnSaveCoreInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveCoreInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnSaveCoreInitiatives", new object[] {
                        entryNumber,
                        startdate,
                        enddate,
                        agreedTarget,
                        assignedweight,
                        comments}, this.FnSaveCoreInitiativesOperationCompleted, userState);
        }
        
        private void OnFnSaveCoreInitiativesOperationCompleted(object arg) {
            if ((this.FnSaveCoreInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveCoreInitiativesCompleted(this, new FnSaveCoreInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemoveCoreInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemoveCoreInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveCoreInitiatives(string docNo, int entryNumber) {
            object[] results = this.Invoke("FnRemoveCoreInitiatives", new object[] {
                        docNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveCoreInitiativesAsync(string docNo, int entryNumber) {
            this.FnRemoveCoreInitiativesAsync(docNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnRemoveCoreInitiativesAsync(string docNo, int entryNumber, object userState) {
            if ((this.FnRemoveCoreInitiativesOperationCompleted == null)) {
                this.FnRemoveCoreInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveCoreInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnRemoveCoreInitiatives", new object[] {
                        docNo,
                        entryNumber}, this.FnRemoveCoreInitiativesOperationCompleted, userState);
        }
        
        private void OnFnRemoveCoreInitiativesOperationCompleted(object arg) {
            if ((this.FnRemoveCoreInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveCoreInitiativesCompleted(this, new FnRemoveCoreInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSaveAditionalInitiatives", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSaveAditionalInitiatives_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveAditionalInitiatives(int entryno, decimal agreedtarget, decimal annualtarget, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate, string comments) {
            object[] results = this.Invoke("FnSaveAditionalInitiatives", new object[] {
                        entryno,
                        agreedtarget,
                        annualtarget,
                        startdate,
                        enddate,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveAditionalInitiativesAsync(int entryno, decimal agreedtarget, decimal annualtarget, System.DateTime startdate, System.DateTime enddate, string comments) {
            this.FnSaveAditionalInitiativesAsync(entryno, agreedtarget, annualtarget, startdate, enddate, comments, null);
        }
        
        /// <remarks/>
        public void FnSaveAditionalInitiativesAsync(int entryno, decimal agreedtarget, decimal annualtarget, System.DateTime startdate, System.DateTime enddate, string comments, object userState) {
            if ((this.FnSaveAditionalInitiativesOperationCompleted == null)) {
                this.FnSaveAditionalInitiativesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveAditionalInitiativesOperationCompleted);
            }
            this.InvokeAsync("FnSaveAditionalInitiatives", new object[] {
                        entryno,
                        agreedtarget,
                        annualtarget,
                        startdate,
                        enddate,
                        comments}, this.FnSaveAditionalInitiativesOperationCompleted, userState);
        }
        
        private void OnFnSaveAditionalInitiativesOperationCompleted(object arg) {
            if ((this.FnSaveAditionalInitiativesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveAditionalInitiativesCompleted(this, new FnSaveAditionalInitiativesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemoveAditionalInitiative", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemoveAditionalInitiative_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveAditionalInitiative(string docNo, int entryno) {
            object[] results = this.Invoke("FnRemoveAditionalInitiative", new object[] {
                        docNo,
                        entryno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveAditionalInitiativeAsync(string docNo, int entryno) {
            this.FnRemoveAditionalInitiativeAsync(docNo, entryno, null);
        }
        
        /// <remarks/>
        public void FnRemoveAditionalInitiativeAsync(string docNo, int entryno, object userState) {
            if ((this.FnRemoveAditionalInitiativeOperationCompleted == null)) {
                this.FnRemoveAditionalInitiativeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveAditionalInitiativeOperationCompleted);
            }
            this.InvokeAsync("FnRemoveAditionalInitiative", new object[] {
                        docNo,
                        entryno}, this.FnRemoveAditionalInitiativeOperationCompleted, userState);
        }
        
        private void OnFnRemoveAditionalInitiativeOperationCompleted(object arg) {
            if ((this.FnRemoveAditionalInitiativeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveAditionalInitiativeCompleted(this, new FnRemoveAditionalInitiativeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteIndividualCardSubActivit" +
            "ies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteIndividualCardSubActivities(string empNo, string scorecardNumber, string activityNo, int entryNumber) {
            object[] results = this.Invoke("FnDeleteIndividualCardSubActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        activityNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteIndividualCardSubActivitiesAsync(string empNo, string scorecardNumber, string activityNo, int entryNumber) {
            this.FnDeleteIndividualCardSubActivitiesAsync(empNo, scorecardNumber, activityNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteIndividualCardSubActivitiesAsync(string empNo, string scorecardNumber, string activityNo, int entryNumber, object userState) {
            if ((this.FnDeleteIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnDeleteIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteIndividualCardSubActivities", new object[] {
                        empNo,
                        scorecardNumber,
                        activityNo,
                        entryNumber}, this.FnDeleteIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnDeleteIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnDeleteIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteIndividualCardSubActivitiesCompleted(this, new FnDeleteIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewIndividualCardSubActivities" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewIndividualCardSubActivities(string scorecardNumber, string activityNo, string subinitiative, string subindicator, string uom, int targets, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completiondate, decimal assweight) {
            object[] results = this.Invoke("FnNewIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        assweight});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal assweight) {
            this.FnNewIndividualCardSubActivitiesAsync(scorecardNumber, activityNo, subinitiative, subindicator, uom, targets, completiondate, assweight, null);
        }
        
        /// <remarks/>
        public void FnNewIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal assweight, object userState) {
            if ((this.FnNewIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnNewIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnNewIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        assweight}, this.FnNewIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnNewIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnNewIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewIndividualCardSubActivitiesCompleted(this, new FnNewIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditIndividualCardSubActivitie" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditIndividualCardSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditIndividualCardSubActivities(string scorecardNumber, string activityNo, int lineno, string subinitiative, string subindicator, string uom, int targets, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime completiondate, decimal agreedweight) {
            object[] results = this.Invoke("FnEditIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        lineno,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        agreedweight});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, int lineno, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal agreedweight) {
            this.FnEditIndividualCardSubActivitiesAsync(scorecardNumber, activityNo, lineno, subinitiative, subindicator, uom, targets, completiondate, agreedweight, null);
        }
        
        /// <remarks/>
        public void FnEditIndividualCardSubActivitiesAsync(string scorecardNumber, string activityNo, int lineno, string subinitiative, string subindicator, string uom, int targets, System.DateTime completiondate, decimal agreedweight, object userState) {
            if ((this.FnEditIndividualCardSubActivitiesOperationCompleted == null)) {
                this.FnEditIndividualCardSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditIndividualCardSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnEditIndividualCardSubActivities", new object[] {
                        scorecardNumber,
                        activityNo,
                        lineno,
                        subinitiative,
                        subindicator,
                        uom,
                        targets,
                        completiondate,
                        agreedweight}, this.FnEditIndividualCardSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnEditIndividualCardSubActivitiesOperationCompleted(object arg) {
            if ((this.FnEditIndividualCardSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditIndividualCardSubActivitiesCompleted(this, new FnEditIndividualCardSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendStaffPerformanceContractAp" +
            "proval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendStaffPerformanceContractApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendStaffPerformanceContractApproval(string contractNo) {
            object[] results = this.Invoke("FnSendStaffPerformanceContractApproval", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendStaffPerformanceContractApprovalAsync(string contractNo) {
            this.FnSendStaffPerformanceContractApprovalAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnSendStaffPerformanceContractApprovalAsync(string contractNo, object userState) {
            if ((this.FnSendStaffPerformanceContractApprovalOperationCompleted == null)) {
                this.FnSendStaffPerformanceContractApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendStaffPerformanceContractApprovalOperationCompleted);
            }
            this.InvokeAsync("FnSendStaffPerformanceContractApproval", new object[] {
                        contractNo}, this.FnSendStaffPerformanceContractApprovalOperationCompleted, userState);
        }
        
        private void OnFnSendStaffPerformanceContractApprovalOperationCompleted(object arg) {
            if ((this.FnSendStaffPerformanceContractApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendStaffPerformanceContractApprovalCompleted(this, new FnSendStaffPerformanceContractApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCancelStaffPerformanceContract" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCancelStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCancelStaffPerformanceContract(string contractNo) {
            object[] results = this.Invoke("FnCancelStaffPerformanceContract", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCancelStaffPerformanceContractAsync(string contractNo) {
            this.FnCancelStaffPerformanceContractAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnCancelStaffPerformanceContractAsync(string contractNo, object userState) {
            if ((this.FnCancelStaffPerformanceContractOperationCompleted == null)) {
                this.FnCancelStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCancelStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnCancelStaffPerformanceContract", new object[] {
                        contractNo}, this.FnCancelStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnCancelStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnCancelStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCancelStaffPerformanceContractCompleted(this, new FnCancelStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnLockStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnLockStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLockStaffPerformanceContract(string contractNo) {
            object[] results = this.Invoke("FnLockStaffPerformanceContract", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLockStaffPerformanceContractAsync(string contractNo) {
            this.FnLockStaffPerformanceContractAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnLockStaffPerformanceContractAsync(string contractNo, object userState) {
            if ((this.FnLockStaffPerformanceContractOperationCompleted == null)) {
                this.FnLockStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLockStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnLockStaffPerformanceContract", new object[] {
                        contractNo}, this.FnLockStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnLockStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnLockStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLockStaffPerformanceContractCompleted(this, new FnLockStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSignStaffPerformanceContract", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSignStaffPerformanceContract_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSignStaffPerformanceContract(string contractNo) {
            object[] results = this.Invoke("FnSignStaffPerformanceContract", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSignStaffPerformanceContractAsync(string contractNo) {
            this.FnSignStaffPerformanceContractAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnSignStaffPerformanceContractAsync(string contractNo, object userState) {
            if ((this.FnSignStaffPerformanceContractOperationCompleted == null)) {
                this.FnSignStaffPerformanceContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSignStaffPerformanceContractOperationCompleted);
            }
            this.InvokeAsync("FnSignStaffPerformanceContract", new object[] {
                        contractNo}, this.FnSignStaffPerformanceContractOperationCompleted, userState);
        }
        
        private void OnFnSignStaffPerformanceContractOperationCompleted(object arg) {
            if ((this.FnSignStaffPerformanceContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSignStaffPerformanceContractCompleted(this, new FnSignStaffPerformanceContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitSelectedPLogCategories", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitSelectedPLogCategories_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSelectedPLogCategories(string strategyid, string personalscorecardid, string plogNumber, string initiativeNumber) {
            object[] results = this.Invoke("FnSubmitSelectedPLogCategories", new object[] {
                        strategyid,
                        personalscorecardid,
                        plogNumber,
                        initiativeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPLogCategoriesAsync(string strategyid, string personalscorecardid, string plogNumber, string initiativeNumber) {
            this.FnSubmitSelectedPLogCategoriesAsync(strategyid, personalscorecardid, plogNumber, initiativeNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitSelectedPLogCategoriesAsync(string strategyid, string personalscorecardid, string plogNumber, string initiativeNumber, object userState) {
            if ((this.FnSubmitSelectedPLogCategoriesOperationCompleted == null)) {
                this.FnSubmitSelectedPLogCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSelectedPLogCategoriesOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSelectedPLogCategories", new object[] {
                        strategyid,
                        personalscorecardid,
                        plogNumber,
                        initiativeNumber}, this.FnSubmitSelectedPLogCategoriesOperationCompleted, userState);
        }
        
        private void OnFnSubmitSelectedPLogCategoriesOperationCompleted(object arg) {
            if ((this.FnSubmitSelectedPLogCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSelectedPLogCategoriesCompleted(this, new FnSubmitSelectedPLogCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewPerformanceLogEntry", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewPerformanceLogEntry_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewPerformanceLogEntry(string docNo, string empNo, string scorecardNumber, string description) {
            object[] results = this.Invoke("FnNewPerformanceLogEntry", new object[] {
                        docNo,
                        empNo,
                        scorecardNumber,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewPerformanceLogEntryAsync(string docNo, string empNo, string scorecardNumber, string description) {
            this.FnNewPerformanceLogEntryAsync(docNo, empNo, scorecardNumber, description, null);
        }
        
        /// <remarks/>
        public void FnNewPerformanceLogEntryAsync(string docNo, string empNo, string scorecardNumber, string description, object userState) {
            if ((this.FnNewPerformanceLogEntryOperationCompleted == null)) {
                this.FnNewPerformanceLogEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewPerformanceLogEntryOperationCompleted);
            }
            this.InvokeAsync("FnNewPerformanceLogEntry", new object[] {
                        docNo,
                        empNo,
                        scorecardNumber,
                        description}, this.FnNewPerformanceLogEntryOperationCompleted, userState);
        }
        
        private void OnFnNewPerformanceLogEntryOperationCompleted(object arg) {
            if ((this.FnNewPerformanceLogEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewPerformanceLogEntryCompleted(this, new FnNewPerformanceLogEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGetPlogLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGetPlogLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetPlogLines(string docNo, string empNo) {
            object[] results = this.Invoke("FnGetPlogLines", new object[] {
                        docNo,
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetPlogLinesAsync(string docNo, string empNo) {
            this.FnGetPlogLinesAsync(docNo, empNo, null);
        }
        
        /// <remarks/>
        public void FnGetPlogLinesAsync(string docNo, string empNo, object userState) {
            if ((this.FnGetPlogLinesOperationCompleted == null)) {
                this.FnGetPlogLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetPlogLinesOperationCompleted);
            }
            this.InvokeAsync("FnGetPlogLines", new object[] {
                        docNo,
                        empNo}, this.FnGetPlogLinesOperationCompleted, userState);
        }
        
        private void OnFnGetPlogLinesOperationCompleted(object arg) {
            if ((this.FnGetPlogLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetPlogLinesCompleted(this, new FnGetPlogLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGetSubPlogLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGetSubPlogLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetSubPlogLines(string plogNo, string initiativeNo, string pcNo) {
            object[] results = this.Invoke("FnGetSubPlogLines", new object[] {
                        plogNo,
                        initiativeNo,
                        pcNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetSubPlogLinesAsync(string plogNo, string initiativeNo, string pcNo) {
            this.FnGetSubPlogLinesAsync(plogNo, initiativeNo, pcNo, null);
        }
        
        /// <remarks/>
        public void FnGetSubPlogLinesAsync(string plogNo, string initiativeNo, string pcNo, object userState) {
            if ((this.FnGetSubPlogLinesOperationCompleted == null)) {
                this.FnGetSubPlogLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetSubPlogLinesOperationCompleted);
            }
            this.InvokeAsync("FnGetSubPlogLines", new object[] {
                        plogNo,
                        initiativeNo,
                        pcNo}, this.FnGetSubPlogLinesOperationCompleted, userState);
        }
        
        private void OnFnGetSubPlogLinesOperationCompleted(object arg) {
            if ((this.FnGetSubPlogLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetSubPlogLinesCompleted(this, new FnGetSubPlogLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestPlogLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestPlogLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSuggestPlogLines(string docNo, string strategyid, string personalscorecardid, string empNumber) {
            object[] results = this.Invoke("FnSuggestPlogLines", new object[] {
                        docNo,
                        strategyid,
                        personalscorecardid,
                        empNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSuggestPlogLinesAsync(string docNo, string strategyid, string personalscorecardid, string empNumber) {
            this.FnSuggestPlogLinesAsync(docNo, strategyid, personalscorecardid, empNumber, null);
        }
        
        /// <remarks/>
        public void FnSuggestPlogLinesAsync(string docNo, string strategyid, string personalscorecardid, string empNumber, object userState) {
            if ((this.FnSuggestPlogLinesOperationCompleted == null)) {
                this.FnSuggestPlogLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestPlogLinesOperationCompleted);
            }
            this.InvokeAsync("FnSuggestPlogLines", new object[] {
                        docNo,
                        strategyid,
                        personalscorecardid,
                        empNumber}, this.FnSuggestPlogLinesOperationCompleted, userState);
        }
        
        private void OnFnSuggestPlogLinesOperationCompleted(object arg) {
            if ((this.FnSuggestPlogLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestPlogLinesCompleted(this, new FnSuggestPlogLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestPlogandSubPlogData", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestPlogandSubPlogData_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnSuggestPlogandSubPlogData(string docNo) {
            this.Invoke("FnSuggestPlogandSubPlogData", new object[] {
                        docNo});
        }
        
        /// <remarks/>
        public void FnSuggestPlogandSubPlogDataAsync(string docNo) {
            this.FnSuggestPlogandSubPlogDataAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSuggestPlogandSubPlogDataAsync(string docNo, object userState) {
            if ((this.FnSuggestPlogandSubPlogDataOperationCompleted == null)) {
                this.FnSuggestPlogandSubPlogDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestPlogandSubPlogDataOperationCompleted);
            }
            this.InvokeAsync("FnSuggestPlogandSubPlogData", new object[] {
                        docNo}, this.FnSuggestPlogandSubPlogDataOperationCompleted, userState);
        }
        
        private void OnFnSuggestPlogandSubPlogDataOperationCompleted(object arg) {
            if ((this.FnSuggestPlogandSubPlogDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestPlogandSubPlogDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnUpdatePerformanceTargetLinesDe" +
            "tails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnUpdatePerformanceTargetLinesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdatePerformanceTargetLinesDetails(string docNo, int entryNumber, decimal agreedTarget, string comments) {
            object[] results = this.Invoke("FnUpdatePerformanceTargetLinesDetails", new object[] {
                        docNo,
                        entryNumber,
                        agreedTarget,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdatePerformanceTargetLinesDetailsAsync(string docNo, int entryNumber, decimal agreedTarget, string comments) {
            this.FnUpdatePerformanceTargetLinesDetailsAsync(docNo, entryNumber, agreedTarget, comments, null);
        }
        
        /// <remarks/>
        public void FnUpdatePerformanceTargetLinesDetailsAsync(string docNo, int entryNumber, decimal agreedTarget, string comments, object userState) {
            if ((this.FnUpdatePerformanceTargetLinesDetailsOperationCompleted == null)) {
                this.FnUpdatePerformanceTargetLinesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdatePerformanceTargetLinesDetailsOperationCompleted);
            }
            this.InvokeAsync("FnUpdatePerformanceTargetLinesDetails", new object[] {
                        docNo,
                        entryNumber,
                        agreedTarget,
                        comments}, this.FnUpdatePerformanceTargetLinesDetailsOperationCompleted, userState);
        }
        
        private void OnFnUpdatePerformanceTargetLinesDetailsOperationCompleted(object arg) {
            if ((this.FnUpdatePerformanceTargetLinesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdatePerformanceTargetLinesDetailsCompleted(this, new FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemovePerformanceLogLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemovePerformanceLogLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemovePerformanceLogLine(string docNo, int entryNumber) {
            object[] results = this.Invoke("FnRemovePerformanceLogLine", new object[] {
                        docNo,
                        entryNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemovePerformanceLogLineAsync(string docNo, int entryNumber) {
            this.FnRemovePerformanceLogLineAsync(docNo, entryNumber, null);
        }
        
        /// <remarks/>
        public void FnRemovePerformanceLogLineAsync(string docNo, int entryNumber, object userState) {
            if ((this.FnRemovePerformanceLogLineOperationCompleted == null)) {
                this.FnRemovePerformanceLogLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemovePerformanceLogLineOperationCompleted);
            }
            this.InvokeAsync("FnRemovePerformanceLogLine", new object[] {
                        docNo,
                        entryNumber}, this.FnRemovePerformanceLogLineOperationCompleted, userState);
        }
        
        private void OnFnRemovePerformanceLogLineOperationCompleted(object arg) {
            if ((this.FnRemovePerformanceLogLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemovePerformanceLogLineCompleted(this, new FnRemovePerformanceLogLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertPlogSubActivities", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertPlogSubActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertPlogSubActivities(int entryNo, string plogno, string initiativeno, string pcid, decimal achievedtarget, string comments) {
            object[] results = this.Invoke("FnInsertPlogSubActivities", new object[] {
                        entryNo,
                        plogno,
                        initiativeno,
                        pcid,
                        achievedtarget,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertPlogSubActivitiesAsync(int entryNo, string plogno, string initiativeno, string pcid, decimal achievedtarget, string comments) {
            this.FnInsertPlogSubActivitiesAsync(entryNo, plogno, initiativeno, pcid, achievedtarget, comments, null);
        }
        
        /// <remarks/>
        public void FnInsertPlogSubActivitiesAsync(int entryNo, string plogno, string initiativeno, string pcid, decimal achievedtarget, string comments, object userState) {
            if ((this.FnInsertPlogSubActivitiesOperationCompleted == null)) {
                this.FnInsertPlogSubActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertPlogSubActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnInsertPlogSubActivities", new object[] {
                        entryNo,
                        plogno,
                        initiativeno,
                        pcid,
                        achievedtarget,
                        comments}, this.FnInsertPlogSubActivitiesOperationCompleted, userState);
        }
        
        private void OnFnInsertPlogSubActivitiesOperationCompleted(object arg) {
            if ((this.FnInsertPlogSubActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertPlogSubActivitiesCompleted(this, new FnInsertPlogSubActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendPlogApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendPlogApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendPlogApproval(string contractNo) {
            object[] results = this.Invoke("FnSendPlogApproval", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendPlogApprovalAsync(string contractNo) {
            this.FnSendPlogApprovalAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnSendPlogApprovalAsync(string contractNo, object userState) {
            if ((this.FnSendPlogApprovalOperationCompleted == null)) {
                this.FnSendPlogApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendPlogApprovalOperationCompleted);
            }
            this.InvokeAsync("FnSendPlogApproval", new object[] {
                        contractNo}, this.FnSendPlogApprovalOperationCompleted, userState);
        }
        
        private void OnFnSendPlogApprovalOperationCompleted(object arg) {
            if ((this.FnSendPlogApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendPlogApprovalCompleted(this, new FnSendPlogApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCancelPlogApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCancelPlogApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCancelPlogApproval(string contractNo) {
            object[] results = this.Invoke("FnCancelPlogApproval", new object[] {
                        contractNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCancelPlogApprovalAsync(string contractNo) {
            this.FnCancelPlogApprovalAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void FnCancelPlogApprovalAsync(string contractNo, object userState) {
            if ((this.FnCancelPlogApprovalOperationCompleted == null)) {
                this.FnCancelPlogApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCancelPlogApprovalOperationCompleted);
            }
            this.InvokeAsync("FnCancelPlogApproval", new object[] {
                        contractNo}, this.FnCancelPlogApprovalOperationCompleted, userState);
        }
        
        private void OnFnCancelPlogApprovalOperationCompleted(object arg) {
            if ((this.FnCancelPlogApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCancelPlogApprovalCompleted(this, new FnCancelPlogApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnNewStandardAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnNewStandardAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnNewStandardAppraisal(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC) {
            object[] results = this.Invoke("FnNewStandardAppraisal", new object[] {
                        docNo,
                        empNo,
                        strategicPlan,
                        pmp,
                        tasks,
                        supervisor,
                        description,
                        personalSC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnNewStandardAppraisalAsync(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC) {
            this.FnNewStandardAppraisalAsync(docNo, empNo, strategicPlan, pmp, tasks, supervisor, description, personalSC, null);
        }
        
        /// <remarks/>
        public void FnNewStandardAppraisalAsync(string docNo, string empNo, string strategicPlan, string pmp, string tasks, string supervisor, string description, string personalSC, object userState) {
            if ((this.FnNewStandardAppraisalOperationCompleted == null)) {
                this.FnNewStandardAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnNewStandardAppraisalOperationCompleted);
            }
            this.InvokeAsync("FnNewStandardAppraisal", new object[] {
                        docNo,
                        empNo,
                        strategicPlan,
                        pmp,
                        tasks,
                        supervisor,
                        description,
                        personalSC}, this.FnNewStandardAppraisalOperationCompleted, userState);
        }
        
        private void OnFnNewStandardAppraisalOperationCompleted(object arg) {
            if ((this.FnNewStandardAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnNewStandardAppraisalCompleted(this, new FnNewStandardAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnLoadCompetencies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnLoadCompetencies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLoadCompetencies(string docNo) {
            object[] results = this.Invoke("FnLoadCompetencies", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLoadCompetenciesAsync(string docNo) {
            this.FnLoadCompetenciesAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnLoadCompetenciesAsync(string docNo, object userState) {
            if ((this.FnLoadCompetenciesOperationCompleted == null)) {
                this.FnLoadCompetenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoadCompetenciesOperationCompleted);
            }
            this.InvokeAsync("FnLoadCompetencies", new object[] {
                        docNo}, this.FnLoadCompetenciesOperationCompleted, userState);
        }
        
        private void OnFnLoadCompetenciesOperationCompleted(object arg) {
            if ((this.FnLoadCompetenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoadCompetenciesCompleted(this, new FnLoadCompetenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnAddEvaluationPIP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnAddEvaluationPIP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddEvaluationPIP(string docNo, string category, string description) {
            object[] results = this.Invoke("FnAddEvaluationPIP", new object[] {
                        docNo,
                        category,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddEvaluationPIPAsync(string docNo, string category, string description) {
            this.FnAddEvaluationPIPAsync(docNo, category, description, null);
        }
        
        /// <remarks/>
        public void FnAddEvaluationPIPAsync(string docNo, string category, string description, object userState) {
            if ((this.FnAddEvaluationPIPOperationCompleted == null)) {
                this.FnAddEvaluationPIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddEvaluationPIPOperationCompleted);
            }
            this.InvokeAsync("FnAddEvaluationPIP", new object[] {
                        docNo,
                        category,
                        description}, this.FnAddEvaluationPIPOperationCompleted, userState);
        }
        
        private void OnFnAddEvaluationPIPOperationCompleted(object arg) {
            if ((this.FnAddEvaluationPIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddEvaluationPIPCompleted(this, new FnAddEvaluationPIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateStandardAppraisalRepor" +
            "t", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateStandardAppraisalReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateStandardAppraisalReport(string docNo) {
            object[] results = this.Invoke("FnGenerateStandardAppraisalReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateStandardAppraisalReportAsync(string docNo) {
            this.FnGenerateStandardAppraisalReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateStandardAppraisalReportAsync(string docNo, object userState) {
            if ((this.FnGenerateStandardAppraisalReportOperationCompleted == null)) {
                this.FnGenerateStandardAppraisalReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateStandardAppraisalReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateStandardAppraisalReport", new object[] {
                        docNo}, this.FnGenerateStandardAppraisalReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateStandardAppraisalReportOperationCompleted(object arg) {
            if ((this.FnGenerateStandardAppraisalReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateStandardAppraisalReportCompleted(this, new FnGenerateStandardAppraisalReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGeneratePlogReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGeneratePlogReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGeneratePlogReport(string docNo) {
            object[] results = this.Invoke("FnGeneratePlogReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGeneratePlogReportAsync(string docNo) {
            this.FnGeneratePlogReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGeneratePlogReportAsync(string docNo, object userState) {
            if ((this.FnGeneratePlogReportOperationCompleted == null)) {
                this.FnGeneratePlogReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGeneratePlogReportOperationCompleted);
            }
            this.InvokeAsync("FnGeneratePlogReport", new object[] {
                        docNo}, this.FnGeneratePlogReportOperationCompleted, userState);
        }
        
        private void OnFnGeneratePlogReportOperationCompleted(object arg) {
            if ((this.FnGeneratePlogReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGeneratePlogReportCompleted(this, new FnGeneratePlogReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateIndividualPcReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateIndividualPcReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateIndividualPcReport(string docNo) {
            object[] results = this.Invoke("FnGenerateIndividualPcReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateIndividualPcReportAsync(string docNo) {
            this.FnGenerateIndividualPcReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateIndividualPcReportAsync(string docNo, object userState) {
            if ((this.FnGenerateIndividualPcReportOperationCompleted == null)) {
                this.FnGenerateIndividualPcReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateIndividualPcReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateIndividualPcReport", new object[] {
                        docNo}, this.FnGenerateIndividualPcReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateIndividualPcReportOperationCompleted(object arg) {
            if ((this.FnGenerateIndividualPcReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateIndividualPcReportCompleted(this, new FnGenerateIndividualPcReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateIndividualPcSubIndicat" +
            "orReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateIndividualPcSubIndicatorReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateIndividualPcSubIndicatorReport(string docNo) {
            object[] results = this.Invoke("FnGenerateIndividualPcSubIndicatorReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateIndividualPcSubIndicatorReportAsync(string docNo) {
            this.FnGenerateIndividualPcSubIndicatorReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateIndividualPcSubIndicatorReportAsync(string docNo, object userState) {
            if ((this.FnGenerateIndividualPcSubIndicatorReportOperationCompleted == null)) {
                this.FnGenerateIndividualPcSubIndicatorReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateIndividualPcSubIndicatorReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateIndividualPcSubIndicatorReport", new object[] {
                        docNo}, this.FnGenerateIndividualPcSubIndicatorReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateIndividualPcSubIndicatorReportOperationCompleted(object arg) {
            if ((this.FnGenerateIndividualPcSubIndicatorReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateIndividualPcSubIndicatorReportCompleted(this, new FnGenerateIndividualPcSubIndicatorReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertJDTargets", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertJDTargets_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertJDTargets(string lineno, string workplanno, int annualtarget, int assignedtarget) {
            object[] results = this.Invoke("FnInsertJDTargets", new object[] {
                        lineno,
                        workplanno,
                        annualtarget,
                        assignedtarget});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertJDTargetsAsync(string lineno, string workplanno, int annualtarget, int assignedtarget) {
            this.FnInsertJDTargetsAsync(lineno, workplanno, annualtarget, assignedtarget, null);
        }
        
        /// <remarks/>
        public void FnInsertJDTargetsAsync(string lineno, string workplanno, int annualtarget, int assignedtarget, object userState) {
            if ((this.FnInsertJDTargetsOperationCompleted == null)) {
                this.FnInsertJDTargetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertJDTargetsOperationCompleted);
            }
            this.InvokeAsync("FnInsertJDTargets", new object[] {
                        lineno,
                        workplanno,
                        annualtarget,
                        assignedtarget}, this.FnInsertJDTargetsOperationCompleted, userState);
        }
        
        private void OnFnInsertJDTargetsOperationCompleted(object arg) {
            if ((this.FnInsertJDTargetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertJDTargetsCompleted(this, new FnInsertJDTargetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSuggestJD", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSuggestJD_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSuggestJD(string workplan) {
            object[] results = this.Invoke("FnSuggestJD", new object[] {
                        workplan});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSuggestJDAsync(string workplan) {
            this.FnSuggestJDAsync(workplan, null);
        }
        
        /// <remarks/>
        public void FnSuggestJDAsync(string workplan, object userState) {
            if ((this.FnSuggestJDOperationCompleted == null)) {
                this.FnSuggestJDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSuggestJDOperationCompleted);
            }
            this.InvokeAsync("FnSuggestJD", new object[] {
                        workplan}, this.FnSuggestJDOperationCompleted, userState);
        }
        
        private void OnFnSuggestJDOperationCompleted(object arg) {
            if ((this.FnSuggestJDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSuggestJDCompleted(this, new FnSuggestJDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGetAnnualWorkplanLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGetAnnualWorkplanLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetAnnualWorkplanLines(string csp, string annualcode) {
            object[] results = this.Invoke("FnGetAnnualWorkplanLines", new object[] {
                        csp,
                        annualcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetAnnualWorkplanLinesAsync(string csp, string annualcode) {
            this.FnGetAnnualWorkplanLinesAsync(csp, annualcode, null);
        }
        
        /// <remarks/>
        public void FnGetAnnualWorkplanLinesAsync(string csp, string annualcode, object userState) {
            if ((this.FnGetAnnualWorkplanLinesOperationCompleted == null)) {
                this.FnGetAnnualWorkplanLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetAnnualWorkplanLinesOperationCompleted);
            }
            this.InvokeAsync("FnGetAnnualWorkplanLines", new object[] {
                        csp,
                        annualcode}, this.FnGetAnnualWorkplanLinesOperationCompleted, userState);
        }
        
        private void OnFnGetAnnualWorkplanLinesOperationCompleted(object arg) {
            if ((this.FnGetAnnualWorkplanLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetAnnualWorkplanLinesCompleted(this, new FnGetAnnualWorkplanLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertSelectedAdditionalActivi" +
            "ties", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertSelectedAdditionalActivities_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertSelectedAdditionalActivities(string csp, string annualcode, string personalPc, string activityID) {
            object[] results = this.Invoke("FnInsertSelectedAdditionalActivities", new object[] {
                        csp,
                        annualcode,
                        personalPc,
                        activityID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertSelectedAdditionalActivitiesAsync(string csp, string annualcode, string personalPc, string activityID) {
            this.FnInsertSelectedAdditionalActivitiesAsync(csp, annualcode, personalPc, activityID, null);
        }
        
        /// <remarks/>
        public void FnInsertSelectedAdditionalActivitiesAsync(string csp, string annualcode, string personalPc, string activityID, object userState) {
            if ((this.FnInsertSelectedAdditionalActivitiesOperationCompleted == null)) {
                this.FnInsertSelectedAdditionalActivitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertSelectedAdditionalActivitiesOperationCompleted);
            }
            this.InvokeAsync("FnInsertSelectedAdditionalActivities", new object[] {
                        csp,
                        annualcode,
                        personalPc,
                        activityID}, this.FnInsertSelectedAdditionalActivitiesOperationCompleted, userState);
        }
        
        private void OnFnInsertSelectedAdditionalActivitiesOperationCompleted(object arg) {
            if ((this.FnInsertSelectedAdditionalActivitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertSelectedAdditionalActivitiesCompleted(this, new FnInsertSelectedAdditionalActivitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateCSPReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateCSPReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateCSPReport(string docNo) {
            object[] results = this.Invoke("FnGenerateCSPReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateCSPReportAsync(string docNo) {
            this.FnGenerateCSPReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateCSPReportAsync(string docNo, object userState) {
            if ((this.FnGenerateCSPReportOperationCompleted == null)) {
                this.FnGenerateCSPReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateCSPReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateCSPReport", new object[] {
                        docNo}, this.FnGenerateCSPReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateCSPReportOperationCompleted(object arg) {
            if ((this.FnGenerateCSPReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateCSPReportCompleted(this, new FnGenerateCSPReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateAWPReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateAWPReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateAWPReport(string docNo) {
            object[] results = this.Invoke("FnGenerateAWPReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateAWPReportAsync(string docNo) {
            this.FnGenerateAWPReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateAWPReportAsync(string docNo, object userState) {
            if ((this.FnGenerateAWPReportOperationCompleted == null)) {
                this.FnGenerateAWPReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateAWPReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateAWPReport", new object[] {
                        docNo}, this.FnGenerateAWPReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateAWPReportOperationCompleted(object arg) {
            if ((this.FnGenerateAWPReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateAWPReportCompleted(this, new FnGenerateAWPReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateBoardPCReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateBoardPCReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateBoardPCReport(string docNo) {
            object[] results = this.Invoke("FnGenerateBoardPCReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateBoardPCReportAsync(string docNo) {
            this.FnGenerateBoardPCReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateBoardPCReportAsync(string docNo, object userState) {
            if ((this.FnGenerateBoardPCReportOperationCompleted == null)) {
                this.FnGenerateBoardPCReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateBoardPCReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateBoardPCReport", new object[] {
                        docNo}, this.FnGenerateBoardPCReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateBoardPCReportOperationCompleted(object arg) {
            if ((this.FnGenerateBoardPCReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateBoardPCReportCompleted(this, new FnGenerateBoardPCReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitStandardAppraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitStandardAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitStandardAppraisal(string docNo) {
            object[] results = this.Invoke("FnSubmitStandardAppraisal", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalAsync(string docNo) {
            this.FnSubmitStandardAppraisalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalAsync(string docNo, object userState) {
            if ((this.FnSubmitStandardAppraisalOperationCompleted == null)) {
                this.FnSubmitStandardAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitStandardAppraisalOperationCompleted);
            }
            this.InvokeAsync("FnSubmitStandardAppraisal", new object[] {
                        docNo}, this.FnSubmitStandardAppraisalOperationCompleted, userState);
        }
        
        private void OnFnSubmitStandardAppraisalOperationCompleted(object arg) {
            if ((this.FnSubmitStandardAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitStandardAppraisalCompleted(this, new FnSubmitStandardAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnCancelSubmitofStandardAppraisa" +
            "l", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnCancelSubmitofStandardAppraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCancelSubmitofStandardAppraisal(string docNo) {
            object[] results = this.Invoke("FnCancelSubmitofStandardAppraisal", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCancelSubmitofStandardAppraisalAsync(string docNo) {
            this.FnCancelSubmitofStandardAppraisalAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnCancelSubmitofStandardAppraisalAsync(string docNo, object userState) {
            if ((this.FnCancelSubmitofStandardAppraisalOperationCompleted == null)) {
                this.FnCancelSubmitofStandardAppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCancelSubmitofStandardAppraisalOperationCompleted);
            }
            this.InvokeAsync("FnCancelSubmitofStandardAppraisal", new object[] {
                        docNo}, this.FnCancelSubmitofStandardAppraisalOperationCompleted, userState);
        }
        
        private void OnFnCancelSubmitofStandardAppraisalOperationCompleted(object arg) {
            if ((this.FnCancelSubmitofStandardAppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCancelSubmitofStandardAppraisalCompleted(this, new FnCancelSubmitofStandardAppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitStandardAppraisalObj", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitStandardAppraisalObj_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitStandardAppraisalObj(string docNo, int lineno, decimal appraiserQty, string comments) {
            object[] results = this.Invoke("FnSubmitStandardAppraisalObj", new object[] {
                        docNo,
                        lineno,
                        appraiserQty,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalObjAsync(string docNo, int lineno, decimal appraiserQty, string comments) {
            this.FnSubmitStandardAppraisalObjAsync(docNo, lineno, appraiserQty, comments, null);
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalObjAsync(string docNo, int lineno, decimal appraiserQty, string comments, object userState) {
            if ((this.FnSubmitStandardAppraisalObjOperationCompleted == null)) {
                this.FnSubmitStandardAppraisalObjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitStandardAppraisalObjOperationCompleted);
            }
            this.InvokeAsync("FnSubmitStandardAppraisalObj", new object[] {
                        docNo,
                        lineno,
                        appraiserQty,
                        comments}, this.FnSubmitStandardAppraisalObjOperationCompleted, userState);
        }
        
        private void OnFnSubmitStandardAppraisalObjOperationCompleted(object arg) {
            if ((this.FnSubmitStandardAppraisalObjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitStandardAppraisalObjCompleted(this, new FnSubmitStandardAppraisalObjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitStandardAppraisalPE", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitStandardAppraisalPE_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitStandardAppraisalPE(string docNo, int lineno, decimal appraiserQty, string comments) {
            object[] results = this.Invoke("FnSubmitStandardAppraisalPE", new object[] {
                        docNo,
                        lineno,
                        appraiserQty,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalPEAsync(string docNo, int lineno, decimal appraiserQty, string comments) {
            this.FnSubmitStandardAppraisalPEAsync(docNo, lineno, appraiserQty, comments, null);
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalPEAsync(string docNo, int lineno, decimal appraiserQty, string comments, object userState) {
            if ((this.FnSubmitStandardAppraisalPEOperationCompleted == null)) {
                this.FnSubmitStandardAppraisalPEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitStandardAppraisalPEOperationCompleted);
            }
            this.InvokeAsync("FnSubmitStandardAppraisalPE", new object[] {
                        docNo,
                        lineno,
                        appraiserQty,
                        comments}, this.FnSubmitStandardAppraisalPEOperationCompleted, userState);
        }
        
        private void OnFnSubmitStandardAppraisalPEOperationCompleted(object arg) {
            if ((this.FnSubmitStandardAppraisalPECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitStandardAppraisalPECompleted(this, new FnSubmitStandardAppraisalPECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertStandardAppraisalPIP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertStandardAppraisalPIP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStandardAppraisalPIP(string docNo, string pipcategory, string desc) {
            object[] results = this.Invoke("FnInsertStandardAppraisalPIP", new object[] {
                        docNo,
                        pipcategory,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStandardAppraisalPIPAsync(string docNo, string pipcategory, string desc) {
            this.FnInsertStandardAppraisalPIPAsync(docNo, pipcategory, desc, null);
        }
        
        /// <remarks/>
        public void FnInsertStandardAppraisalPIPAsync(string docNo, string pipcategory, string desc, object userState) {
            if ((this.FnInsertStandardAppraisalPIPOperationCompleted == null)) {
                this.FnInsertStandardAppraisalPIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStandardAppraisalPIPOperationCompleted);
            }
            this.InvokeAsync("FnInsertStandardAppraisalPIP", new object[] {
                        docNo,
                        pipcategory,
                        desc}, this.FnInsertStandardAppraisalPIPOperationCompleted, userState);
        }
        
        private void OnFnInsertStandardAppraisalPIPOperationCompleted(object arg) {
            if ((this.FnInsertStandardAppraisalPIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStandardAppraisalPIPCompleted(this, new FnInsertStandardAppraisalPIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditStandardAppraisalPIP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditStandardAppraisalPIP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditStandardAppraisalPIP(string docNo, int lineno, string pipcategory, string desc) {
            object[] results = this.Invoke("FnEditStandardAppraisalPIP", new object[] {
                        docNo,
                        lineno,
                        pipcategory,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditStandardAppraisalPIPAsync(string docNo, int lineno, string pipcategory, string desc) {
            this.FnEditStandardAppraisalPIPAsync(docNo, lineno, pipcategory, desc, null);
        }
        
        /// <remarks/>
        public void FnEditStandardAppraisalPIPAsync(string docNo, int lineno, string pipcategory, string desc, object userState) {
            if ((this.FnEditStandardAppraisalPIPOperationCompleted == null)) {
                this.FnEditStandardAppraisalPIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditStandardAppraisalPIPOperationCompleted);
            }
            this.InvokeAsync("FnEditStandardAppraisalPIP", new object[] {
                        docNo,
                        lineno,
                        pipcategory,
                        desc}, this.FnEditStandardAppraisalPIPOperationCompleted, userState);
        }
        
        private void OnFnEditStandardAppraisalPIPOperationCompleted(object arg) {
            if ((this.FnEditStandardAppraisalPIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditStandardAppraisalPIPCompleted(this, new FnEditStandardAppraisalPIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemoveStandardAppraisalPIP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemoveStandardAppraisalPIP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveStandardAppraisalPIP(string docNo, int lineno) {
            object[] results = this.Invoke("FnRemoveStandardAppraisalPIP", new object[] {
                        docNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveStandardAppraisalPIPAsync(string docNo, int lineno) {
            this.FnRemoveStandardAppraisalPIPAsync(docNo, lineno, null);
        }
        
        /// <remarks/>
        public void FnRemoveStandardAppraisalPIPAsync(string docNo, int lineno, object userState) {
            if ((this.FnRemoveStandardAppraisalPIPOperationCompleted == null)) {
                this.FnRemoveStandardAppraisalPIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveStandardAppraisalPIPOperationCompleted);
            }
            this.InvokeAsync("FnRemoveStandardAppraisalPIP", new object[] {
                        docNo,
                        lineno}, this.FnRemoveStandardAppraisalPIPOperationCompleted, userState);
        }
        
        private void OnFnRemoveStandardAppraisalPIPOperationCompleted(object arg) {
            if ((this.FnRemoveStandardAppraisalPIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveStandardAppraisalPIPCompleted(this, new FnRemoveStandardAppraisalPIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertStandardAppraisalTrainig" +
            "Needs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertStandardAppraisalTrainigNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertStandardAppraisalTrainigNeeds(string docNo, string category, string desc) {
            object[] results = this.Invoke("FnInsertStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        category,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertStandardAppraisalTrainigNeedsAsync(string docNo, string category, string desc) {
            this.FnInsertStandardAppraisalTrainigNeedsAsync(docNo, category, desc, null);
        }
        
        /// <remarks/>
        public void FnInsertStandardAppraisalTrainigNeedsAsync(string docNo, string category, string desc, object userState) {
            if ((this.FnInsertStandardAppraisalTrainigNeedsOperationCompleted == null)) {
                this.FnInsertStandardAppraisalTrainigNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertStandardAppraisalTrainigNeedsOperationCompleted);
            }
            this.InvokeAsync("FnInsertStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        category,
                        desc}, this.FnInsertStandardAppraisalTrainigNeedsOperationCompleted, userState);
        }
        
        private void OnFnInsertStandardAppraisalTrainigNeedsOperationCompleted(object arg) {
            if ((this.FnInsertStandardAppraisalTrainigNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertStandardAppraisalTrainigNeedsCompleted(this, new FnInsertStandardAppraisalTrainigNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnRemoveStandardAppraisalTrainig" +
            "Needs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnRemoveStandardAppraisalTrainigNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRemoveStandardAppraisalTrainigNeeds(string docNo, int lineno) {
            object[] results = this.Invoke("FnRemoveStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRemoveStandardAppraisalTrainigNeedsAsync(string docNo, int lineno) {
            this.FnRemoveStandardAppraisalTrainigNeedsAsync(docNo, lineno, null);
        }
        
        /// <remarks/>
        public void FnRemoveStandardAppraisalTrainigNeedsAsync(string docNo, int lineno, object userState) {
            if ((this.FnRemoveStandardAppraisalTrainigNeedsOperationCompleted == null)) {
                this.FnRemoveStandardAppraisalTrainigNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRemoveStandardAppraisalTrainigNeedsOperationCompleted);
            }
            this.InvokeAsync("FnRemoveStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        lineno}, this.FnRemoveStandardAppraisalTrainigNeedsOperationCompleted, userState);
        }
        
        private void OnFnRemoveStandardAppraisalTrainigNeedsOperationCompleted(object arg) {
            if ((this.FnRemoveStandardAppraisalTrainigNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRemoveStandardAppraisalTrainigNeedsCompleted(this, new FnRemoveStandardAppraisalTrainigNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditStandardAppraisalTrainigNe" +
            "eds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditStandardAppraisalTrainigNeeds_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditStandardAppraisalTrainigNeeds(string docNo, int lineno, string category, string desc) {
            object[] results = this.Invoke("FnEditStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        lineno,
                        category,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditStandardAppraisalTrainigNeedsAsync(string docNo, int lineno, string category, string desc) {
            this.FnEditStandardAppraisalTrainigNeedsAsync(docNo, lineno, category, desc, null);
        }
        
        /// <remarks/>
        public void FnEditStandardAppraisalTrainigNeedsAsync(string docNo, int lineno, string category, string desc, object userState) {
            if ((this.FnEditStandardAppraisalTrainigNeedsOperationCompleted == null)) {
                this.FnEditStandardAppraisalTrainigNeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditStandardAppraisalTrainigNeedsOperationCompleted);
            }
            this.InvokeAsync("FnEditStandardAppraisalTrainigNeeds", new object[] {
                        docNo,
                        lineno,
                        category,
                        desc}, this.FnEditStandardAppraisalTrainigNeedsOperationCompleted, userState);
        }
        
        private void OnFnEditStandardAppraisalTrainigNeedsOperationCompleted(object arg) {
            if ((this.FnEditStandardAppraisalTrainigNeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditStandardAppraisalTrainigNeedsCompleted(this, new FnEditStandardAppraisalTrainigNeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSubmitStandardAppraisalConfirm" +
            "ation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSubmitStandardAppraisalConfirmation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitStandardAppraisalConfirmation(string docNo) {
            object[] results = this.Invoke("FnSubmitStandardAppraisalConfirmation", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalConfirmationAsync(string docNo) {
            this.FnSubmitStandardAppraisalConfirmationAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitStandardAppraisalConfirmationAsync(string docNo, object userState) {
            if ((this.FnSubmitStandardAppraisalConfirmationOperationCompleted == null)) {
                this.FnSubmitStandardAppraisalConfirmationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitStandardAppraisalConfirmationOperationCompleted);
            }
            this.InvokeAsync("FnSubmitStandardAppraisalConfirmation", new object[] {
                        docNo}, this.FnSubmitStandardAppraisalConfirmationOperationCompleted, userState);
        }
        
        private void OnFnSubmitStandardAppraisalConfirmationOperationCompleted(object arg) {
            if ((this.FnSubmitStandardAppraisalConfirmationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitStandardAppraisalConfirmationCompleted(this, new FnSubmitStandardAppraisalConfirmationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnSendAppraisalEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnSendAppraisalEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendAppraisalEmail(string docNo) {
            object[] results = this.Invoke("FnSendAppraisalEmail", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendAppraisalEmailAsync(string docNo) {
            this.FnSendAppraisalEmailAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnSendAppraisalEmailAsync(string docNo, object userState) {
            if ((this.FnSendAppraisalEmailOperationCompleted == null)) {
                this.FnSendAppraisalEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendAppraisalEmailOperationCompleted);
            }
            this.InvokeAsync("FnSendAppraisalEmail", new object[] {
                        docNo}, this.FnSendAppraisalEmailOperationCompleted, userState);
        }
        
        private void OnFnSendAppraisalEmailOperationCompleted(object arg) {
            if ((this.FnSendAppraisalEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendAppraisalEmailCompleted(this, new FnSendAppraisalEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTrainingParticipants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTrainingParticipants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrainingParticipants(string type, string participantEmpno, string destination, decimal noOfDays, string reqNo) {
            object[] results = this.Invoke("AddTrainingParticipants", new object[] {
                        type,
                        participantEmpno,
                        destination,
                        noOfDays,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingParticipantsAsync(string type, string participantEmpno, string destination, decimal noOfDays, string reqNo) {
            this.AddTrainingParticipantsAsync(type, participantEmpno, destination, noOfDays, reqNo, null);
        }
        
        /// <remarks/>
        public void AddTrainingParticipantsAsync(string type, string participantEmpno, string destination, decimal noOfDays, string reqNo, object userState) {
            if ((this.AddTrainingParticipantsOperationCompleted == null)) {
                this.AddTrainingParticipantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingParticipantsOperationCompleted);
            }
            this.InvokeAsync("AddTrainingParticipants", new object[] {
                        type,
                        participantEmpno,
                        destination,
                        noOfDays,
                        reqNo}, this.AddTrainingParticipantsOperationCompleted, userState);
        }
        
        private void OnAddTrainingParticipantsOperationCompleted(object arg) {
            if ((this.AddTrainingParticipantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingParticipantsCompleted(this, new AddTrainingParticipantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditTrainingParticipants", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditTrainingParticipants_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditTrainingParticipants(int lineno, string type, string teammember, int noOfDays, string docNo) {
            object[] results = this.Invoke("EditTrainingParticipants", new object[] {
                        lineno,
                        type,
                        teammember,
                        noOfDays,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditTrainingParticipantsAsync(int lineno, string type, string teammember, int noOfDays, string docNo) {
            this.EditTrainingParticipantsAsync(lineno, type, teammember, noOfDays, docNo, null);
        }
        
        /// <remarks/>
        public void EditTrainingParticipantsAsync(int lineno, string type, string teammember, int noOfDays, string docNo, object userState) {
            if ((this.EditTrainingParticipantsOperationCompleted == null)) {
                this.EditTrainingParticipantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditTrainingParticipantsOperationCompleted);
            }
            this.InvokeAsync("EditTrainingParticipants", new object[] {
                        lineno,
                        type,
                        teammember,
                        noOfDays,
                        docNo}, this.EditTrainingParticipantsOperationCompleted, userState);
        }
        
        private void OnEditTrainingParticipantsOperationCompleted(object arg) {
            if ((this.EditTrainingParticipantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditTrainingParticipantsCompleted(this, new EditTrainingParticipantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResetPassword(string employeeNumbera45idNumber) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        employeeNumbera45idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string employeeNumbera45idNumber) {
            this.ResetPasswordAsync(employeeNumbera45idNumber, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string employeeNumbera45idNumber, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        employeeNumbera45idNumber}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreatePettyCash", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreatePettyCash_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatePettyCash(string docNo, string empNo, string job, string jobTaskno, string pNarration, string region, string constituency) {
            object[] results = this.Invoke("CreatePettyCash", new object[] {
                        docNo,
                        empNo,
                        job,
                        jobTaskno,
                        pNarration,
                        region,
                        constituency});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePettyCashAsync(string docNo, string empNo, string job, string jobTaskno, string pNarration, string region, string constituency) {
            this.CreatePettyCashAsync(docNo, empNo, job, jobTaskno, pNarration, region, constituency, null);
        }
        
        /// <remarks/>
        public void CreatePettyCashAsync(string docNo, string empNo, string job, string jobTaskno, string pNarration, string region, string constituency, object userState) {
            if ((this.CreatePettyCashOperationCompleted == null)) {
                this.CreatePettyCashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePettyCashOperationCompleted);
            }
            this.InvokeAsync("CreatePettyCash", new object[] {
                        docNo,
                        empNo,
                        job,
                        jobTaskno,
                        pNarration,
                        region,
                        constituency}, this.CreatePettyCashOperationCompleted, userState);
        }
        
        private void OnCreatePettyCashOperationCompleted(object arg) {
            if ((this.CreatePettyCashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePettyCashCompleted(this, new CreatePettyCashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreatePettyCashLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreatePettyCashLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatePettyCashLines(string docNo, string type, decimal amount) {
            object[] results = this.Invoke("CreatePettyCashLines", new object[] {
                        docNo,
                        type,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePettyCashLinesAsync(string docNo, string type, decimal amount) {
            this.CreatePettyCashLinesAsync(docNo, type, amount, null);
        }
        
        /// <remarks/>
        public void CreatePettyCashLinesAsync(string docNo, string type, decimal amount, object userState) {
            if ((this.CreatePettyCashLinesOperationCompleted == null)) {
                this.CreatePettyCashLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePettyCashLinesOperationCompleted);
            }
            this.InvokeAsync("CreatePettyCashLines", new object[] {
                        docNo,
                        type,
                        amount}, this.CreatePettyCashLinesOperationCompleted, userState);
        }
        
        private void OnCreatePettyCashLinesOperationCompleted(object arg) {
            if ((this.CreatePettyCashLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePettyCashLinesCompleted(this, new CreatePettyCashLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:PopulatePettyCash", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="PopulatePettyCash_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PopulatePettyCash(string docNo, string empNo) {
            object[] results = this.Invoke("PopulatePettyCash", new object[] {
                        docNo,
                        empNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PopulatePettyCashAsync(string docNo, string empNo) {
            this.PopulatePettyCashAsync(docNo, empNo, null);
        }
        
        /// <remarks/>
        public void PopulatePettyCashAsync(string docNo, string empNo, object userState) {
            if ((this.PopulatePettyCashOperationCompleted == null)) {
                this.PopulatePettyCashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulatePettyCashOperationCompleted);
            }
            this.InvokeAsync("PopulatePettyCash", new object[] {
                        docNo,
                        empNo}, this.PopulatePettyCashOperationCompleted, userState);
        }
        
        private void OnPopulatePettyCashOperationCompleted(object arg) {
            if ((this.PopulatePettyCashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulatePettyCashCompleted(this, new PopulatePettyCashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditPettyCashLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditPettyCashLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditPettyCashLines(string type, decimal amount, string reqNo, int id) {
            object[] results = this.Invoke("EditPettyCashLines", new object[] {
                        type,
                        amount,
                        reqNo,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditPettyCashLinesAsync(string type, decimal amount, string reqNo, int id) {
            this.EditPettyCashLinesAsync(type, amount, reqNo, id, null);
        }
        
        /// <remarks/>
        public void EditPettyCashLinesAsync(string type, decimal amount, string reqNo, int id, object userState) {
            if ((this.EditPettyCashLinesOperationCompleted == null)) {
                this.EditPettyCashLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditPettyCashLinesOperationCompleted);
            }
            this.InvokeAsync("EditPettyCashLines", new object[] {
                        type,
                        amount,
                        reqNo,
                        id}, this.EditPettyCashLinesOperationCompleted, userState);
        }
        
        private void OnEditPettyCashLinesOperationCompleted(object arg) {
            if ((this.EditPettyCashLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditPettyCashLinesCompleted(this, new EditPettyCashLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeletePettyCashLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeletePettyCashLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeletePettyCashLines(int id, string reqNo) {
            object[] results = this.Invoke("DeletePettyCashLines", new object[] {
                        id,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePettyCashLinesAsync(int id, string reqNo) {
            this.DeletePettyCashLinesAsync(id, reqNo, null);
        }
        
        /// <remarks/>
        public void DeletePettyCashLinesAsync(int id, string reqNo, object userState) {
            if ((this.DeletePettyCashLinesOperationCompleted == null)) {
                this.DeletePettyCashLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePettyCashLinesOperationCompleted);
            }
            this.InvokeAsync("DeletePettyCashLines", new object[] {
                        id,
                        reqNo}, this.DeletePettyCashLinesOperationCompleted, userState);
        }
        
        private void OnDeletePettyCashLinesOperationCompleted(object arg) {
            if ((this.DeletePettyCashLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePettyCashLinesCompleted(this, new DeletePettyCashLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendPettyCashRequestApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendPettyCashRequestApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendPettyCashRequestApproval(string employeeNo, string reqNo) {
            object[] results = this.Invoke("SendPettyCashRequestApproval", new object[] {
                        employeeNo,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendPettyCashRequestApprovalAsync(string employeeNo, string reqNo) {
            this.SendPettyCashRequestApprovalAsync(employeeNo, reqNo, null);
        }
        
        /// <remarks/>
        public void SendPettyCashRequestApprovalAsync(string employeeNo, string reqNo, object userState) {
            if ((this.SendPettyCashRequestApprovalOperationCompleted == null)) {
                this.SendPettyCashRequestApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPettyCashRequestApprovalOperationCompleted);
            }
            this.InvokeAsync("SendPettyCashRequestApproval", new object[] {
                        employeeNo,
                        reqNo}, this.SendPettyCashRequestApprovalOperationCompleted, userState);
        }
        
        private void OnSendPettyCashRequestApprovalOperationCompleted(object arg) {
            if ((this.SendPettyCashRequestApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPettyCashRequestApprovalCompleted(this, new SendPettyCashRequestApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelPettyCashRequestApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelPettyCashRequestApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelPettyCashRequestApproval(string employeeNo, string recordNo) {
            object[] results = this.Invoke("CancelPettyCashRequestApproval", new object[] {
                        employeeNo,
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelPettyCashRequestApprovalAsync(string employeeNo, string recordNo) {
            this.CancelPettyCashRequestApprovalAsync(employeeNo, recordNo, null);
        }
        
        /// <remarks/>
        public void CancelPettyCashRequestApprovalAsync(string employeeNo, string recordNo, object userState) {
            if ((this.CancelPettyCashRequestApprovalOperationCompleted == null)) {
                this.CancelPettyCashRequestApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPettyCashRequestApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelPettyCashRequestApproval", new object[] {
                        employeeNo,
                        recordNo}, this.CancelPettyCashRequestApprovalOperationCompleted, userState);
        }
        
        private void OnCancelPettyCashRequestApprovalOperationCompleted(object arg) {
            if ((this.CancelPettyCashRequestApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPettyCashRequestApprovalCompleted(this, new CancelPettyCashRequestApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdatePettyCashSurrenderLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdatePettyCashSurrenderLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePettyCashSurrenderLine(string employeeNo, string pettyCashNo, int lineNo, decimal amountSpent, string receipt) {
            object[] results = this.Invoke("UpdatePettyCashSurrenderLine", new object[] {
                        employeeNo,
                        pettyCashNo,
                        lineNo,
                        amountSpent,
                        receipt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePettyCashSurrenderLineAsync(string employeeNo, string pettyCashNo, int lineNo, decimal amountSpent, string receipt) {
            this.UpdatePettyCashSurrenderLineAsync(employeeNo, pettyCashNo, lineNo, amountSpent, receipt, null);
        }
        
        /// <remarks/>
        public void UpdatePettyCashSurrenderLineAsync(string employeeNo, string pettyCashNo, int lineNo, decimal amountSpent, string receipt, object userState) {
            if ((this.UpdatePettyCashSurrenderLineOperationCompleted == null)) {
                this.UpdatePettyCashSurrenderLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePettyCashSurrenderLineOperationCompleted);
            }
            this.InvokeAsync("UpdatePettyCashSurrenderLine", new object[] {
                        employeeNo,
                        pettyCashNo,
                        lineNo,
                        amountSpent,
                        receipt}, this.UpdatePettyCashSurrenderLineOperationCompleted, userState);
        }
        
        private void OnUpdatePettyCashSurrenderLineOperationCompleted(object arg) {
            if ((this.UpdatePettyCashSurrenderLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePettyCashSurrenderLineCompleted(this, new UpdatePettyCashSurrenderLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendPettyCashSurrenderApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendPettyCashSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendPettyCashSurrenderApproval(string employeeNo, string imprestSurrenderNo) {
            object[] results = this.Invoke("SendPettyCashSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendPettyCashSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo) {
            this.SendPettyCashSurrenderApprovalAsync(employeeNo, imprestSurrenderNo, null);
        }
        
        /// <remarks/>
        public void SendPettyCashSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo, object userState) {
            if ((this.SendPettyCashSurrenderApprovalOperationCompleted == null)) {
                this.SendPettyCashSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPettyCashSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("SendPettyCashSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo}, this.SendPettyCashSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OnSendPettyCashSurrenderApprovalOperationCompleted(object arg) {
            if ((this.SendPettyCashSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPettyCashSurrenderApprovalCompleted(this, new SendPettyCashSurrenderApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelPettyCashSurrenderApproval" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelPettyCashSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelPettyCashSurrenderApproval(string employeeNo, string recordNo) {
            object[] results = this.Invoke("CancelPettyCashSurrenderApproval", new object[] {
                        employeeNo,
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelPettyCashSurrenderApprovalAsync(string employeeNo, string recordNo) {
            this.CancelPettyCashSurrenderApprovalAsync(employeeNo, recordNo, null);
        }
        
        /// <remarks/>
        public void CancelPettyCashSurrenderApprovalAsync(string employeeNo, string recordNo, object userState) {
            if ((this.CancelPettyCashSurrenderApprovalOperationCompleted == null)) {
                this.CancelPettyCashSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPettyCashSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelPettyCashSurrenderApproval", new object[] {
                        employeeNo,
                        recordNo}, this.CancelPettyCashSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OnCancelPettyCashSurrenderApprovalOperationCompleted(object arg) {
            if ((this.CancelPettyCashSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPettyCashSurrenderApprovalCompleted(this, new CancelPettyCashSurrenderApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateTrainingRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateTrainingRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTrainingRequisition(string docNo, string trainingplan, string courseTitle, string trainingVenue, string respCenter, string location, string provider, string empNo, string desc) {
            object[] results = this.Invoke("CreateTrainingRequisition", new object[] {
                        docNo,
                        trainingplan,
                        courseTitle,
                        trainingVenue,
                        respCenter,
                        location,
                        provider,
                        empNo,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTrainingRequisitionAsync(string docNo, string trainingplan, string courseTitle, string trainingVenue, string respCenter, string location, string provider, string empNo, string desc) {
            this.CreateTrainingRequisitionAsync(docNo, trainingplan, courseTitle, trainingVenue, respCenter, location, provider, empNo, desc, null);
        }
        
        /// <remarks/>
        public void CreateTrainingRequisitionAsync(string docNo, string trainingplan, string courseTitle, string trainingVenue, string respCenter, string location, string provider, string empNo, string desc, object userState) {
            if ((this.CreateTrainingRequisitionOperationCompleted == null)) {
                this.CreateTrainingRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrainingRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreateTrainingRequisition", new object[] {
                        docNo,
                        trainingplan,
                        courseTitle,
                        trainingVenue,
                        respCenter,
                        location,
                        provider,
                        empNo,
                        desc}, this.CreateTrainingRequisitionOperationCompleted, userState);
        }
        
        private void OnCreateTrainingRequisitionOperationCompleted(object arg) {
            if ((this.CreateTrainingRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrainingRequisitionCompleted(this, new CreateTrainingRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTrainingParticipants2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTrainingParticipants2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrainingParticipants2(string type, string participantEmpno, decimal noOfDays, string reqNo) {
            object[] results = this.Invoke("AddTrainingParticipants2", new object[] {
                        type,
                        participantEmpno,
                        noOfDays,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingParticipants2Async(string type, string participantEmpno, decimal noOfDays, string reqNo) {
            this.AddTrainingParticipants2Async(type, participantEmpno, noOfDays, reqNo, null);
        }
        
        /// <remarks/>
        public void AddTrainingParticipants2Async(string type, string participantEmpno, decimal noOfDays, string reqNo, object userState) {
            if ((this.AddTrainingParticipants2OperationCompleted == null)) {
                this.AddTrainingParticipants2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingParticipants2OperationCompleted);
            }
            this.InvokeAsync("AddTrainingParticipants2", new object[] {
                        type,
                        participantEmpno,
                        noOfDays,
                        reqNo}, this.AddTrainingParticipants2OperationCompleted, userState);
        }
        
        private void OnAddTrainingParticipants2OperationCompleted(object arg) {
            if ((this.AddTrainingParticipants2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingParticipants2Completed(this, new AddTrainingParticipants2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditTrainingParticipants2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditTrainingParticipants2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditTrainingParticipants2(string docNo, int lineno, string type, string empNo, int noOfDays) {
            object[] results = this.Invoke("EditTrainingParticipants2", new object[] {
                        docNo,
                        lineno,
                        type,
                        empNo,
                        noOfDays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditTrainingParticipants2Async(string docNo, int lineno, string type, string empNo, int noOfDays) {
            this.EditTrainingParticipants2Async(docNo, lineno, type, empNo, noOfDays, null);
        }
        
        /// <remarks/>
        public void EditTrainingParticipants2Async(string docNo, int lineno, string type, string empNo, int noOfDays, object userState) {
            if ((this.EditTrainingParticipants2OperationCompleted == null)) {
                this.EditTrainingParticipants2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditTrainingParticipants2OperationCompleted);
            }
            this.InvokeAsync("EditTrainingParticipants2", new object[] {
                        docNo,
                        lineno,
                        type,
                        empNo,
                        noOfDays}, this.EditTrainingParticipants2OperationCompleted, userState);
        }
        
        private void OnEditTrainingParticipants2OperationCompleted(object arg) {
            if ((this.EditTrainingParticipants2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditTrainingParticipants2Completed(this, new EditTrainingParticipants2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteTrainingParticipants2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteTrainingParticipants2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteTrainingParticipants2(int id, string reqNo) {
            object[] results = this.Invoke("DeleteTrainingParticipants2", new object[] {
                        id,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTrainingParticipants2Async(int id, string reqNo) {
            this.DeleteTrainingParticipants2Async(id, reqNo, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingParticipants2Async(int id, string reqNo, object userState) {
            if ((this.DeleteTrainingParticipants2OperationCompleted == null)) {
                this.DeleteTrainingParticipants2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingParticipants2OperationCompleted);
            }
            this.InvokeAsync("DeleteTrainingParticipants2", new object[] {
                        id,
                        reqNo}, this.DeleteTrainingParticipants2OperationCompleted, userState);
        }
        
        private void OnDeleteTrainingParticipants2OperationCompleted(object arg) {
            if ((this.DeleteTrainingParticipants2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingParticipants2Completed(this, new DeleteTrainingParticipants2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTrainingCost2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTrainingCost2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrainingCost2(string docNo, int costcategory, string costitem, string itemcategory, string item, decimal unitcost, int quantity) {
            object[] results = this.Invoke("AddTrainingCost2", new object[] {
                        docNo,
                        costcategory,
                        costitem,
                        itemcategory,
                        item,
                        unitcost,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingCost2Async(string docNo, int costcategory, string costitem, string itemcategory, string item, decimal unitcost, int quantity) {
            this.AddTrainingCost2Async(docNo, costcategory, costitem, itemcategory, item, unitcost, quantity, null);
        }
        
        /// <remarks/>
        public void AddTrainingCost2Async(string docNo, int costcategory, string costitem, string itemcategory, string item, decimal unitcost, int quantity, object userState) {
            if ((this.AddTrainingCost2OperationCompleted == null)) {
                this.AddTrainingCost2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingCost2OperationCompleted);
            }
            this.InvokeAsync("AddTrainingCost2", new object[] {
                        docNo,
                        costcategory,
                        costitem,
                        itemcategory,
                        item,
                        unitcost,
                        quantity}, this.AddTrainingCost2OperationCompleted, userState);
        }
        
        private void OnAddTrainingCost2OperationCompleted(object arg) {
            if ((this.AddTrainingCost2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingCost2Completed(this, new AddTrainingCost2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteTrainingcost2", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteTrainingcost2_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteTrainingcost2(int id, string reqNo) {
            object[] results = this.Invoke("DeleteTrainingcost2", new object[] {
                        id,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTrainingcost2Async(int id, string reqNo) {
            this.DeleteTrainingcost2Async(id, reqNo, null);
        }
        
        /// <remarks/>
        public void DeleteTrainingcost2Async(int id, string reqNo, object userState) {
            if ((this.DeleteTrainingcost2OperationCompleted == null)) {
                this.DeleteTrainingcost2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrainingcost2OperationCompleted);
            }
            this.InvokeAsync("DeleteTrainingcost2", new object[] {
                        id,
                        reqNo}, this.DeleteTrainingcost2OperationCompleted, userState);
        }
        
        private void OnDeleteTrainingcost2OperationCompleted(object arg) {
            if ((this.DeleteTrainingcost2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrainingcost2Completed(this, new DeleteTrainingcost2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendTrainingRequestApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendTrainingRequestApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendTrainingRequestApproval(string employeeNo, string reqNo) {
            object[] results = this.Invoke("SendTrainingRequestApproval", new object[] {
                        employeeNo,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendTrainingRequestApprovalAsync(string employeeNo, string reqNo) {
            this.SendTrainingRequestApprovalAsync(employeeNo, reqNo, null);
        }
        
        /// <remarks/>
        public void SendTrainingRequestApprovalAsync(string employeeNo, string reqNo, object userState) {
            if ((this.SendTrainingRequestApprovalOperationCompleted == null)) {
                this.SendTrainingRequestApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTrainingRequestApprovalOperationCompleted);
            }
            this.InvokeAsync("SendTrainingRequestApproval", new object[] {
                        employeeNo,
                        reqNo}, this.SendTrainingRequestApprovalOperationCompleted, userState);
        }
        
        private void OnSendTrainingRequestApprovalOperationCompleted(object arg) {
            if ((this.SendTrainingRequestApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTrainingRequestApprovalCompleted(this, new SendTrainingRequestApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelTrainingRequestApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelTrainingRequestApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelTrainingRequestApproval(string employeeNo, string recordNo) {
            object[] results = this.Invoke("CancelTrainingRequestApproval", new object[] {
                        employeeNo,
                        recordNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelTrainingRequestApprovalAsync(string employeeNo, string recordNo) {
            this.CancelTrainingRequestApprovalAsync(employeeNo, recordNo, null);
        }
        
        /// <remarks/>
        public void CancelTrainingRequestApprovalAsync(string employeeNo, string recordNo, object userState) {
            if ((this.CancelTrainingRequestApprovalOperationCompleted == null)) {
                this.CancelTrainingRequestApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTrainingRequestApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelTrainingRequestApproval", new object[] {
                        employeeNo,
                        recordNo}, this.CancelTrainingRequestApprovalOperationCompleted, userState);
        }
        
        private void OnCancelTrainingRequestApprovalOperationCompleted(object arg) {
            if ((this.CancelTrainingRequestApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTrainingRequestApprovalCompleted(this, new CancelTrainingRequestApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateTrainingApplicationRep" +
            "ort", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateTrainingApplicationReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateTrainingApplicationReport(string docNo) {
            object[] results = this.Invoke("FnGenerateTrainingApplicationReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateTrainingApplicationReportAsync(string docNo) {
            this.FnGenerateTrainingApplicationReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateTrainingApplicationReportAsync(string docNo, object userState) {
            if ((this.FnGenerateTrainingApplicationReportOperationCompleted == null)) {
                this.FnGenerateTrainingApplicationReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateTrainingApplicationReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateTrainingApplicationReport", new object[] {
                        docNo}, this.FnGenerateTrainingApplicationReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateTrainingApplicationReportOperationCompleted(object arg) {
            if ((this.FnGenerateTrainingApplicationReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateTrainingApplicationReportCompleted(this, new FnGenerateTrainingApplicationReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateTrainingPlanReport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateTrainingPlanReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateTrainingPlanReport(string docNo) {
            object[] results = this.Invoke("FnGenerateTrainingPlanReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateTrainingPlanReportAsync(string docNo) {
            this.FnGenerateTrainingPlanReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateTrainingPlanReportAsync(string docNo, object userState) {
            if ((this.FnGenerateTrainingPlanReportOperationCompleted == null)) {
                this.FnGenerateTrainingPlanReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateTrainingPlanReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateTrainingPlanReport", new object[] {
                        docNo}, this.FnGenerateTrainingPlanReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateTrainingPlanReportOperationCompleted(object arg) {
            if ((this.FnGenerateTrainingPlanReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateTrainingPlanReportCompleted(this, new FnGenerateTrainingPlanReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateNewTrainingRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateNewTrainingRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewTrainingRequest(string employeeNo, string needsNo, string description) {
            object[] results = this.Invoke("CreateNewTrainingRequest", new object[] {
                        employeeNo,
                        needsNo,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewTrainingRequestAsync(string employeeNo, string needsNo, string description) {
            this.CreateNewTrainingRequestAsync(employeeNo, needsNo, description, null);
        }
        
        /// <remarks/>
        public void CreateNewTrainingRequestAsync(string employeeNo, string needsNo, string description, object userState) {
            if ((this.CreateNewTrainingRequestOperationCompleted == null)) {
                this.CreateNewTrainingRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewTrainingRequestOperationCompleted);
            }
            this.InvokeAsync("CreateNewTrainingRequest", new object[] {
                        employeeNo,
                        needsNo,
                        description}, this.CreateNewTrainingRequestOperationCompleted, userState);
        }
        
        private void OnCreateNewTrainingRequestOperationCompleted(object arg) {
            if ((this.CreateNewTrainingRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewTrainingRequestCompleted(this, new CreateNewTrainingRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateNewTrainingNeedsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateNewTrainingNeedsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewTrainingNeedsLines(string requestNo, string description, int source, string comments) {
            object[] results = this.Invoke("CreateNewTrainingNeedsLines", new object[] {
                        requestNo,
                        description,
                        source,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewTrainingNeedsLinesAsync(string requestNo, string description, int source, string comments) {
            this.CreateNewTrainingNeedsLinesAsync(requestNo, description, source, comments, null);
        }
        
        /// <remarks/>
        public void CreateNewTrainingNeedsLinesAsync(string requestNo, string description, int source, string comments, object userState) {
            if ((this.CreateNewTrainingNeedsLinesOperationCompleted == null)) {
                this.CreateNewTrainingNeedsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewTrainingNeedsLinesOperationCompleted);
            }
            this.InvokeAsync("CreateNewTrainingNeedsLines", new object[] {
                        requestNo,
                        description,
                        source,
                        comments}, this.CreateNewTrainingNeedsLinesOperationCompleted, userState);
        }
        
        private void OnCreateNewTrainingNeedsLinesOperationCompleted(object arg) {
            if ((this.CreateNewTrainingNeedsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewTrainingNeedsLinesCompleted(this, new CreateNewTrainingNeedsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendTrainingNeedsApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendTrainingNeedsApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendTrainingNeedsApproval(string employeeno, string needsno) {
            object[] results = this.Invoke("SendTrainingNeedsApproval", new object[] {
                        employeeno,
                        needsno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendTrainingNeedsApprovalAsync(string employeeno, string needsno) {
            this.SendTrainingNeedsApprovalAsync(employeeno, needsno, null);
        }
        
        /// <remarks/>
        public void SendTrainingNeedsApprovalAsync(string employeeno, string needsno, object userState) {
            if ((this.SendTrainingNeedsApprovalOperationCompleted == null)) {
                this.SendTrainingNeedsApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTrainingNeedsApprovalOperationCompleted);
            }
            this.InvokeAsync("SendTrainingNeedsApproval", new object[] {
                        employeeno,
                        needsno}, this.SendTrainingNeedsApprovalOperationCompleted, userState);
        }
        
        private void OnSendTrainingNeedsApprovalOperationCompleted(object arg) {
            if ((this.SendTrainingNeedsApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTrainingNeedsApprovalCompleted(this, new SendTrainingNeedsApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditTrainingNeedsRequestLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditTrainingNeedsRequestLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditTrainingNeedsRequestLines(string needsno, int lineno, string description, int source, string comments) {
            object[] results = this.Invoke("FnEditTrainingNeedsRequestLines", new object[] {
                        needsno,
                        lineno,
                        description,
                        source,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditTrainingNeedsRequestLinesAsync(string needsno, int lineno, string description, int source, string comments) {
            this.FnEditTrainingNeedsRequestLinesAsync(needsno, lineno, description, source, comments, null);
        }
        
        /// <remarks/>
        public void FnEditTrainingNeedsRequestLinesAsync(string needsno, int lineno, string description, int source, string comments, object userState) {
            if ((this.FnEditTrainingNeedsRequestLinesOperationCompleted == null)) {
                this.FnEditTrainingNeedsRequestLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditTrainingNeedsRequestLinesOperationCompleted);
            }
            this.InvokeAsync("FnEditTrainingNeedsRequestLines", new object[] {
                        needsno,
                        lineno,
                        description,
                        source,
                        comments}, this.FnEditTrainingNeedsRequestLinesOperationCompleted, userState);
        }
        
        private void OnFnEditTrainingNeedsRequestLinesOperationCompleted(object arg) {
            if ((this.FnEditTrainingNeedsRequestLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditTrainingNeedsRequestLinesCompleted(this, new FnEditTrainingNeedsRequestLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteTrainingNeedsLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteTrainingNeedsLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteTrainingNeedsLines(string needsno, int lineno) {
            object[] results = this.Invoke("FnDeleteTrainingNeedsLines", new object[] {
                        needsno,
                        lineno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteTrainingNeedsLinesAsync(string needsno, int lineno) {
            this.FnDeleteTrainingNeedsLinesAsync(needsno, lineno, null);
        }
        
        /// <remarks/>
        public void FnDeleteTrainingNeedsLinesAsync(string needsno, int lineno, object userState) {
            if ((this.FnDeleteTrainingNeedsLinesOperationCompleted == null)) {
                this.FnDeleteTrainingNeedsLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteTrainingNeedsLinesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteTrainingNeedsLines", new object[] {
                        needsno,
                        lineno}, this.FnDeleteTrainingNeedsLinesOperationCompleted, userState);
        }
        
        private void OnFnDeleteTrainingNeedsLinesOperationCompleted(object arg) {
            if ((this.FnDeleteTrainingNeedsLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteTrainingNeedsLinesCompleted(this, new FnDeleteTrainingNeedsLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateNewTrainingFeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateNewTrainingFeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewTrainingFeedback(string employeeNo, string feedbackNo, string applicationCode) {
            object[] results = this.Invoke("CreateNewTrainingFeedback", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewTrainingFeedbackAsync(string employeeNo, string feedbackNo, string applicationCode) {
            this.CreateNewTrainingFeedbackAsync(employeeNo, feedbackNo, applicationCode, null);
        }
        
        /// <remarks/>
        public void CreateNewTrainingFeedbackAsync(string employeeNo, string feedbackNo, string applicationCode, object userState) {
            if ((this.CreateNewTrainingFeedbackOperationCompleted == null)) {
                this.CreateNewTrainingFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewTrainingFeedbackOperationCompleted);
            }
            this.InvokeAsync("CreateNewTrainingFeedback", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode}, this.CreateNewTrainingFeedbackOperationCompleted, userState);
        }
        
        private void OnCreateNewTrainingFeedbackOperationCompleted(object arg) {
            if ((this.CreateNewTrainingFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewTrainingFeedbackCompleted(this, new CreateNewTrainingFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateTrainingFeedbackLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateTrainingFeedbackLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateTrainingFeedbackLines(string feedbackNo, int lineno, string ratingcode, string comments, int categorycode, string categorydesc, string trainingcategory) {
            object[] results = this.Invoke("CreateTrainingFeedbackLines", new object[] {
                        feedbackNo,
                        lineno,
                        ratingcode,
                        comments,
                        categorycode,
                        categorydesc,
                        trainingcategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTrainingFeedbackLinesAsync(string feedbackNo, int lineno, string ratingcode, string comments, int categorycode, string categorydesc, string trainingcategory) {
            this.CreateTrainingFeedbackLinesAsync(feedbackNo, lineno, ratingcode, comments, categorycode, categorydesc, trainingcategory, null);
        }
        
        /// <remarks/>
        public void CreateTrainingFeedbackLinesAsync(string feedbackNo, int lineno, string ratingcode, string comments, int categorycode, string categorydesc, string trainingcategory, object userState) {
            if ((this.CreateTrainingFeedbackLinesOperationCompleted == null)) {
                this.CreateTrainingFeedbackLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrainingFeedbackLinesOperationCompleted);
            }
            this.InvokeAsync("CreateTrainingFeedbackLines", new object[] {
                        feedbackNo,
                        lineno,
                        ratingcode,
                        comments,
                        categorycode,
                        categorydesc,
                        trainingcategory}, this.CreateTrainingFeedbackLinesOperationCompleted, userState);
        }
        
        private void OnCreateTrainingFeedbackLinesOperationCompleted(object arg) {
            if ((this.CreateTrainingFeedbackLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrainingFeedbackLinesCompleted(this, new CreateTrainingFeedbackLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateTrainingFeedbackReport" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateTrainingFeedbackReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateTrainingFeedbackReport(string docNo) {
            object[] results = this.Invoke("FnGenerateTrainingFeedbackReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateTrainingFeedbackReportAsync(string docNo) {
            this.FnGenerateTrainingFeedbackReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateTrainingFeedbackReportAsync(string docNo, object userState) {
            if ((this.FnGenerateTrainingFeedbackReportOperationCompleted == null)) {
                this.FnGenerateTrainingFeedbackReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateTrainingFeedbackReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateTrainingFeedbackReport", new object[] {
                        docNo}, this.FnGenerateTrainingFeedbackReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateTrainingFeedbackReportOperationCompleted(object arg) {
            if ((this.FnGenerateTrainingFeedbackReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateTrainingFeedbackReportCompleted(this, new FnGenerateTrainingFeedbackReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnEditTrainingFeedbackLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnEditTrainingFeedbackLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditTrainingFeedbackLines(int lineno, string feedbackno, string rating, string category, string comments) {
            object[] results = this.Invoke("FnEditTrainingFeedbackLines", new object[] {
                        lineno,
                        feedbackno,
                        rating,
                        category,
                        comments});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditTrainingFeedbackLinesAsync(int lineno, string feedbackno, string rating, string category, string comments) {
            this.FnEditTrainingFeedbackLinesAsync(lineno, feedbackno, rating, category, comments, null);
        }
        
        /// <remarks/>
        public void FnEditTrainingFeedbackLinesAsync(int lineno, string feedbackno, string rating, string category, string comments, object userState) {
            if ((this.FnEditTrainingFeedbackLinesOperationCompleted == null)) {
                this.FnEditTrainingFeedbackLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditTrainingFeedbackLinesOperationCompleted);
            }
            this.InvokeAsync("FnEditTrainingFeedbackLines", new object[] {
                        lineno,
                        feedbackno,
                        rating,
                        category,
                        comments}, this.FnEditTrainingFeedbackLinesOperationCompleted, userState);
        }
        
        private void OnFnEditTrainingFeedbackLinesOperationCompleted(object arg) {
            if ((this.FnEditTrainingFeedbackLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditTrainingFeedbackLinesCompleted(this, new FnEditTrainingFeedbackLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnDeleteTrainingFeedbackLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnDeleteTrainingFeedbackLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteTrainingFeedbackLines(int lineno, string feedbackno) {
            object[] results = this.Invoke("FnDeleteTrainingFeedbackLines", new object[] {
                        lineno,
                        feedbackno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteTrainingFeedbackLinesAsync(int lineno, string feedbackno) {
            this.FnDeleteTrainingFeedbackLinesAsync(lineno, feedbackno, null);
        }
        
        /// <remarks/>
        public void FnDeleteTrainingFeedbackLinesAsync(int lineno, string feedbackno, object userState) {
            if ((this.FnDeleteTrainingFeedbackLinesOperationCompleted == null)) {
                this.FnDeleteTrainingFeedbackLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteTrainingFeedbackLinesOperationCompleted);
            }
            this.InvokeAsync("FnDeleteTrainingFeedbackLines", new object[] {
                        lineno,
                        feedbackno}, this.FnDeleteTrainingFeedbackLinesOperationCompleted, userState);
        }
        
        private void OnFnDeleteTrainingFeedbackLinesOperationCompleted(object arg) {
            if ((this.FnDeleteTrainingFeedbackLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteTrainingFeedbackLinesCompleted(this, new FnDeleteTrainingFeedbackLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SubmitTrainingFeedback", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SubmitTrainingFeedback_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitTrainingFeedback(string feedbackNo) {
            object[] results = this.Invoke("SubmitTrainingFeedback", new object[] {
                        feedbackNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitTrainingFeedbackAsync(string feedbackNo) {
            this.SubmitTrainingFeedbackAsync(feedbackNo, null);
        }
        
        /// <remarks/>
        public void SubmitTrainingFeedbackAsync(string feedbackNo, object userState) {
            if ((this.SubmitTrainingFeedbackOperationCompleted == null)) {
                this.SubmitTrainingFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitTrainingFeedbackOperationCompleted);
            }
            this.InvokeAsync("SubmitTrainingFeedback", new object[] {
                        feedbackNo}, this.SubmitTrainingFeedbackOperationCompleted, userState);
        }
        
        private void OnSubmitTrainingFeedbackOperationCompleted(object arg) {
            if ((this.SubmitTrainingFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitTrainingFeedbackCompleted(this, new SubmitTrainingFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateNewTrainingEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateNewTrainingEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateNewTrainingEvaluation(string employeeNo, string feedbackNo, string applicationCode) {
            object[] results = this.Invoke("CreateNewTrainingEvaluation", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewTrainingEvaluationAsync(string employeeNo, string feedbackNo, string applicationCode) {
            this.CreateNewTrainingEvaluationAsync(employeeNo, feedbackNo, applicationCode, null);
        }
        
        /// <remarks/>
        public void CreateNewTrainingEvaluationAsync(string employeeNo, string feedbackNo, string applicationCode, object userState) {
            if ((this.CreateNewTrainingEvaluationOperationCompleted == null)) {
                this.CreateNewTrainingEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewTrainingEvaluationOperationCompleted);
            }
            this.InvokeAsync("CreateNewTrainingEvaluation", new object[] {
                        employeeNo,
                        feedbackNo,
                        applicationCode}, this.CreateNewTrainingEvaluationOperationCompleted, userState);
        }
        
        private void OnCreateNewTrainingEvaluationOperationCompleted(object arg) {
            if ((this.CreateNewTrainingEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewTrainingEvaluationCompleted(this, new CreateNewTrainingEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SubmitTrainingEvaluation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SubmitTrainingEvaluation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SubmitTrainingEvaluation(string feedbackNo) {
            object[] results = this.Invoke("SubmitTrainingEvaluation", new object[] {
                        feedbackNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitTrainingEvaluationAsync(string feedbackNo) {
            this.SubmitTrainingEvaluationAsync(feedbackNo, null);
        }
        
        /// <remarks/>
        public void SubmitTrainingEvaluationAsync(string feedbackNo, object userState) {
            if ((this.SubmitTrainingEvaluationOperationCompleted == null)) {
                this.SubmitTrainingEvaluationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitTrainingEvaluationOperationCompleted);
            }
            this.InvokeAsync("SubmitTrainingEvaluation", new object[] {
                        feedbackNo}, this.SubmitTrainingEvaluationOperationCompleted, userState);
        }
        
        private void OnSubmitTrainingEvaluationOperationCompleted(object arg) {
            if ((this.SubmitTrainingEvaluationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitTrainingEvaluationCompleted(this, new SubmitTrainingEvaluationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnGenerateTrainingEvaluationRepo" +
            "rt", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnGenerateTrainingEvaluationReport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateTrainingEvaluationReport(string docNo) {
            object[] results = this.Invoke("FnGenerateTrainingEvaluationReport", new object[] {
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateTrainingEvaluationReportAsync(string docNo) {
            this.FnGenerateTrainingEvaluationReportAsync(docNo, null);
        }
        
        /// <remarks/>
        public void FnGenerateTrainingEvaluationReportAsync(string docNo, object userState) {
            if ((this.FnGenerateTrainingEvaluationReportOperationCompleted == null)) {
                this.FnGenerateTrainingEvaluationReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateTrainingEvaluationReportOperationCompleted);
            }
            this.InvokeAsync("FnGenerateTrainingEvaluationReport", new object[] {
                        docNo}, this.FnGenerateTrainingEvaluationReportOperationCompleted, userState);
        }
        
        private void OnFnGenerateTrainingEvaluationReportOperationCompleted(object arg) {
            if ((this.FnGenerateTrainingEvaluationReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateTrainingEvaluationReportCompleted(this, new FnGenerateTrainingEvaluationReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:FnInsertEvaluationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="FnInsertEvaluationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertEvaluationLines(string docNo, int lineNo, string rating, string comment) {
            object[] results = this.Invoke("FnInsertEvaluationLines", new object[] {
                        docNo,
                        lineNo,
                        rating,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertEvaluationLinesAsync(string docNo, int lineNo, string rating, string comment) {
            this.FnInsertEvaluationLinesAsync(docNo, lineNo, rating, comment, null);
        }
        
        /// <remarks/>
        public void FnInsertEvaluationLinesAsync(string docNo, int lineNo, string rating, string comment, object userState) {
            if ((this.FnInsertEvaluationLinesOperationCompleted == null)) {
                this.FnInsertEvaluationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertEvaluationLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertEvaluationLines", new object[] {
                        docNo,
                        lineNo,
                        rating,
                        comment}, this.FnInsertEvaluationLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertEvaluationLinesOperationCompleted(object arg) {
            if ((this.FnInsertEvaluationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertEvaluationLinesCompleted(this, new FnInsertEvaluationLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:LeaveApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="LeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string LeaveApplication(string leaveNo, string employeeNumber, string leaveType, int annualLeaveType, int daysApplied, System.DateTime lStartDate, string phoneNumber, string emailAddress, string examdetails, System.DateTime dateOfExam, int previousAttempts, string reliever) {
            object[] results = this.Invoke("LeaveApplication", new object[] {
                        leaveNo,
                        employeeNumber,
                        leaveType,
                        annualLeaveType,
                        daysApplied,
                        lStartDate,
                        phoneNumber,
                        emailAddress,
                        examdetails,
                        dateOfExam,
                        previousAttempts,
                        reliever});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LeaveApplicationAsync(string leaveNo, string employeeNumber, string leaveType, int annualLeaveType, int daysApplied, System.DateTime lStartDate, string phoneNumber, string emailAddress, string examdetails, System.DateTime dateOfExam, int previousAttempts, string reliever) {
            this.LeaveApplicationAsync(leaveNo, employeeNumber, leaveType, annualLeaveType, daysApplied, lStartDate, phoneNumber, emailAddress, examdetails, dateOfExam, previousAttempts, reliever, null);
        }
        
        /// <remarks/>
        public void LeaveApplicationAsync(string leaveNo, string employeeNumber, string leaveType, int annualLeaveType, int daysApplied, System.DateTime lStartDate, string phoneNumber, string emailAddress, string examdetails, System.DateTime dateOfExam, int previousAttempts, string reliever, object userState) {
            if ((this.LeaveApplicationOperationCompleted == null)) {
                this.LeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("LeaveApplication", new object[] {
                        leaveNo,
                        employeeNumber,
                        leaveType,
                        annualLeaveType,
                        daysApplied,
                        lStartDate,
                        phoneNumber,
                        emailAddress,
                        examdetails,
                        dateOfExam,
                        previousAttempts,
                        reliever}, this.LeaveApplicationOperationCompleted, userState);
        }
        
        private void OnLeaveApplicationOperationCompleted(object arg) {
            if ((this.LeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LeaveApplicationCompleted(this, new LeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GeneratePayslip", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GeneratePayslip_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePayslip(string employeeNumber, System.DateTime payPeriod) {
            object[] results = this.Invoke("GeneratePayslip", new object[] {
                        employeeNumber,
                        payPeriod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePayslipAsync(string employeeNumber, System.DateTime payPeriod) {
            this.GeneratePayslipAsync(employeeNumber, payPeriod, null);
        }
        
        /// <remarks/>
        public void GeneratePayslipAsync(string employeeNumber, System.DateTime payPeriod, object userState) {
            if ((this.GeneratePayslipOperationCompleted == null)) {
                this.GeneratePayslipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePayslipOperationCompleted);
            }
            this.InvokeAsync("GeneratePayslip", new object[] {
                        employeeNumber,
                        payPeriod}, this.GeneratePayslipOperationCompleted, userState);
        }
        
        private void OnGeneratePayslipOperationCompleted(object arg) {
            if ((this.GeneratePayslipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePayslipCompleted(this, new GeneratePayslipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateImprestMemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateImprestMemo(string employeeNumber, string docNo) {
            object[] results = this.Invoke("GenerateImprestMemo", new object[] {
                        employeeNumber,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateImprestMemoAsync(string employeeNumber, string docNo) {
            this.GenerateImprestMemoAsync(employeeNumber, docNo, null);
        }
        
        /// <remarks/>
        public void GenerateImprestMemoAsync(string employeeNumber, string docNo, object userState) {
            if ((this.GenerateImprestMemoOperationCompleted == null)) {
                this.GenerateImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateImprestMemoOperationCompleted);
            }
            this.InvokeAsync("GenerateImprestMemo", new object[] {
                        employeeNumber,
                        docNo}, this.GenerateImprestMemoOperationCompleted, userState);
        }
        
        private void OnGenerateImprestMemoOperationCompleted(object arg) {
            if ((this.GenerateImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateImprestMemoCompleted(this, new GenerateImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateEmployeeStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateEmployeeStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateEmployeeStatement(string employeeNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            object[] results = this.Invoke("GenerateEmployeeStatement", new object[] {
                        employeeNumber,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateEmployeeStatementAsync(string employeeNumber, System.DateTime startDate, System.DateTime endDate) {
            this.GenerateEmployeeStatementAsync(employeeNumber, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GenerateEmployeeStatementAsync(string employeeNumber, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GenerateEmployeeStatementOperationCompleted == null)) {
                this.GenerateEmployeeStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateEmployeeStatementOperationCompleted);
            }
            this.InvokeAsync("GenerateEmployeeStatement", new object[] {
                        employeeNumber,
                        startDate,
                        endDate}, this.GenerateEmployeeStatementOperationCompleted, userState);
        }
        
        private void OnGenerateEmployeeStatementOperationCompleted(object arg) {
            if ((this.GenerateEmployeeStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateEmployeeStatementCompleted(this, new GenerateEmployeeStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateP9", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateP9_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateP9(string employeeNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate) {
            object[] results = this.Invoke("GenerateP9", new object[] {
                        employeeNumber,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateP9Async(string employeeNumber, System.DateTime startDate, System.DateTime endDate) {
            this.GenerateP9Async(employeeNumber, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GenerateP9Async(string employeeNumber, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GenerateP9OperationCompleted == null)) {
                this.GenerateP9OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateP9OperationCompleted);
            }
            this.InvokeAsync("GenerateP9", new object[] {
                        employeeNumber,
                        startDate,
                        endDate}, this.GenerateP9OperationCompleted, userState);
        }
        
        private void OnGenerateP9OperationCompleted(object arg) {
            if ((this.GenerateP9Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateP9Completed(this, new GenerateP9CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GeneratePurchaseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GeneratePurchaseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePurchaseRequisition(string employeeNumber, string docNo) {
            object[] results = this.Invoke("GeneratePurchaseRequisition", new object[] {
                        employeeNumber,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePurchaseRequisitionAsync(string employeeNumber, string docNo) {
            this.GeneratePurchaseRequisitionAsync(employeeNumber, docNo, null);
        }
        
        /// <remarks/>
        public void GeneratePurchaseRequisitionAsync(string employeeNumber, string docNo, object userState) {
            if ((this.GeneratePurchaseRequisitionOperationCompleted == null)) {
                this.GeneratePurchaseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePurchaseRequisitionOperationCompleted);
            }
            this.InvokeAsync("GeneratePurchaseRequisition", new object[] {
                        employeeNumber,
                        docNo}, this.GeneratePurchaseRequisitionOperationCompleted, userState);
        }
        
        private void OnGeneratePurchaseRequisitionOperationCompleted(object arg) {
            if ((this.GeneratePurchaseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePurchaseRequisitionCompleted(this, new GeneratePurchaseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateStoreRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateStoreRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateStoreRequisition(string employeeNumber, string docNo) {
            object[] results = this.Invoke("GenerateStoreRequisition", new object[] {
                        employeeNumber,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateStoreRequisitionAsync(string employeeNumber, string docNo) {
            this.GenerateStoreRequisitionAsync(employeeNumber, docNo, null);
        }
        
        /// <remarks/>
        public void GenerateStoreRequisitionAsync(string employeeNumber, string docNo, object userState) {
            if ((this.GenerateStoreRequisitionOperationCompleted == null)) {
                this.GenerateStoreRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateStoreRequisitionOperationCompleted);
            }
            this.InvokeAsync("GenerateStoreRequisition", new object[] {
                        employeeNumber,
                        docNo}, this.GenerateStoreRequisitionOperationCompleted, userState);
        }
        
        private void OnGenerateStoreRequisitionOperationCompleted(object arg) {
            if ((this.GenerateStoreRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateStoreRequisitionCompleted(this, new GenerateStoreRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateIssueVoucher", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateIssueVoucher_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateIssueVoucher(string employeeNumber, string docNo) {
            object[] results = this.Invoke("GenerateIssueVoucher", new object[] {
                        employeeNumber,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateIssueVoucherAsync(string employeeNumber, string docNo) {
            this.GenerateIssueVoucherAsync(employeeNumber, docNo, null);
        }
        
        /// <remarks/>
        public void GenerateIssueVoucherAsync(string employeeNumber, string docNo, object userState) {
            if ((this.GenerateIssueVoucherOperationCompleted == null)) {
                this.GenerateIssueVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateIssueVoucherOperationCompleted);
            }
            this.InvokeAsync("GenerateIssueVoucher", new object[] {
                        employeeNumber,
                        docNo}, this.GenerateIssueVoucherOperationCompleted, userState);
        }
        
        private void OnGenerateIssueVoucherOperationCompleted(object arg) {
            if ((this.GenerateIssueVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateIssueVoucherCompleted(this, new GenerateIssueVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GeneratePettyCashVoucher", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GeneratePettyCashVoucher_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePettyCashVoucher(string employeeNumber, string docNo) {
            object[] results = this.Invoke("GeneratePettyCashVoucher", new object[] {
                        employeeNumber,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePettyCashVoucherAsync(string employeeNumber, string docNo) {
            this.GeneratePettyCashVoucherAsync(employeeNumber, docNo, null);
        }
        
        /// <remarks/>
        public void GeneratePettyCashVoucherAsync(string employeeNumber, string docNo, object userState) {
            if ((this.GeneratePettyCashVoucherOperationCompleted == null)) {
                this.GeneratePettyCashVoucherOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePettyCashVoucherOperationCompleted);
            }
            this.InvokeAsync("GeneratePettyCashVoucher", new object[] {
                        employeeNumber,
                        docNo}, this.GeneratePettyCashVoucherOperationCompleted, userState);
        }
        
        private void OnGeneratePettyCashVoucherOperationCompleted(object arg) {
            if ((this.GeneratePettyCashVoucherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePettyCashVoucherCompleted(this, new GeneratePettyCashVoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateStaffClaim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateStaffClaim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateStaffClaim(string employeeNumber, string docNo) {
            object[] results = this.Invoke("GenerateStaffClaim", new object[] {
                        employeeNumber,
                        docNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateStaffClaimAsync(string employeeNumber, string docNo) {
            this.GenerateStaffClaimAsync(employeeNumber, docNo, null);
        }
        
        /// <remarks/>
        public void GenerateStaffClaimAsync(string employeeNumber, string docNo, object userState) {
            if ((this.GenerateStaffClaimOperationCompleted == null)) {
                this.GenerateStaffClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateStaffClaimOperationCompleted);
            }
            this.InvokeAsync("GenerateStaffClaim", new object[] {
                        employeeNumber,
                        docNo}, this.GenerateStaffClaimOperationCompleted, userState);
        }
        
        private void OnGenerateStaffClaimOperationCompleted(object arg) {
            if ((this.GenerateStaffClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateStaffClaimCompleted(this, new GenerateStaffClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:Register", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="Register_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Register(string first_Name, string middle_Name, string last_name, string email_Address, string phone_Number, string idNumbera47Passport, string citizenship, string gender) {
            object[] results = this.Invoke("Register", new object[] {
                        first_Name,
                        middle_Name,
                        last_name,
                        email_Address,
                        phone_Number,
                        idNumbera47Passport,
                        citizenship,
                        gender});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(string first_Name, string middle_Name, string last_name, string email_Address, string phone_Number, string idNumbera47Passport, string citizenship, string gender) {
            this.RegisterAsync(first_Name, middle_Name, last_name, email_Address, phone_Number, idNumbera47Passport, citizenship, gender, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string first_Name, string middle_Name, string last_name, string email_Address, string phone_Number, string idNumbera47Passport, string citizenship, string gender, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        first_Name,
                        middle_Name,
                        last_name,
                        email_Address,
                        phone_Number,
                        idNumbera47Passport,
                        citizenship,
                        gender}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddHobby", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddHobby_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddHobby(string idNumber, string hobby) {
            object[] results = this.Invoke("AddHobby", new object[] {
                        idNumber,
                        hobby});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHobbyAsync(string idNumber, string hobby) {
            this.AddHobbyAsync(idNumber, hobby, null);
        }
        
        /// <remarks/>
        public void AddHobbyAsync(string idNumber, string hobby, object userState) {
            if ((this.AddHobbyOperationCompleted == null)) {
                this.AddHobbyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHobbyOperationCompleted);
            }
            this.InvokeAsync("AddHobby", new object[] {
                        idNumber,
                        hobby}, this.AddHobbyOperationCompleted, userState);
        }
        
        private void OnAddHobbyOperationCompleted(object arg) {
            if ((this.AddHobbyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHobbyCompleted(this, new AddHobbyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateGeneralDetails(
                    string idNumber, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string initials, 
                    string firstLanguage, 
                    bool firstLanguageRead, 
                    bool firstLanguageWrite, 
                    bool firstLanguageSpeak, 
                    string secondLanguage, 
                    bool secondLanguageRead, 
                    bool secondLanguageWrite, 
                    bool secondLanguageSpeak, 
                    string additionalLanguage, 
                    string gender, 
                    string citizenship) {
            object[] results = this.Invoke("UpdateGeneralDetails", new object[] {
                        idNumber,
                        firstName,
                        middleName,
                        lastName,
                        initials,
                        firstLanguage,
                        firstLanguageRead,
                        firstLanguageWrite,
                        firstLanguageSpeak,
                        secondLanguage,
                        secondLanguageRead,
                        secondLanguageWrite,
                        secondLanguageSpeak,
                        additionalLanguage,
                        gender,
                        citizenship});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGeneralDetailsAsync(
                    string idNumber, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string initials, 
                    string firstLanguage, 
                    bool firstLanguageRead, 
                    bool firstLanguageWrite, 
                    bool firstLanguageSpeak, 
                    string secondLanguage, 
                    bool secondLanguageRead, 
                    bool secondLanguageWrite, 
                    bool secondLanguageSpeak, 
                    string additionalLanguage, 
                    string gender, 
                    string citizenship) {
            this.UpdateGeneralDetailsAsync(idNumber, firstName, middleName, lastName, initials, firstLanguage, firstLanguageRead, firstLanguageWrite, firstLanguageSpeak, secondLanguage, secondLanguageRead, secondLanguageWrite, secondLanguageSpeak, additionalLanguage, gender, citizenship, null);
        }
        
        /// <remarks/>
        public void UpdateGeneralDetailsAsync(
                    string idNumber, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string initials, 
                    string firstLanguage, 
                    bool firstLanguageRead, 
                    bool firstLanguageWrite, 
                    bool firstLanguageSpeak, 
                    string secondLanguage, 
                    bool secondLanguageRead, 
                    bool secondLanguageWrite, 
                    bool secondLanguageSpeak, 
                    string additionalLanguage, 
                    string gender, 
                    string citizenship, 
                    object userState) {
            if ((this.UpdateGeneralDetailsOperationCompleted == null)) {
                this.UpdateGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateGeneralDetails", new object[] {
                        idNumber,
                        firstName,
                        middleName,
                        lastName,
                        initials,
                        firstLanguage,
                        firstLanguageRead,
                        firstLanguageWrite,
                        firstLanguageSpeak,
                        secondLanguage,
                        secondLanguageRead,
                        secondLanguageWrite,
                        secondLanguageSpeak,
                        additionalLanguage,
                        gender,
                        citizenship}, this.UpdateGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateGeneralDetailsOperationCompleted(object arg) {
            if ((this.UpdateGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGeneralDetailsCompleted(this, new UpdateGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdatePersonalDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdatePersonalDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePersonalDetails(string idNumber, string maritalStatus, string ethnicOrigin, string disabled, bool healthAssessment, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime healthAssessmentDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth) {
            object[] results = this.Invoke("UpdatePersonalDetails", new object[] {
                        idNumber,
                        maritalStatus,
                        ethnicOrigin,
                        disabled,
                        healthAssessment,
                        healthAssessmentDate,
                        dateOfBirth});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePersonalDetailsAsync(string idNumber, string maritalStatus, string ethnicOrigin, string disabled, bool healthAssessment, System.DateTime healthAssessmentDate, System.DateTime dateOfBirth) {
            this.UpdatePersonalDetailsAsync(idNumber, maritalStatus, ethnicOrigin, disabled, healthAssessment, healthAssessmentDate, dateOfBirth, null);
        }
        
        /// <remarks/>
        public void UpdatePersonalDetailsAsync(string idNumber, string maritalStatus, string ethnicOrigin, string disabled, bool healthAssessment, System.DateTime healthAssessmentDate, System.DateTime dateOfBirth, object userState) {
            if ((this.UpdatePersonalDetailsOperationCompleted == null)) {
                this.UpdatePersonalDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePersonalDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdatePersonalDetails", new object[] {
                        idNumber,
                        maritalStatus,
                        ethnicOrigin,
                        disabled,
                        healthAssessment,
                        healthAssessmentDate,
                        dateOfBirth}, this.UpdatePersonalDetailsOperationCompleted, userState);
        }
        
        private void OnUpdatePersonalDetailsOperationCompleted(object arg) {
            if ((this.UpdatePersonalDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePersonalDetailsCompleted(this, new UpdatePersonalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateCommunicationDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateCommunicationDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateCommunicationDetails(string idNumber, string homePhoneNumber, string postalAddress, string postalAddress2, string postalAddress3, string residentialAddress, string residentialAddress2, string residentialAddress3, string cellPhoneNumber, string workPhoneNumber, string extension, string fax, string postCode, string postCode2) {
            object[] results = this.Invoke("UpdateCommunicationDetails", new object[] {
                        idNumber,
                        homePhoneNumber,
                        postalAddress,
                        postalAddress2,
                        postalAddress3,
                        residentialAddress,
                        residentialAddress2,
                        residentialAddress3,
                        cellPhoneNumber,
                        workPhoneNumber,
                        extension,
                        fax,
                        postCode,
                        postCode2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCommunicationDetailsAsync(string idNumber, string homePhoneNumber, string postalAddress, string postalAddress2, string postalAddress3, string residentialAddress, string residentialAddress2, string residentialAddress3, string cellPhoneNumber, string workPhoneNumber, string extension, string fax, string postCode, string postCode2) {
            this.UpdateCommunicationDetailsAsync(idNumber, homePhoneNumber, postalAddress, postalAddress2, postalAddress3, residentialAddress, residentialAddress2, residentialAddress3, cellPhoneNumber, workPhoneNumber, extension, fax, postCode, postCode2, null);
        }
        
        /// <remarks/>
        public void UpdateCommunicationDetailsAsync(string idNumber, string homePhoneNumber, string postalAddress, string postalAddress2, string postalAddress3, string residentialAddress, string residentialAddress2, string residentialAddress3, string cellPhoneNumber, string workPhoneNumber, string extension, string fax, string postCode, string postCode2, object userState) {
            if ((this.UpdateCommunicationDetailsOperationCompleted == null)) {
                this.UpdateCommunicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCommunicationDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateCommunicationDetails", new object[] {
                        idNumber,
                        homePhoneNumber,
                        postalAddress,
                        postalAddress2,
                        postalAddress3,
                        residentialAddress,
                        residentialAddress2,
                        residentialAddress3,
                        cellPhoneNumber,
                        workPhoneNumber,
                        extension,
                        fax,
                        postCode,
                        postCode2}, this.UpdateCommunicationDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateCommunicationDetailsOperationCompleted(object arg) {
            if ((this.UpdateCommunicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCommunicationDetailsCompleted(this, new UpdateCommunicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddReferee(string idNumber, string refName, string refDesignation, string refInstitution, string refAddress, string refTelephone, string refEmail) {
            object[] results = this.Invoke("AddReferee", new object[] {
                        idNumber,
                        refName,
                        refDesignation,
                        refInstitution,
                        refAddress,
                        refTelephone,
                        refEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddRefereeAsync(string idNumber, string refName, string refDesignation, string refInstitution, string refAddress, string refTelephone, string refEmail) {
            this.AddRefereeAsync(idNumber, refName, refDesignation, refInstitution, refAddress, refTelephone, refEmail, null);
        }
        
        /// <remarks/>
        public void AddRefereeAsync(string idNumber, string refName, string refDesignation, string refInstitution, string refAddress, string refTelephone, string refEmail, object userState) {
            if ((this.AddRefereeOperationCompleted == null)) {
                this.AddRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRefereeOperationCompleted);
            }
            this.InvokeAsync("AddReferee", new object[] {
                        idNumber,
                        refName,
                        refDesignation,
                        refInstitution,
                        refAddress,
                        refTelephone,
                        refEmail}, this.AddRefereeOperationCompleted, userState);
        }
        
        private void OnAddRefereeOperationCompleted(object arg) {
            if ((this.AddRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRefereeCompleted(this, new AddRefereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddQualification", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddQualification_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddQualification(string idNumber, string qualificationType, string qualificationCode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime qualificationFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime qualificationTo, string institution) {
            object[] results = this.Invoke("AddQualification", new object[] {
                        idNumber,
                        qualificationType,
                        qualificationCode,
                        qualificationFrom,
                        qualificationTo,
                        institution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddQualificationAsync(string idNumber, string qualificationType, string qualificationCode, System.DateTime qualificationFrom, System.DateTime qualificationTo, string institution) {
            this.AddQualificationAsync(idNumber, qualificationType, qualificationCode, qualificationFrom, qualificationTo, institution, null);
        }
        
        /// <remarks/>
        public void AddQualificationAsync(string idNumber, string qualificationType, string qualificationCode, System.DateTime qualificationFrom, System.DateTime qualificationTo, string institution, object userState) {
            if ((this.AddQualificationOperationCompleted == null)) {
                this.AddQualificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQualificationOperationCompleted);
            }
            this.InvokeAsync("AddQualification", new object[] {
                        idNumber,
                        qualificationType,
                        qualificationCode,
                        qualificationFrom,
                        qualificationTo,
                        institution}, this.AddQualificationOperationCompleted, userState);
        }
        
        private void OnAddQualificationOperationCompleted(object arg) {
            if ((this.AddQualificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQualificationCompleted(this, new AddQualificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:Apply", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="Apply_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Apply(string idNumber, string jobId) {
            object[] results = this.Invoke("Apply", new object[] {
                        idNumber,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyAsync(string idNumber, string jobId) {
            this.ApplyAsync(idNumber, jobId, null);
        }
        
        /// <remarks/>
        public void ApplyAsync(string idNumber, string jobId, object userState) {
            if ((this.ApplyOperationCompleted == null)) {
                this.ApplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyOperationCompleted);
            }
            this.InvokeAsync("Apply", new object[] {
                        idNumber,
                        jobId}, this.ApplyOperationCompleted, userState);
        }
        
        private void OnApplyOperationCompleted(object arg) {
            if ((this.ApplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyCompleted(this, new ApplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ImprestGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ImprestGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ImprestGeneralDetails(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, string referenceNo) {
            object[] results = this.Invoke("ImprestGeneralDetails", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode,
                        referenceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImprestGeneralDetailsAsync(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, string referenceNo) {
            this.ImprestGeneralDetailsAsync(employeeNo, imprestNo, subject, objective, destinationNarration, travelDate, numberOfDays, job, jobTaskNo, fundCode, referenceNo, null);
        }
        
        /// <remarks/>
        public void ImprestGeneralDetailsAsync(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, string referenceNo, object userState) {
            if ((this.ImprestGeneralDetailsOperationCompleted == null)) {
                this.ImprestGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImprestGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("ImprestGeneralDetails", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode,
                        referenceNo}, this.ImprestGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnImprestGeneralDetailsOperationCompleted(object arg) {
            if ((this.ImprestGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImprestGeneralDetailsCompleted(this, new ImprestGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ImprestGeneralDetails1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ImprestGeneralDetails1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ImprestGeneralDetails1(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, string referenceNo) {
            object[] results = this.Invoke("ImprestGeneralDetails1", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode,
                        referenceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImprestGeneralDetails1Async(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, string referenceNo) {
            this.ImprestGeneralDetails1Async(employeeNo, imprestNo, subject, objective, destinationNarration, travelDate, numberOfDays, job, jobTaskNo, fundCode, referenceNo, null);
        }
        
        /// <remarks/>
        public void ImprestGeneralDetails1Async(string employeeNo, string imprestNo, string subject, string objective, string destinationNarration, System.DateTime travelDate, decimal numberOfDays, string job, string jobTaskNo, string fundCode, string referenceNo, object userState) {
            if ((this.ImprestGeneralDetails1OperationCompleted == null)) {
                this.ImprestGeneralDetails1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnImprestGeneralDetails1OperationCompleted);
            }
            this.InvokeAsync("ImprestGeneralDetails1", new object[] {
                        employeeNo,
                        imprestNo,
                        subject,
                        objective,
                        destinationNarration,
                        travelDate,
                        numberOfDays,
                        job,
                        jobTaskNo,
                        fundCode,
                        referenceNo}, this.ImprestGeneralDetails1OperationCompleted, userState);
        }
        
        private void OnImprestGeneralDetails1OperationCompleted(object arg) {
            if ((this.ImprestGeneralDetails1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImprestGeneralDetails1Completed(this, new ImprestGeneralDetails1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GetImprestObjective", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GetImprestObjective_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetImprestObjective(string imprestNo, string employeeNo) {
            object[] results = this.Invoke("GetImprestObjective", new object[] {
                        imprestNo,
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImprestObjectiveAsync(string imprestNo, string employeeNo) {
            this.GetImprestObjectiveAsync(imprestNo, employeeNo, null);
        }
        
        /// <remarks/>
        public void GetImprestObjectiveAsync(string imprestNo, string employeeNo, object userState) {
            if ((this.GetImprestObjectiveOperationCompleted == null)) {
                this.GetImprestObjectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImprestObjectiveOperationCompleted);
            }
            this.InvokeAsync("GetImprestObjective", new object[] {
                        imprestNo,
                        employeeNo}, this.GetImprestObjectiveOperationCompleted, userState);
        }
        
        private void OnGetImprestObjectiveOperationCompleted(object arg) {
            if ((this.GetImprestObjectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImprestObjectiveCompleted(this, new GetImprestObjectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTeamMember", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTeamMember_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTeamMember(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string constituency, string job, string jobTaskNo, string region, bool lead) {
            object[] results = this.Invoke("AddTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        constituency,
                        job,
                        jobTaskNo,
                        region,
                        lead});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string constituency, string job, string jobTaskNo, string region, bool lead) {
            this.AddTeamMemberAsync(employeeNo, imprestNo, destinationTown, voteItem, teamMember, noOfDays, constituency, job, jobTaskNo, region, lead, null);
        }
        
        /// <remarks/>
        public void AddTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string constituency, string job, string jobTaskNo, string region, bool lead, object userState) {
            if ((this.AddTeamMemberOperationCompleted == null)) {
                this.AddTeamMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTeamMemberOperationCompleted);
            }
            this.InvokeAsync("AddTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        constituency,
                        job,
                        jobTaskNo,
                        region,
                        lead}, this.AddTeamMemberOperationCompleted, userState);
        }
        
        private void OnAddTeamMemberOperationCompleted(object arg) {
            if ((this.AddTeamMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTeamMemberCompleted(this, new AddTeamMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTeamMember1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTeamMember1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTeamMember1(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string constituency, string job, string jobTaskNo, string region, bool lead, int modeoftransport, int noofdrivers) {
            object[] results = this.Invoke("AddTeamMember1", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        constituency,
                        job,
                        jobTaskNo,
                        region,
                        lead,
                        modeoftransport,
                        noofdrivers});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTeamMember1Async(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string constituency, string job, string jobTaskNo, string region, bool lead, int modeoftransport, int noofdrivers) {
            this.AddTeamMember1Async(employeeNo, imprestNo, destinationTown, voteItem, teamMember, noOfDays, constituency, job, jobTaskNo, region, lead, modeoftransport, noofdrivers, null);
        }
        
        /// <remarks/>
        public void AddTeamMember1Async(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string constituency, string job, string jobTaskNo, string region, bool lead, int modeoftransport, int noofdrivers, object userState) {
            if ((this.AddTeamMember1OperationCompleted == null)) {
                this.AddTeamMember1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTeamMember1OperationCompleted);
            }
            this.InvokeAsync("AddTeamMember1", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        constituency,
                        job,
                        jobTaskNo,
                        region,
                        lead,
                        modeoftransport,
                        noofdrivers}, this.AddTeamMember1OperationCompleted, userState);
        }
        
        private void OnAddTeamMember1OperationCompleted(object arg) {
            if ((this.AddTeamMember1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTeamMember1Completed(this, new AddTeamMember1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFuel", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFuel_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFuel(string employeeNo, string imprestNo, string workType, string resource, decimal mileage) {
            object[] results = this.Invoke("AddFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage) {
            this.AddFuelAsync(employeeNo, imprestNo, workType, resource, mileage, null);
        }
        
        /// <remarks/>
        public void AddFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, object userState) {
            if ((this.AddFuelOperationCompleted == null)) {
                this.AddFuelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFuelOperationCompleted);
            }
            this.InvokeAsync("AddFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage}, this.AddFuelOperationCompleted, userState);
        }
        
        private void OnAddFuelOperationCompleted(object arg) {
            if ((this.AddFuelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFuelCompleted(this, new AddFuelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCasuals(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string employeeToSurrender, string job, string jobTask) {
            object[] results = this.Invoke("AddCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        employeeToSurrender,
                        job,
                        jobTask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string employeeToSurrender, string job, string jobTask) {
            this.AddCasualsAsync(employeeNo, imprestNo, type, resource, workType, noRequired, noOfDays, employeeToSurrender, job, jobTask, null);
        }
        
        /// <remarks/>
        public void AddCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string employeeToSurrender, string job, string jobTask, object userState) {
            if ((this.AddCasualsOperationCompleted == null)) {
                this.AddCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCasualsOperationCompleted);
            }
            this.InvokeAsync("AddCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        employeeToSurrender,
                        job,
                        jobTask}, this.AddCasualsOperationCompleted, userState);
        }
        
        private void OnAddCasualsOperationCompleted(object arg) {
            if ((this.AddCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCasualsCompleted(this, new AddCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOtherCosts(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, string employeeToSurrender, string job, string jobTask) {
            object[] results = this.Invoke("AddOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost,
                        employeeToSurrender,
                        job,
                        jobTask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, string employeeToSurrender, string job, string jobTask) {
            this.AddOtherCostsAsync(employeeNo, imprestNo, voteItem, requiredFor, quantityRequired, noOfDays, unitCost, employeeToSurrender, job, jobTask, null);
        }
        
        /// <remarks/>
        public void AddOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, string employeeToSurrender, string job, string jobTask, object userState) {
            if ((this.AddOtherCostsOperationCompleted == null)) {
                this.AddOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOtherCostsOperationCompleted);
            }
            this.InvokeAsync("AddOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost,
                        employeeToSurrender,
                        job,
                        jobTask}, this.AddOtherCostsOperationCompleted, userState);
        }
        
        private void OnAddOtherCostsOperationCompleted(object arg) {
            if ((this.AddOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOtherCostsCompleted(this, new AddOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendImprestMemoApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendImprestMemoApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendImprestMemoApproval(string employeeNo, string imprestNo) {
            object[] results = this.Invoke("SendImprestMemoApproval", new object[] {
                        employeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendImprestMemoApprovalAsync(string employeeNo, string imprestNo) {
            this.SendImprestMemoApprovalAsync(employeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void SendImprestMemoApprovalAsync(string employeeNo, string imprestNo, object userState) {
            if ((this.SendImprestMemoApprovalOperationCompleted == null)) {
                this.SendImprestMemoApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendImprestMemoApprovalOperationCompleted);
            }
            this.InvokeAsync("SendImprestMemoApproval", new object[] {
                        employeeNo,
                        imprestNo}, this.SendImprestMemoApprovalOperationCompleted, userState);
        }
        
        private void OnSendImprestMemoApprovalOperationCompleted(object arg) {
            if ((this.SendImprestMemoApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendImprestMemoApprovalCompleted(this, new SendImprestMemoApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateImprestSurrender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateImprestSurrender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateImprestSurrender(string employeeNo, string imprestNo, string surrenderNo, string region) {
            object[] results = this.Invoke("CreateImprestSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo,
                        region});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateImprestSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo, string region) {
            this.CreateImprestSurrenderAsync(employeeNo, imprestNo, surrenderNo, region, null);
        }
        
        /// <remarks/>
        public void CreateImprestSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo, string region, object userState) {
            if ((this.CreateImprestSurrenderOperationCompleted == null)) {
                this.CreateImprestSurrenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateImprestSurrenderOperationCompleted);
            }
            this.InvokeAsync("CreateImprestSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo,
                        region}, this.CreateImprestSurrenderOperationCompleted, userState);
        }
        
        private void OnCreateImprestSurrenderOperationCompleted(object arg) {
            if ((this.CreateImprestSurrenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateImprestSurrenderCompleted(this, new CreateImprestSurrenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateImprestSurrender1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateImprestSurrender1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateImprestSurrender1(string employeeNo, string imprestNo, string surrenderNo, string region) {
            object[] results = this.Invoke("CreateImprestSurrender1", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo,
                        region});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateImprestSurrender1Async(string employeeNo, string imprestNo, string surrenderNo, string region) {
            this.CreateImprestSurrender1Async(employeeNo, imprestNo, surrenderNo, region, null);
        }
        
        /// <remarks/>
        public void CreateImprestSurrender1Async(string employeeNo, string imprestNo, string surrenderNo, string region, object userState) {
            if ((this.CreateImprestSurrender1OperationCompleted == null)) {
                this.CreateImprestSurrender1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateImprestSurrender1OperationCompleted);
            }
            this.InvokeAsync("CreateImprestSurrender1", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo,
                        region}, this.CreateImprestSurrender1OperationCompleted, userState);
        }
        
        private void OnCreateImprestSurrender1OperationCompleted(object arg) {
            if ((this.CreateImprestSurrender1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateImprestSurrender1Completed(this, new CreateImprestSurrender1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:PopulatePettyCashSurrender", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="PopulatePettyCashSurrender_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PopulatePettyCashSurrender(string employeeNo, string imprestNo, string surrenderNo, string region) {
            object[] results = this.Invoke("PopulatePettyCashSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo,
                        region});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PopulatePettyCashSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo, string region) {
            this.PopulatePettyCashSurrenderAsync(employeeNo, imprestNo, surrenderNo, region, null);
        }
        
        /// <remarks/>
        public void PopulatePettyCashSurrenderAsync(string employeeNo, string imprestNo, string surrenderNo, string region, object userState) {
            if ((this.PopulatePettyCashSurrenderOperationCompleted == null)) {
                this.PopulatePettyCashSurrenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulatePettyCashSurrenderOperationCompleted);
            }
            this.InvokeAsync("PopulatePettyCashSurrender", new object[] {
                        employeeNo,
                        imprestNo,
                        surrenderNo,
                        region}, this.PopulatePettyCashSurrenderOperationCompleted, userState);
        }
        
        private void OnPopulatePettyCashSurrenderOperationCompleted(object arg) {
            if ((this.PopulatePettyCashSurrenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulatePettyCashSurrenderCompleted(this, new PopulatePettyCashSurrenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendImprestSurrenderApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendImprestSurrenderApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendImprestSurrenderApproval(string employeeNo, string imprestSurrenderNo) {
            object[] results = this.Invoke("SendImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendImprestSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo) {
            this.SendImprestSurrenderApprovalAsync(employeeNo, imprestSurrenderNo, null);
        }
        
        /// <remarks/>
        public void SendImprestSurrenderApprovalAsync(string employeeNo, string imprestSurrenderNo, object userState) {
            if ((this.SendImprestSurrenderApprovalOperationCompleted == null)) {
                this.SendImprestSurrenderApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendImprestSurrenderApprovalOperationCompleted);
            }
            this.InvokeAsync("SendImprestSurrenderApproval", new object[] {
                        employeeNo,
                        imprestSurrenderNo}, this.SendImprestSurrenderApprovalOperationCompleted, userState);
        }
        
        private void OnSendImprestSurrenderApprovalOperationCompleted(object arg) {
            if ((this.SendImprestSurrenderApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendImprestSurrenderApprovalCompleted(this, new SendImprestSurrenderApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateSurrenderLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateSurrenderLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateSurrenderLine(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt) {
            object[] results = this.Invoke("UpdateSurrenderLine", new object[] {
                        employeeNo,
                        imprestSurrenderNo,
                        lineNo,
                        amountSpent,
                        receipt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSurrenderLineAsync(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt) {
            this.UpdateSurrenderLineAsync(employeeNo, imprestSurrenderNo, lineNo, amountSpent, receipt, null);
        }
        
        /// <remarks/>
        public void UpdateSurrenderLineAsync(string employeeNo, string imprestSurrenderNo, int lineNo, decimal amountSpent, string receipt, object userState) {
            if ((this.UpdateSurrenderLineOperationCompleted == null)) {
                this.UpdateSurrenderLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSurrenderLineOperationCompleted);
            }
            this.InvokeAsync("UpdateSurrenderLine", new object[] {
                        employeeNo,
                        imprestSurrenderNo,
                        lineNo,
                        amountSpent,
                        receipt}, this.UpdateSurrenderLineOperationCompleted, userState);
        }
        
        private void OnUpdateSurrenderLineOperationCompleted(object arg) {
            if ((this.UpdateSurrenderLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSurrenderLineCompleted(this, new UpdateSurrenderLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateWorksPurchaseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateWorksPurchaseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateWorksPurchaseRequisition(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string projectStaffingTemplateId, string worksTemplateId) {
            object[] results = this.Invoke("CreateWorksPurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        priorityLevel,
                        requisitionProductGroup,
                        constituency,
                        planId,
                        planEntryNo,
                        templateId,
                        projectStaffingTemplateId,
                        worksTemplateId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWorksPurchaseRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string projectStaffingTemplateId, string worksTemplateId) {
            this.CreateWorksPurchaseRequisitionAsync(employeeNo, requisitionNo, location, description, priorityLevel, requisitionProductGroup, constituency, planId, planEntryNo, templateId, projectStaffingTemplateId, worksTemplateId, null);
        }
        
        /// <remarks/>
        public void CreateWorksPurchaseRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string projectStaffingTemplateId, string worksTemplateId, object userState) {
            if ((this.CreateWorksPurchaseRequisitionOperationCompleted == null)) {
                this.CreateWorksPurchaseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWorksPurchaseRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreateWorksPurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        priorityLevel,
                        requisitionProductGroup,
                        constituency,
                        planId,
                        planEntryNo,
                        templateId,
                        projectStaffingTemplateId,
                        worksTemplateId}, this.CreateWorksPurchaseRequisitionOperationCompleted, userState);
        }
        
        private void OnCreateWorksPurchaseRequisitionOperationCompleted(object arg) {
            if ((this.CreateWorksPurchaseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWorksPurchaseRequisitionCompleted(this, new CreateWorksPurchaseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreatePurchaseRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreatePurchaseRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatePurchaseRequisition(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string tfundingsource, string tconstituency) {
            object[] results = this.Invoke("CreatePurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        priorityLevel,
                        requisitionProductGroup,
                        constituency,
                        planId,
                        planEntryNo,
                        templateId,
                        tfundingsource,
                        tconstituency});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePurchaseRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string tfundingsource, string tconstituency) {
            this.CreatePurchaseRequisitionAsync(employeeNo, requisitionNo, location, description, priorityLevel, requisitionProductGroup, constituency, planId, planEntryNo, templateId, tfundingsource, tconstituency, null);
        }
        
        /// <remarks/>
        public void CreatePurchaseRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int priorityLevel, int requisitionProductGroup, string constituency, string planId, int planEntryNo, string templateId, string tfundingsource, string tconstituency, object userState) {
            if ((this.CreatePurchaseRequisitionOperationCompleted == null)) {
                this.CreatePurchaseRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePurchaseRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreatePurchaseRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        priorityLevel,
                        requisitionProductGroup,
                        constituency,
                        planId,
                        planEntryNo,
                        templateId,
                        tfundingsource,
                        tconstituency}, this.CreatePurchaseRequisitionOperationCompleted, userState);
        }
        
        private void OnCreatePurchaseRequisitionOperationCompleted(object arg) {
            if ((this.CreatePurchaseRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePurchaseRequisitionCompleted(this, new CreatePurchaseRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreatePurchaseStoreRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreatePurchaseStoreRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreatePurchaseStoreRequisition(string employeeNo, string requisitionNo, string location, string description, int type, string fundCode, string jobNo, string jobTask) {
            object[] results = this.Invoke("CreatePurchaseStoreRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        type,
                        fundCode,
                        jobNo,
                        jobTask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePurchaseStoreRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int type, string fundCode, string jobNo, string jobTask) {
            this.CreatePurchaseStoreRequisitionAsync(employeeNo, requisitionNo, location, description, type, fundCode, jobNo, jobTask, null);
        }
        
        /// <remarks/>
        public void CreatePurchaseStoreRequisitionAsync(string employeeNo, string requisitionNo, string location, string description, int type, string fundCode, string jobNo, string jobTask, object userState) {
            if ((this.CreatePurchaseStoreRequisitionOperationCompleted == null)) {
                this.CreatePurchaseStoreRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePurchaseStoreRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreatePurchaseStoreRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        location,
                        description,
                        type,
                        fundCode,
                        jobNo,
                        jobTask}, this.CreatePurchaseStoreRequisitionOperationCompleted, userState);
        }
        
        private void OnCreatePurchaseStoreRequisitionOperationCompleted(object arg) {
            if ((this.CreatePurchaseStoreRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePurchaseStoreRequisitionCompleted(this, new CreatePurchaseStoreRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRequisitionLine(string employeeNo, string requisitionNo, string budget, string procurementPlan, string itemCategory, string item, decimal quantity, decimal directUnitCost, string uom) {
            object[] results = this.Invoke("CreateRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        budget,
                        procurementPlan,
                        itemCategory,
                        item,
                        quantity,
                        directUnitCost,
                        uom});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRequisitionLineAsync(string employeeNo, string requisitionNo, string budget, string procurementPlan, string itemCategory, string item, decimal quantity, decimal directUnitCost, string uom) {
            this.CreateRequisitionLineAsync(employeeNo, requisitionNo, budget, procurementPlan, itemCategory, item, quantity, directUnitCost, uom, null);
        }
        
        /// <remarks/>
        public void CreateRequisitionLineAsync(string employeeNo, string requisitionNo, string budget, string procurementPlan, string itemCategory, string item, decimal quantity, decimal directUnitCost, string uom, object userState) {
            if ((this.CreateRequisitionLineOperationCompleted == null)) {
                this.CreateRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("CreateRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        budget,
                        procurementPlan,
                        itemCategory,
                        item,
                        quantity,
                        directUnitCost,
                        uom}, this.CreateRequisitionLineOperationCompleted, userState);
        }
        
        private void OnCreateRequisitionLineOperationCompleted(object arg) {
            if ((this.CreateRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRequisitionLineCompleted(this, new CreateRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendPurchaseRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendPurchaseRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendPurchaseRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("SendPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.SendPurchaseRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void SendPurchaseRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.SendPurchaseRequisitionApprovalOperationCompleted == null)) {
                this.SendPurchaseRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPurchaseRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendPurchaseRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.SendPurchaseRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendPurchaseRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendPurchaseRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPurchaseRequisitionApprovalCompleted(this, new SendPurchaseRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateFleetRequisition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateFleetRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateFleetRequisition(string employeeNo, string requisitionNo, string from, string destination, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments, string imprest, decimal hourstrip, int requisitiontype) {
            object[] results = this.Invoke("CreateFleetRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        from,
                        destination,
                        dateOfTrip,
                        timeOut,
                        journeyRoute,
                        noOfDaysRequested,
                        purposeOfTrip,
                        comments,
                        imprest,
                        hourstrip,
                        requisitiontype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFleetRequisitionAsync(string employeeNo, string requisitionNo, string from, string destination, System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments, string imprest, decimal hourstrip, int requisitiontype) {
            this.CreateFleetRequisitionAsync(employeeNo, requisitionNo, from, destination, dateOfTrip, timeOut, journeyRoute, noOfDaysRequested, purposeOfTrip, comments, imprest, hourstrip, requisitiontype, null);
        }
        
        /// <remarks/>
        public void CreateFleetRequisitionAsync(string employeeNo, string requisitionNo, string from, string destination, System.DateTime dateOfTrip, System.DateTime timeOut, string journeyRoute, decimal noOfDaysRequested, string purposeOfTrip, string comments, string imprest, decimal hourstrip, int requisitiontype, object userState) {
            if ((this.CreateFleetRequisitionOperationCompleted == null)) {
                this.CreateFleetRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFleetRequisitionOperationCompleted);
            }
            this.InvokeAsync("CreateFleetRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        from,
                        destination,
                        dateOfTrip,
                        timeOut,
                        journeyRoute,
                        noOfDaysRequested,
                        purposeOfTrip,
                        comments,
                        imprest,
                        hourstrip,
                        requisitiontype}, this.CreateFleetRequisitionOperationCompleted, userState);
        }
        
        private void OnCreateFleetRequisitionOperationCompleted(object arg) {
            if ((this.CreateFleetRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFleetRequisitionCompleted(this, new CreateFleetRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFleetRequisitionStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFleetRequisitionStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFleetRequisitionStaff(string employeeNo, string requisitionNo, string staffNo) {
            object[] results = this.Invoke("AddFleetRequisitionStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        staffNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetRequisitionStaffAsync(string employeeNo, string requisitionNo, string staffNo) {
            this.AddFleetRequisitionStaffAsync(employeeNo, requisitionNo, staffNo, null);
        }
        
        /// <remarks/>
        public void AddFleetRequisitionStaffAsync(string employeeNo, string requisitionNo, string staffNo, object userState) {
            if ((this.AddFleetRequisitionStaffOperationCompleted == null)) {
                this.AddFleetRequisitionStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetRequisitionStaffOperationCompleted);
            }
            this.InvokeAsync("AddFleetRequisitionStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        staffNo}, this.AddFleetRequisitionStaffOperationCompleted, userState);
        }
        
        private void OnAddFleetRequisitionStaffOperationCompleted(object arg) {
            if ((this.AddFleetRequisitionStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetRequisitionStaffCompleted(this, new AddFleetRequisitionStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddFleetRequisitionNonStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddFleetRequisitionNonStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFleetRequisitionNonStaff(string employeeNo, string requisitionNo, string idNumber, string phoneNumber, string organizationName, string name, string purposeoftrip, string designations) {
            object[] results = this.Invoke("AddFleetRequisitionNonStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        idNumber,
                        phoneNumber,
                        organizationName,
                        name,
                        purposeoftrip,
                        designations});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFleetRequisitionNonStaffAsync(string employeeNo, string requisitionNo, string idNumber, string phoneNumber, string organizationName, string name, string purposeoftrip, string designations) {
            this.AddFleetRequisitionNonStaffAsync(employeeNo, requisitionNo, idNumber, phoneNumber, organizationName, name, purposeoftrip, designations, null);
        }
        
        /// <remarks/>
        public void AddFleetRequisitionNonStaffAsync(string employeeNo, string requisitionNo, string idNumber, string phoneNumber, string organizationName, string name, string purposeoftrip, string designations, object userState) {
            if ((this.AddFleetRequisitionNonStaffOperationCompleted == null)) {
                this.AddFleetRequisitionNonStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFleetRequisitionNonStaffOperationCompleted);
            }
            this.InvokeAsync("AddFleetRequisitionNonStaff", new object[] {
                        employeeNo,
                        requisitionNo,
                        idNumber,
                        phoneNumber,
                        organizationName,
                        name,
                        purposeoftrip,
                        designations}, this.AddFleetRequisitionNonStaffOperationCompleted, userState);
        }
        
        private void OnAddFleetRequisitionNonStaffOperationCompleted(object arg) {
            if ((this.AddFleetRequisitionNonStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFleetRequisitionNonStaffCompleted(this, new AddFleetRequisitionNonStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendFleetRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendFleetRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendFleetRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("SendFleetRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFleetRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.SendFleetRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void SendFleetRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.SendFleetRequisitionApprovalOperationCompleted == null)) {
                this.SendFleetRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFleetRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendFleetRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.SendFleetRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendFleetRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendFleetRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFleetRequisitionApprovalCompleted(this, new SendFleetRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveStaffFromTravelRequisition" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveStaffFromTravelRequisition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveStaffFromTravelRequisition(string employeeNo, string requisitionNo, int entryNo) {
            object[] results = this.Invoke("RemoveStaffFromTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveStaffFromTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo) {
            this.RemoveStaffFromTravelRequisitionAsync(employeeNo, requisitionNo, entryNo, null);
        }
        
        /// <remarks/>
        public void RemoveStaffFromTravelRequisitionAsync(string employeeNo, string requisitionNo, int entryNo, object userState) {
            if ((this.RemoveStaffFromTravelRequisitionOperationCompleted == null)) {
                this.RemoveStaffFromTravelRequisitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveStaffFromTravelRequisitionOperationCompleted);
            }
            this.InvokeAsync("RemoveStaffFromTravelRequisition", new object[] {
                        employeeNo,
                        requisitionNo,
                        entryNo}, this.RemoveStaffFromTravelRequisitionOperationCompleted, userState);
        }
        
        private void OnRemoveStaffFromTravelRequisitionOperationCompleted(object arg) {
            if ((this.RemoveStaffFromTravelRequisitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveStaffFromTravelRequisitionCompleted(this, new RemoveStaffFromTravelRequisitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveMemberFromImprestMemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveMemberFromImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveMemberFromImprestMemo(string number, string workType, string mEmployeeNo, string imprestNo) {
            object[] results = this.Invoke("RemoveMemberFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveMemberFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo) {
            this.RemoveMemberFromImprestMemoAsync(number, workType, mEmployeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void RemoveMemberFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo, object userState) {
            if ((this.RemoveMemberFromImprestMemoOperationCompleted == null)) {
                this.RemoveMemberFromImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMemberFromImprestMemoOperationCompleted);
            }
            this.InvokeAsync("RemoveMemberFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo}, this.RemoveMemberFromImprestMemoOperationCompleted, userState);
        }
        
        private void OnRemoveMemberFromImprestMemoOperationCompleted(object arg) {
            if ((this.RemoveMemberFromImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveMemberFromImprestMemoCompleted(this, new RemoveMemberFromImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditTeamMember", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditTeamMember_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditTeamMember(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType, string constituency, bool projectLead) {
            object[] results = this.Invoke("EditTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        originalNumber,
                        originalWorkType,
                        constituency,
                        projectLead});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType, string constituency, bool projectLead) {
            this.EditTeamMemberAsync(employeeNo, imprestNo, destinationTown, voteItem, teamMember, noOfDays, originalNumber, originalWorkType, constituency, projectLead, null);
        }
        
        /// <remarks/>
        public void EditTeamMemberAsync(string employeeNo, string imprestNo, string destinationTown, string voteItem, string teamMember, decimal noOfDays, string originalNumber, string originalWorkType, string constituency, bool projectLead, object userState) {
            if ((this.EditTeamMemberOperationCompleted == null)) {
                this.EditTeamMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditTeamMemberOperationCompleted);
            }
            this.InvokeAsync("EditTeamMember", new object[] {
                        employeeNo,
                        imprestNo,
                        destinationTown,
                        voteItem,
                        teamMember,
                        noOfDays,
                        originalNumber,
                        originalWorkType,
                        constituency,
                        projectLead}, this.EditTeamMemberOperationCompleted, userState);
        }
        
        private void OnEditTeamMemberOperationCompleted(object arg) {
            if ((this.EditTeamMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditTeamMemberCompleted(this, new EditTeamMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveFuelFromImprestMemo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveFuelFromImprestMemo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveFuelFromImprestMemo(string number, string workType, string mEmployeeNo, string imprestNo) {
            object[] results = this.Invoke("RemoveFuelFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFuelFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo) {
            this.RemoveFuelFromImprestMemoAsync(number, workType, mEmployeeNo, imprestNo, null);
        }
        
        /// <remarks/>
        public void RemoveFuelFromImprestMemoAsync(string number, string workType, string mEmployeeNo, string imprestNo, object userState) {
            if ((this.RemoveFuelFromImprestMemoOperationCompleted == null)) {
                this.RemoveFuelFromImprestMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFuelFromImprestMemoOperationCompleted);
            }
            this.InvokeAsync("RemoveFuelFromImprestMemo", new object[] {
                        number,
                        workType,
                        mEmployeeNo,
                        imprestNo}, this.RemoveFuelFromImprestMemoOperationCompleted, userState);
        }
        
        private void OnRemoveFuelFromImprestMemoOperationCompleted(object arg) {
            if ((this.RemoveFuelFromImprestMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFuelFromImprestMemoCompleted(this, new RemoveFuelFromImprestMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditFuel", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditFuel_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditFuel(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType) {
            object[] results = this.Invoke("EditFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage,
                        originalNo,
                        originalWorkType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType) {
            this.EditFuelAsync(employeeNo, imprestNo, workType, resource, mileage, originalNo, originalWorkType, null);
        }
        
        /// <remarks/>
        public void EditFuelAsync(string employeeNo, string imprestNo, string workType, string resource, decimal mileage, string originalNo, string originalWorkType, object userState) {
            if ((this.EditFuelOperationCompleted == null)) {
                this.EditFuelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditFuelOperationCompleted);
            }
            this.InvokeAsync("EditFuel", new object[] {
                        employeeNo,
                        imprestNo,
                        workType,
                        resource,
                        mileage,
                        originalNo,
                        originalWorkType}, this.EditFuelOperationCompleted, userState);
        }
        
        private void OnEditFuelOperationCompleted(object arg) {
            if ((this.EditFuelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditFuelCompleted(this, new EditFuelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveCasuals(string employeeNo, string imprestNo, string resourceType, string resourceNo) {
            object[] results = this.Invoke("RemoveCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        resourceType,
                        resourceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveCasualsAsync(string employeeNo, string imprestNo, string resourceType, string resourceNo) {
            this.RemoveCasualsAsync(employeeNo, imprestNo, resourceType, resourceNo, null);
        }
        
        /// <remarks/>
        public void RemoveCasualsAsync(string employeeNo, string imprestNo, string resourceType, string resourceNo, object userState) {
            if ((this.RemoveCasualsOperationCompleted == null)) {
                this.RemoveCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCasualsOperationCompleted);
            }
            this.InvokeAsync("RemoveCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        resourceType,
                        resourceNo}, this.RemoveCasualsOperationCompleted, userState);
        }
        
        private void OnRemoveCasualsOperationCompleted(object arg) {
            if ((this.RemoveCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCasualsCompleted(this, new RemoveCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditCasuals", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditCasuals_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditCasuals(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo, string employeeToSurrender) {
            object[] results = this.Invoke("EditCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        originalResourceType,
                        originalResourceNo,
                        employeeToSurrender});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo, string employeeToSurrender) {
            this.EditCasualsAsync(employeeNo, imprestNo, type, resource, workType, noRequired, noOfDays, originalResourceType, originalResourceNo, employeeToSurrender, null);
        }
        
        /// <remarks/>
        public void EditCasualsAsync(string employeeNo, string imprestNo, int type, string resource, string workType, decimal noRequired, decimal noOfDays, string originalResourceType, string originalResourceNo, string employeeToSurrender, object userState) {
            if ((this.EditCasualsOperationCompleted == null)) {
                this.EditCasualsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCasualsOperationCompleted);
            }
            this.InvokeAsync("EditCasuals", new object[] {
                        employeeNo,
                        imprestNo,
                        type,
                        resource,
                        workType,
                        noRequired,
                        noOfDays,
                        originalResourceType,
                        originalResourceNo,
                        employeeToSurrender}, this.EditCasualsOperationCompleted, userState);
        }
        
        private void OnEditCasualsOperationCompleted(object arg) {
            if ((this.EditCasualsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCasualsCompleted(this, new EditCasualsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:RemoveOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="RemoveOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveOtherCosts(string imprestNo, string employeeNo, int lineNo) {
            object[] results = this.Invoke("RemoveOtherCosts", new object[] {
                        imprestNo,
                        employeeNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveOtherCostsAsync(string imprestNo, string employeeNo, int lineNo) {
            this.RemoveOtherCostsAsync(imprestNo, employeeNo, lineNo, null);
        }
        
        /// <remarks/>
        public void RemoveOtherCostsAsync(string imprestNo, string employeeNo, int lineNo, object userState) {
            if ((this.RemoveOtherCostsOperationCompleted == null)) {
                this.RemoveOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveOtherCostsOperationCompleted);
            }
            this.InvokeAsync("RemoveOtherCosts", new object[] {
                        imprestNo,
                        employeeNo,
                        lineNo}, this.RemoveOtherCostsOperationCompleted, userState);
        }
        
        private void OnRemoveOtherCostsOperationCompleted(object arg) {
            if ((this.RemoveOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveOtherCostsCompleted(this, new RemoveOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditOtherCosts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditOtherCosts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditOtherCosts(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo, string employeeToSurrender) {
            object[] results = this.Invoke("EditOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost,
                        originalLineNo,
                        employeeToSurrender});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo, string employeeToSurrender) {
            this.EditOtherCostsAsync(employeeNo, imprestNo, voteItem, requiredFor, quantityRequired, noOfDays, unitCost, originalLineNo, employeeToSurrender, null);
        }
        
        /// <remarks/>
        public void EditOtherCostsAsync(string employeeNo, string imprestNo, string voteItem, string requiredFor, decimal quantityRequired, decimal noOfDays, decimal unitCost, int originalLineNo, string employeeToSurrender, object userState) {
            if ((this.EditOtherCostsOperationCompleted == null)) {
                this.EditOtherCostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditOtherCostsOperationCompleted);
            }
            this.InvokeAsync("EditOtherCosts", new object[] {
                        employeeNo,
                        imprestNo,
                        voteItem,
                        requiredFor,
                        quantityRequired,
                        noOfDays,
                        unitCost,
                        originalLineNo,
                        employeeToSurrender}, this.EditOtherCostsOperationCompleted, userState);
        }
        
        private void OnEditOtherCostsOperationCompleted(object arg) {
            if ((this.EditOtherCostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditOtherCostsCompleted(this, new EditOtherCostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:GenerateLeaveForm", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="GenerateLeaveForm_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateLeaveForm(string employeeNo, string leaveNo) {
            object[] results = this.Invoke("GenerateLeaveForm", new object[] {
                        employeeNo,
                        leaveNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateLeaveFormAsync(string employeeNo, string leaveNo) {
            this.GenerateLeaveFormAsync(employeeNo, leaveNo, null);
        }
        
        /// <remarks/>
        public void GenerateLeaveFormAsync(string employeeNo, string leaveNo, object userState) {
            if ((this.GenerateLeaveFormOperationCompleted == null)) {
                this.GenerateLeaveFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateLeaveFormOperationCompleted);
            }
            this.InvokeAsync("GenerateLeaveForm", new object[] {
                        employeeNo,
                        leaveNo}, this.GenerateLeaveFormOperationCompleted, userState);
        }
        
        private void OnGenerateLeaveFormOperationCompleted(object arg) {
            if ((this.GenerateLeaveFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateLeaveFormCompleted(this, new GenerateLeaveFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendRecordForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendRecordForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendRecordForApproval(string employeeNo, string recordNo, string recordType) {
            object[] results = this.Invoke("SendRecordForApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendRecordForApprovalAsync(string employeeNo, string recordNo, string recordType) {
            this.SendRecordForApprovalAsync(employeeNo, recordNo, recordType, null);
        }
        
        /// <remarks/>
        public void SendRecordForApprovalAsync(string employeeNo, string recordNo, string recordType, object userState) {
            if ((this.SendRecordForApprovalOperationCompleted == null)) {
                this.SendRecordForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRecordForApprovalOperationCompleted);
            }
            this.InvokeAsync("SendRecordForApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType}, this.SendRecordForApprovalOperationCompleted, userState);
        }
        
        private void OnSendRecordForApprovalOperationCompleted(object arg) {
            if ((this.SendRecordForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRecordForApprovalCompleted(this, new SendRecordForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelRecordApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelRecordApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelRecordApproval(string employeeNo, string recordNo, string recordType) {
            object[] results = this.Invoke("CancelRecordApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelRecordApprovalAsync(string employeeNo, string recordNo, string recordType) {
            this.CancelRecordApprovalAsync(employeeNo, recordNo, recordType, null);
        }
        
        /// <remarks/>
        public void CancelRecordApprovalAsync(string employeeNo, string recordNo, string recordType, object userState) {
            if ((this.CancelRecordApprovalOperationCompleted == null)) {
                this.CancelRecordApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelRecordApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelRecordApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType}, this.CancelRecordApprovalOperationCompleted, userState);
        }
        
        private void OnCancelRecordApprovalOperationCompleted(object arg) {
            if ((this.CancelRecordApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelRecordApprovalCompleted(this, new CancelRecordApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangePassword(string employeeNo, string currentPassword, string newPassword, string confirmPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        employeeNo,
                        currentPassword,
                        newPassword,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string employeeNo, string currentPassword, string newPassword, string confirmPassword) {
            this.ChangePasswordAsync(employeeNo, currentPassword, newPassword, confirmPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string employeeNo, string currentPassword, string newPassword, string confirmPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        employeeNo,
                        currentPassword,
                        newPassword,
                        confirmPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteRequisitionLine(string employeeNo, string requisitionNo, int lineNo, int documentType) {
            object[] results = this.Invoke("DeleteRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        lineNo,
                        documentType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRequisitionLineAsync(string employeeNo, string requisitionNo, int lineNo, int documentType) {
            this.DeleteRequisitionLineAsync(employeeNo, requisitionNo, lineNo, documentType, null);
        }
        
        /// <remarks/>
        public void DeleteRequisitionLineAsync(string employeeNo, string requisitionNo, int lineNo, int documentType, object userState) {
            if ((this.DeleteRequisitionLineOperationCompleted == null)) {
                this.DeleteRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("DeleteRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        lineNo,
                        documentType}, this.DeleteRequisitionLineOperationCompleted, userState);
        }
        
        private void OnDeleteRequisitionLineOperationCompleted(object arg) {
            if ((this.DeleteRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRequisitionLineCompleted(this, new DeleteRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendStaffClaimApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendStaffClaimApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendStaffClaimApproval(string employeeNo, string staffClaim) {
            object[] results = this.Invoke("SendStaffClaimApproval", new object[] {
                        employeeNo,
                        staffClaim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendStaffClaimApprovalAsync(string employeeNo, string staffClaim) {
            this.SendStaffClaimApprovalAsync(employeeNo, staffClaim, null);
        }
        
        /// <remarks/>
        public void SendStaffClaimApprovalAsync(string employeeNo, string staffClaim, object userState) {
            if ((this.SendStaffClaimApprovalOperationCompleted == null)) {
                this.SendStaffClaimApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendStaffClaimApprovalOperationCompleted);
            }
            this.InvokeAsync("SendStaffClaimApproval", new object[] {
                        employeeNo,
                        staffClaim}, this.SendStaffClaimApprovalOperationCompleted, userState);
        }
        
        private void OnSendStaffClaimApprovalOperationCompleted(object arg) {
            if ((this.SendStaffClaimApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendStaffClaimApprovalCompleted(this, new SendStaffClaimApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ApproveStaffClaim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ApproveStaffClaim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApproveStaffClaim(string employeeNo, string staffClaim) {
            object[] results = this.Invoke("ApproveStaffClaim", new object[] {
                        employeeNo,
                        staffClaim});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveStaffClaimAsync(string employeeNo, string staffClaim) {
            this.ApproveStaffClaimAsync(employeeNo, staffClaim, null);
        }
        
        /// <remarks/>
        public void ApproveStaffClaimAsync(string employeeNo, string staffClaim, object userState) {
            if ((this.ApproveStaffClaimOperationCompleted == null)) {
                this.ApproveStaffClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveStaffClaimOperationCompleted);
            }
            this.InvokeAsync("ApproveStaffClaim", new object[] {
                        employeeNo,
                        staffClaim}, this.ApproveStaffClaimOperationCompleted, userState);
        }
        
        private void OnApproveStaffClaimOperationCompleted(object arg) {
            if ((this.ApproveStaffClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveStaffClaimCompleted(this, new ApproveStaffClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CancelStaffClaimRecordApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CancelStaffClaimRecordApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelStaffClaimRecordApproval(string employeeNo, string recordNo, string recordType) {
            object[] results = this.Invoke("CancelStaffClaimRecordApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelStaffClaimRecordApprovalAsync(string employeeNo, string recordNo, string recordType) {
            this.CancelStaffClaimRecordApprovalAsync(employeeNo, recordNo, recordType, null);
        }
        
        /// <remarks/>
        public void CancelStaffClaimRecordApprovalAsync(string employeeNo, string recordNo, string recordType, object userState) {
            if ((this.CancelStaffClaimRecordApprovalOperationCompleted == null)) {
                this.CancelStaffClaimRecordApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelStaffClaimRecordApprovalOperationCompleted);
            }
            this.InvokeAsync("CancelStaffClaimRecordApproval", new object[] {
                        employeeNo,
                        recordNo,
                        recordType}, this.CancelStaffClaimRecordApprovalOperationCompleted, userState);
        }
        
        private void OnCancelStaffClaimRecordApprovalOperationCompleted(object arg) {
            if ((this.CancelStaffClaimRecordApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelStaffClaimRecordApprovalCompleted(this, new CancelStaffClaimRecordApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStaffClaim", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStaffClaim_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStaffClaim(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask) {
            object[] results = this.Invoke("CreateStaffClaim", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStaffClaimAsync(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask) {
            this.CreateStaffClaimAsync(employeeNo, claimNo, paymentNarration, fundCode, job, jobTask, null);
        }
        
        /// <remarks/>
        public void CreateStaffClaimAsync(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, object userState) {
            if ((this.CreateStaffClaimOperationCompleted == null)) {
                this.CreateStaffClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStaffClaimOperationCompleted);
            }
            this.InvokeAsync("CreateStaffClaim", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask}, this.CreateStaffClaimOperationCompleted, userState);
        }
        
        private void OnCreateStaffClaimOperationCompleted(object arg) {
            if ((this.CreateStaffClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStaffClaimCompleted(this, new CreateStaffClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStaffClaim1", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStaffClaim1_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStaffClaim1(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, string region) {
            object[] results = this.Invoke("CreateStaffClaim1", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask,
                        region});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStaffClaim1Async(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, string region) {
            this.CreateStaffClaim1Async(employeeNo, claimNo, paymentNarration, fundCode, job, jobTask, region, null);
        }
        
        /// <remarks/>
        public void CreateStaffClaim1Async(string employeeNo, string claimNo, string paymentNarration, string fundCode, string job, string jobTask, string region, object userState) {
            if ((this.CreateStaffClaim1OperationCompleted == null)) {
                this.CreateStaffClaim1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStaffClaim1OperationCompleted);
            }
            this.InvokeAsync("CreateStaffClaim1", new object[] {
                        employeeNo,
                        claimNo,
                        paymentNarration,
                        fundCode,
                        job,
                        jobTask,
                        region}, this.CreateStaffClaim1OperationCompleted, userState);
        }
        
        private void OnCreateStaffClaim1OperationCompleted(object arg) {
            if ((this.CreateStaffClaim1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStaffClaim1Completed(this, new CreateStaffClaim1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteStaffClaimLine(string employeeNo, string claimNo, int lineNo) {
            object[] results = this.Invoke("DeleteStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStaffClaimLineAsync(string employeeNo, string claimNo, int lineNo) {
            this.DeleteStaffClaimLineAsync(employeeNo, claimNo, lineNo, null);
        }
        
        /// <remarks/>
        public void DeleteStaffClaimLineAsync(string employeeNo, string claimNo, int lineNo, object userState) {
            if ((this.DeleteStaffClaimLineOperationCompleted == null)) {
                this.DeleteStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("DeleteStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        lineNo}, this.DeleteStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnDeleteStaffClaimLineOperationCompleted(object arg) {
            if ((this.DeleteStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStaffClaimLineCompleted(this, new DeleteStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStaffClaimLine(string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            object[] results = this.Invoke("CreateStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStaffClaimLineAsync(string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            this.CreateStaffClaimLineAsync(employeeNo, claimNo, voteItem, description, amount, null);
        }
        
        /// <remarks/>
        public void CreateStaffClaimLineAsync(string employeeNo, string claimNo, string voteItem, string description, decimal amount, object userState) {
            if ((this.CreateStaffClaimLineOperationCompleted == null)) {
                this.CreateStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("CreateStaffClaimLine", new object[] {
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount}, this.CreateStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnCreateStaffClaimLineOperationCompleted(object arg) {
            if ((this.CreateStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStaffClaimLineCompleted(this, new CreateStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:EditStaffClaimLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="EditStaffClaimLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditStaffClaimLine(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            object[] results = this.Invoke("EditStaffClaimLine", new object[] {
                        lineNo,
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditStaffClaimLineAsync(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount) {
            this.EditStaffClaimLineAsync(lineNo, employeeNo, claimNo, voteItem, description, amount, null);
        }
        
        /// <remarks/>
        public void EditStaffClaimLineAsync(int lineNo, string employeeNo, string claimNo, string voteItem, string description, decimal amount, object userState) {
            if ((this.EditStaffClaimLineOperationCompleted == null)) {
                this.EditStaffClaimLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditStaffClaimLineOperationCompleted);
            }
            this.InvokeAsync("EditStaffClaimLine", new object[] {
                        lineNo,
                        employeeNo,
                        claimNo,
                        voteItem,
                        description,
                        amount}, this.EditStaffClaimLineOperationCompleted, userState);
        }
        
        private void OnEditStaffClaimLineOperationCompleted(object arg) {
            if ((this.EditStaffClaimLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditStaffClaimLineCompleted(this, new EditStaffClaimLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:SendStoreRequisitionApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="SendStoreRequisitionApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendStoreRequisitionApproval(string employeeNo, string requisitionNo) {
            object[] results = this.Invoke("SendStoreRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendStoreRequisitionApprovalAsync(string employeeNo, string requisitionNo) {
            this.SendStoreRequisitionApprovalAsync(employeeNo, requisitionNo, null);
        }
        
        /// <remarks/>
        public void SendStoreRequisitionApprovalAsync(string employeeNo, string requisitionNo, object userState) {
            if ((this.SendStoreRequisitionApprovalOperationCompleted == null)) {
                this.SendStoreRequisitionApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendStoreRequisitionApprovalOperationCompleted);
            }
            this.InvokeAsync("SendStoreRequisitionApproval", new object[] {
                        employeeNo,
                        requisitionNo}, this.SendStoreRequisitionApprovalOperationCompleted, userState);
        }
        
        private void OnSendStoreRequisitionApprovalOperationCompleted(object arg) {
            if ((this.SendStoreRequisitionApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendStoreRequisitionApprovalCompleted(this, new SendStoreRequisitionApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateStoreRequisitionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateStoreRequisitionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStoreRequisitionLine(string employeeNo, string requisitionNo, string itemCategory, string item, decimal quantity, string uom) {
            object[] results = this.Invoke("CreateStoreRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        itemCategory,
                        item,
                        quantity,
                        uom});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStoreRequisitionLineAsync(string employeeNo, string requisitionNo, string itemCategory, string item, decimal quantity, string uom) {
            this.CreateStoreRequisitionLineAsync(employeeNo, requisitionNo, itemCategory, item, quantity, uom, null);
        }
        
        /// <remarks/>
        public void CreateStoreRequisitionLineAsync(string employeeNo, string requisitionNo, string itemCategory, string item, decimal quantity, string uom, object userState) {
            if ((this.CreateStoreRequisitionLineOperationCompleted == null)) {
                this.CreateStoreRequisitionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStoreRequisitionLineOperationCompleted);
            }
            this.InvokeAsync("CreateStoreRequisitionLine", new object[] {
                        employeeNo,
                        requisitionNo,
                        itemCategory,
                        item,
                        quantity,
                        uom}, this.CreateStoreRequisitionLineOperationCompleted, userState);
        }
        
        private void OnCreateStoreRequisitionLineOperationCompleted(object arg) {
            if ((this.CreateStoreRequisitionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStoreRequisitionLineCompleted(this, new CreateStoreRequisitionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ApplyexternalHrJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ApplyexternalHrJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyexternalHrJobs(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails) {
            object[] results = this.Invoke("ApplyexternalHrJobs", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyexternalHrJobsAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails) {
            this.ApplyexternalHrJobsAsync(jobId, surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, religion, idNumber, phoneNo, email, ethinc, postalAddress, postalAddressCode, city, expected_salary, registrationDetails, null);
        }
        
        /// <remarks/>
        public void ApplyexternalHrJobsAsync(
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string phoneNo, 
                    string email, 
                    string ethinc, 
                    string postalAddress, 
                    string postalAddressCode, 
                    string city, 
                    decimal expected_salary, 
                    string registrationDetails, 
                    object userState) {
            if ((this.ApplyexternalHrJobsOperationCompleted == null)) {
                this.ApplyexternalHrJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyexternalHrJobsOperationCompleted);
            }
            this.InvokeAsync("ApplyexternalHrJobs", new object[] {
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        phoneNo,
                        email,
                        ethinc,
                        postalAddress,
                        postalAddressCode,
                        city,
                        expected_salary,
                        registrationDetails}, this.ApplyexternalHrJobsOperationCompleted, userState);
        }
        
        private void OnApplyexternalHrJobsOperationCompleted(object arg) {
            if ((this.ApplyexternalHrJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyexternalHrJobsCompleted(this, new ApplyexternalHrJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:ApplyinternalHrJobs", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="ApplyinternalHrJobs_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyinternalHrJobs(
                    string docNo, 
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string phoneNo, 
                    string altPhoneNo, 
                    string email, 
                    string altEmail, 
                    string empNo, 
                    string dpt, 
                    string currentPosition, 
                    string jobGroup, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfFirstAppointment, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime lastPromotionDate, 
                    string ethinc) {
            object[] results = this.Invoke("ApplyinternalHrJobs", new object[] {
                        docNo,
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        phoneNo,
                        altPhoneNo,
                        email,
                        altEmail,
                        empNo,
                        dpt,
                        currentPosition,
                        jobGroup,
                        dateOfFirstAppointment,
                        lastPromotionDate,
                        ethinc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyinternalHrJobsAsync(
                    string docNo, 
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string phoneNo, 
                    string altPhoneNo, 
                    string email, 
                    string altEmail, 
                    string empNo, 
                    string dpt, 
                    string currentPosition, 
                    string jobGroup, 
                    System.DateTime dateOfFirstAppointment, 
                    System.DateTime lastPromotionDate, 
                    string ethinc) {
            this.ApplyinternalHrJobsAsync(docNo, jobId, surname, firstname, lastname, title, dOB, gender, disabled, disabilityDetails, county, nationality, maritalStatus, religion, idNumber, nhifNo, nssfNo, pinNo, phoneNo, altPhoneNo, email, altEmail, empNo, dpt, currentPosition, jobGroup, dateOfFirstAppointment, lastPromotionDate, ethinc, null);
        }
        
        /// <remarks/>
        public void ApplyinternalHrJobsAsync(
                    string docNo, 
                    string jobId, 
                    string surname, 
                    string firstname, 
                    string lastname, 
                    string title, 
                    System.DateTime dOB, 
                    int gender, 
                    int disabled, 
                    string disabilityDetails, 
                    string county, 
                    string nationality, 
                    int maritalStatus, 
                    string religion, 
                    string idNumber, 
                    string nhifNo, 
                    string nssfNo, 
                    string pinNo, 
                    string phoneNo, 
                    string altPhoneNo, 
                    string email, 
                    string altEmail, 
                    string empNo, 
                    string dpt, 
                    string currentPosition, 
                    string jobGroup, 
                    System.DateTime dateOfFirstAppointment, 
                    System.DateTime lastPromotionDate, 
                    string ethinc, 
                    object userState) {
            if ((this.ApplyinternalHrJobsOperationCompleted == null)) {
                this.ApplyinternalHrJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyinternalHrJobsOperationCompleted);
            }
            this.InvokeAsync("ApplyinternalHrJobs", new object[] {
                        docNo,
                        jobId,
                        surname,
                        firstname,
                        lastname,
                        title,
                        dOB,
                        gender,
                        disabled,
                        disabilityDetails,
                        county,
                        nationality,
                        maritalStatus,
                        religion,
                        idNumber,
                        nhifNo,
                        nssfNo,
                        pinNo,
                        phoneNo,
                        altPhoneNo,
                        email,
                        altEmail,
                        empNo,
                        dpt,
                        currentPosition,
                        jobGroup,
                        dateOfFirstAppointment,
                        lastPromotionDate,
                        ethinc}, this.ApplyinternalHrJobsOperationCompleted, userState);
        }
        
        private void OnApplyinternalHrJobsOperationCompleted(object arg) {
            if ((this.ApplyinternalHrJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyinternalHrJobsCompleted(this, new ApplyinternalHrJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:UpdateEmploymentHistory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="UpdateEmploymentHistory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateEmploymentHistory(int id, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            object[] results = this.Invoke("UpdateEmploymentHistory", new object[] {
                        id,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEmploymentHistoryAsync(int id, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            this.UpdateEmploymentHistoryAsync(id, startDate, endDate, company, designation, jobGrade, appNo, empNo, jobId, null);
        }
        
        /// <remarks/>
        public void UpdateEmploymentHistoryAsync(int id, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId, object userState) {
            if ((this.UpdateEmploymentHistoryOperationCompleted == null)) {
                this.UpdateEmploymentHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmploymentHistoryOperationCompleted);
            }
            this.InvokeAsync("UpdateEmploymentHistory", new object[] {
                        id,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId}, this.UpdateEmploymentHistoryOperationCompleted, userState);
        }
        
        private void OnUpdateEmploymentHistoryOperationCompleted(object arg) {
            if ((this.UpdateEmploymentHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmploymentHistoryCompleted(this, new UpdateEmploymentHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddEmploymentHistory", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddEmploymentHistory_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddEmploymentHistory(string idNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            object[] results = this.Invoke("AddEmploymentHistory", new object[] {
                        idNumber,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmploymentHistoryAsync(string idNumber, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId) {
            this.AddEmploymentHistoryAsync(idNumber, startDate, endDate, company, designation, jobGrade, appNo, empNo, jobId, null);
        }
        
        /// <remarks/>
        public void AddEmploymentHistoryAsync(string idNumber, System.DateTime startDate, System.DateTime endDate, string company, string designation, string jobGrade, string appNo, string empNo, string jobId, object userState) {
            if ((this.AddEmploymentHistoryOperationCompleted == null)) {
                this.AddEmploymentHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmploymentHistoryOperationCompleted);
            }
            this.InvokeAsync("AddEmploymentHistory", new object[] {
                        idNumber,
                        startDate,
                        endDate,
                        company,
                        designation,
                        jobGrade,
                        appNo,
                        empNo,
                        jobId}, this.AddEmploymentHistoryOperationCompleted, userState);
        }
        
        private void OnAddEmploymentHistoryOperationCompleted(object arg) {
            if ((this.AddEmploymentHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmploymentHistoryCompleted(this, new AddEmploymentHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddAcademicQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAcademicQualifications(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("AddAcademicQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAcademicQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate) {
            this.AddAcademicQualificationsAsync(appNo, institution, awardAttainment, specialization, gradeAttained, empNo, jobId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void AddAcademicQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.AddAcademicQualificationsOperationCompleted == null)) {
                this.AddAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("AddAcademicQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate}, this.AddAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnAddAcademicQualificationsOperationCompleted(object arg) {
            if ((this.AddAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAcademicQualificationsCompleted(this, new AddAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddProffessionalQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddProffessionalQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProffessionalQualifications(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate) {
            object[] results = this.Invoke("AddProffessionalQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProffessionalQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate) {
            this.AddProffessionalQualificationsAsync(appNo, institution, awardAttainment, specialization, gradeAttained, empNo, jobId, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void AddProffessionalQualificationsAsync(string appNo, string institution, string awardAttainment, string specialization, string gradeAttained, string empNo, string jobId, System.DateTime fromDate, System.DateTime toDate, object userState) {
            if ((this.AddProffessionalQualificationsOperationCompleted == null)) {
                this.AddProffessionalQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProffessionalQualificationsOperationCompleted);
            }
            this.InvokeAsync("AddProffessionalQualifications", new object[] {
                        appNo,
                        institution,
                        awardAttainment,
                        specialization,
                        gradeAttained,
                        empNo,
                        jobId,
                        fromDate,
                        toDate}, this.AddProffessionalQualificationsOperationCompleted, userState);
        }
        
        private void OnAddProffessionalQualificationsOperationCompleted(object arg) {
            if ((this.AddProffessionalQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProffessionalQualificationsCompleted(this, new AddProffessionalQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddTrainingAttended", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddTrainingAttended_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrainingAttended([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate, string jobId, string employeeNo, string institution, string courseName, string appNo, string attained) {
            object[] results = this.Invoke("AddTrainingAttended", new object[] {
                        fromDate,
                        toDate,
                        jobId,
                        employeeNo,
                        institution,
                        courseName,
                        appNo,
                        attained});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrainingAttendedAsync(System.DateTime fromDate, System.DateTime toDate, string jobId, string employeeNo, string institution, string courseName, string appNo, string attained) {
            this.AddTrainingAttendedAsync(fromDate, toDate, jobId, employeeNo, institution, courseName, appNo, attained, null);
        }
        
        /// <remarks/>
        public void AddTrainingAttendedAsync(System.DateTime fromDate, System.DateTime toDate, string jobId, string employeeNo, string institution, string courseName, string appNo, string attained, object userState) {
            if ((this.AddTrainingAttendedOperationCompleted == null)) {
                this.AddTrainingAttendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrainingAttendedOperationCompleted);
            }
            this.InvokeAsync("AddTrainingAttended", new object[] {
                        fromDate,
                        toDate,
                        jobId,
                        employeeNo,
                        institution,
                        courseName,
                        appNo,
                        attained}, this.AddTrainingAttendedOperationCompleted, userState);
        }
        
        private void OnAddTrainingAttendedOperationCompleted(object arg) {
            if ((this.AddTrainingAttendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrainingAttendedCompleted(this, new AddTrainingAttendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddProfessionalBody", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddProfessionalBody_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProfessionalBody(string appNo, string jobId, string empNo, string pBody, string mNo, string mType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime rDate) {
            object[] results = this.Invoke("AddProfessionalBody", new object[] {
                        appNo,
                        jobId,
                        empNo,
                        pBody,
                        mNo,
                        mType,
                        rDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProfessionalBodyAsync(string appNo, string jobId, string empNo, string pBody, string mNo, string mType, System.DateTime rDate) {
            this.AddProfessionalBodyAsync(appNo, jobId, empNo, pBody, mNo, mType, rDate, null);
        }
        
        /// <remarks/>
        public void AddProfessionalBodyAsync(string appNo, string jobId, string empNo, string pBody, string mNo, string mType, System.DateTime rDate, object userState) {
            if ((this.AddProfessionalBodyOperationCompleted == null)) {
                this.AddProfessionalBodyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProfessionalBodyOperationCompleted);
            }
            this.InvokeAsync("AddProfessionalBody", new object[] {
                        appNo,
                        jobId,
                        empNo,
                        pBody,
                        mNo,
                        mType,
                        rDate}, this.AddProfessionalBodyOperationCompleted, userState);
        }
        
        private void OnAddProfessionalBodyOperationCompleted(object arg) {
            if ((this.AddProfessionalBodyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProfessionalBodyCompleted(this, new AddProfessionalBodyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddApplicantAccomplishment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddApplicantAccomplishment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddApplicantAccomplishment(string appNo, string empNo, string description, int number, string jobId, string amt) {
            object[] results = this.Invoke("AddApplicantAccomplishment", new object[] {
                        appNo,
                        empNo,
                        description,
                        number,
                        jobId,
                        amt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddApplicantAccomplishmentAsync(string appNo, string empNo, string description, int number, string jobId, string amt) {
            this.AddApplicantAccomplishmentAsync(appNo, empNo, description, number, jobId, amt, null);
        }
        
        /// <remarks/>
        public void AddApplicantAccomplishmentAsync(string appNo, string empNo, string description, int number, string jobId, string amt, object userState) {
            if ((this.AddApplicantAccomplishmentOperationCompleted == null)) {
                this.AddApplicantAccomplishmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddApplicantAccomplishmentOperationCompleted);
            }
            this.InvokeAsync("AddApplicantAccomplishment", new object[] {
                        appNo,
                        empNo,
                        description,
                        number,
                        jobId,
                        amt}, this.AddApplicantAccomplishmentOperationCompleted, userState);
        }
        
        private void OnAddApplicantAccomplishmentOperationCompleted(object arg) {
            if ((this.AddApplicantAccomplishmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddApplicantAccomplishmentCompleted(this, new AddApplicantAccomplishmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddAbilityDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddAbilityDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAbilityDetails(string description, string appNo) {
            object[] results = this.Invoke("AddAbilityDetails", new object[] {
                        description,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAbilityDetailsAsync(string description, string appNo) {
            this.AddAbilityDetailsAsync(description, appNo, null);
        }
        
        /// <remarks/>
        public void AddAbilityDetailsAsync(string description, string appNo, object userState) {
            if ((this.AddAbilityDetailsOperationCompleted == null)) {
                this.AddAbilityDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAbilityDetailsOperationCompleted);
            }
            this.InvokeAsync("AddAbilityDetails", new object[] {
                        description,
                        appNo}, this.AddAbilityDetailsOperationCompleted, userState);
        }
        
        private void OnAddAbilityDetailsOperationCompleted(object arg) {
            if ((this.AddAbilityDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAbilityDetailsCompleted(this, new AddAbilityDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:CreateReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="CreateReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateReferee(string appNo, string empNo, string name, string occupation, string address, string postCode, string phone, string email, string knownPeriod, string jobId) {
            object[] results = this.Invoke("CreateReferee", new object[] {
                        appNo,
                        empNo,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        email,
                        knownPeriod,
                        jobId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRefereeAsync(string appNo, string empNo, string name, string occupation, string address, string postCode, string phone, string email, string knownPeriod, string jobId) {
            this.CreateRefereeAsync(appNo, empNo, name, occupation, address, postCode, phone, email, knownPeriod, jobId, null);
        }
        
        /// <remarks/>
        public void CreateRefereeAsync(string appNo, string empNo, string name, string occupation, string address, string postCode, string phone, string email, string knownPeriod, string jobId, object userState) {
            if ((this.CreateRefereeOperationCompleted == null)) {
                this.CreateRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRefereeOperationCompleted);
            }
            this.InvokeAsync("CreateReferee", new object[] {
                        appNo,
                        empNo,
                        name,
                        occupation,
                        address,
                        postCode,
                        phone,
                        email,
                        knownPeriod,
                        jobId}, this.CreateRefereeOperationCompleted, userState);
        }
        
        private void OnCreateRefereeOperationCompleted(object arg) {
            if ((this.CreateRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRefereeCompleted(this, new CreateRefereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddCurrentDutiesSkills", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddCurrentDutiesSkills_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCurrentDutiesSkills(string abilities, string currentDuties, string appNo) {
            object[] results = this.Invoke("AddCurrentDutiesSkills", new object[] {
                        abilities,
                        currentDuties,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCurrentDutiesSkillsAsync(string abilities, string currentDuties, string appNo) {
            this.AddCurrentDutiesSkillsAsync(abilities, currentDuties, appNo, null);
        }
        
        /// <remarks/>
        public void AddCurrentDutiesSkillsAsync(string abilities, string currentDuties, string appNo, object userState) {
            if ((this.AddCurrentDutiesSkillsOperationCompleted == null)) {
                this.AddCurrentDutiesSkillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCurrentDutiesSkillsOperationCompleted);
            }
            this.InvokeAsync("AddCurrentDutiesSkills", new object[] {
                        abilities,
                        currentDuties,
                        appNo}, this.AddCurrentDutiesSkillsOperationCompleted, userState);
        }
        
        private void OnAddCurrentDutiesSkillsOperationCompleted(object arg) {
            if ((this.AddCurrentDutiesSkillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCurrentDutiesSkillsCompleted(this, new AddCurrentDutiesSkillsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddOtherPersonalDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddOtherPersonalDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddOtherPersonalDetails(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel) {
            object[] results = this.Invoke("AddOtherPersonalDetails", new object[] {
                        appNo,
                        convicted,
                        convictionDesc,
                        dismissal,
                        dismissalDesc,
                        highestLevel});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOtherPersonalDetailsAsync(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel) {
            this.AddOtherPersonalDetailsAsync(appNo, convicted, convictionDesc, dismissal, dismissalDesc, highestLevel, null);
        }
        
        /// <remarks/>
        public void AddOtherPersonalDetailsAsync(string appNo, bool convicted, string convictionDesc, bool dismissal, string dismissalDesc, string highestLevel, object userState) {
            if ((this.AddOtherPersonalDetailsOperationCompleted == null)) {
                this.AddOtherPersonalDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOtherPersonalDetailsOperationCompleted);
            }
            this.InvokeAsync("AddOtherPersonalDetails", new object[] {
                        appNo,
                        convicted,
                        convictionDesc,
                        dismissal,
                        dismissalDesc,
                        highestLevel}, this.AddOtherPersonalDetailsOperationCompleted, userState);
        }
        
        private void OnAddOtherPersonalDetailsOperationCompleted(object arg) {
            if ((this.AddOtherPersonalDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOtherPersonalDetailsCompleted(this, new AddOtherPersonalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:AddDutiesDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="AddDutiesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDutiesDetails(string description, string appNo) {
            object[] results = this.Invoke("AddDutiesDetails", new object[] {
                        description,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDutiesDetailsAsync(string description, string appNo) {
            this.AddDutiesDetailsAsync(description, appNo, null);
        }
        
        /// <remarks/>
        public void AddDutiesDetailsAsync(string description, string appNo, object userState) {
            if ((this.AddDutiesDetailsOperationCompleted == null)) {
                this.AddDutiesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDutiesDetailsOperationCompleted);
            }
            this.InvokeAsync("AddDutiesDetails", new object[] {
                        description,
                        appNo}, this.AddDutiesDetailsOperationCompleted, userState);
        }
        
        private void OnAddDutiesDetailsOperationCompleted(object arg) {
            if ((this.AddDutiesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDutiesDetailsCompleted(this, new AddDutiesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteAcademicLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteAcademicLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteAcademicLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteAcademicLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAcademicLineAsync(int id, string appNo) {
            this.DeleteAcademicLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteAcademicLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteAcademicLineOperationCompleted == null)) {
                this.DeleteAcademicLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAcademicLineOperationCompleted);
            }
            this.InvokeAsync("DeleteAcademicLine", new object[] {
                        id,
                        appNo}, this.DeleteAcademicLineOperationCompleted, userState);
        }
        
        private void OnDeleteAcademicLineOperationCompleted(object arg) {
            if ((this.DeleteAcademicLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAcademicLineCompleted(this, new DeleteAcademicLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HRPortal:DeleteProfessionalLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", ResponseElementName="DeleteProfessionalLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HRPortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProfessionalLine(int id, string appNo) {
            object[] results = this.Invoke("DeleteProfessionalLine", new object[] {
                        id,
                        appNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProfessionalLineAsync(int id, string appNo) {
            this.DeleteProfessionalLineAsync(id, appNo, null);
        }
        
        /// <remarks/>
        public void DeleteProfessionalLineAsync(int id, string appNo, object userState) {
            if ((this.DeleteProfessionalLineOperationCompleted == null)) {
                this.DeleteProfessionalLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProfessionalLineOperationCompleted);
            }
            this.InvokeAsync("DeleteProfessionalLine", new object[] {
                        id,
                        appNo}, this.DeleteProfessionalLineOperationCompleted, userState);
        }
        
        private void OnDeleteProfessionalLineOperationCompleted(object arg) {
            if ((this.DeleteProfessionalLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProfessionalLineCompleted(this, new DeleteProfessionalLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteTrainingParticipantsCompletedEventHandler(object sender, DeleteTrainingParticipantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTrainingParticipantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTrainingParticipantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTrainingCostCompletedEventHandler(object sender, AddTrainingCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveTrainingCostCompletedEventHandler(object sender, RemoveTrainingCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveTrainingCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveTrainingCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnAppraisalSuggestObjectivesOutcomesCompletedEventHandler(object sender, FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAppraisalSuggestObjectivesOutcomesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertSubObjectiveEvaluationCompletedEventHandler(object sender, FnInsertSubObjectiveEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertSubObjectiveEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertSubObjectiveEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetLastSubPcLineNoCompletedEventHandler(object sender, FnGetLastSubPcLineNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetLastSubPcLineNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetLastSubPcLineNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnMergePdfsCompletedEventHandler(object sender, FnMergePdfsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnMergePdfsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnMergePdfsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnCreateFolderCompletedEventHandler(object sender, FnCreateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddICTHelpDeskSharepointLinksCompletedEventHandler(object sender, AddICTHelpDeskSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddICTHelpDeskSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddICTHelpDeskSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteTrainingLineCompletedEventHandler(object sender, DeleteTrainingLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTrainingLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTrainingLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteProffessionalBodyLineCompletedEventHandler(object sender, DeleteProffessionalBodyLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProffessionalBodyLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProffessionalBodyLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteEmploymentHistoryLineCompletedEventHandler(object sender, DeleteEmploymentHistoryLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmploymentHistoryLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmploymentHistoryLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteRefereeLineCompletedEventHandler(object sender, DeleteRefereeLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRefereeLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRefereeLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddDeclarationCompletedEventHandler(object sender, AddDeclarationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDeclarationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDeclarationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateProfileForExternalApplicantsCompletedEventHandler(object sender, CreateProfileForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateProfileForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateProfileForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateAccountForExtenalApplicantsCompletedEventHandler(object sender, CreateAccountForExtenalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccountForExtenalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountForExtenalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ForgotPasswordtForExtenalApplicantsCompletedEventHandler(object sender, ForgotPasswordtForExtenalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgotPasswordtForExtenalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgotPasswordtForExtenalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateIctRequestCompletedEventHandler(object sender, CreateIctRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateIctRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateIctRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ProvideIctfeedbackCompletedEventHandler(object sender, ProvideIctfeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProvideIctfeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProvideIctfeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateIctRequestCompletedEventHandler(object sender, UpdateIctRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateIctRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateIctRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ApplyexternalJobCompletedEventHandler(object sender, ApplyexternalJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyexternalJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyexternalJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetItemsByLocationCompletedEventHandler(object sender, GetItemsByLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemsByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemsByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetItemDescByLocationCompletedEventHandler(object sender, GetItemDescByLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemDescByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemDescByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AssignHelpdeskRequestCompletedEventHandler(object sender, AssignHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EscalatedHelpdeskRequestCompletedEventHandler(object sender, EscalatedHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EscalatedHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EscalatedHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ResolveHelpdeskRequestCompletedEventHandler(object sender, ResolveHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResolveHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResolveHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ReopenHelpdeskRequestCompletedEventHandler(object sender, ReopenHelpdeskRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReopenHelpdeskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReopenHelpdeskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddEmploymentHistoryForExternalApplcantsCompletedEventHandler(object sender, AddEmploymentHistoryForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmploymentHistoryForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmploymentHistoryForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddAcademicQualificationsForExternalApplcantsCompletedEventHandler(object sender, AddAcademicQualificationsForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAcademicQualificationsForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAcademicQualificationsForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddProffessionalQualificationsForExternalApplcantsCompletedEventHandler(object sender, AddProffessionalQualificationsForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProffessionalQualificationsForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProffessionalQualificationsForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTrainingAttendedForExternalApplcantsCompletedEventHandler(object sender, AddTrainingAttendedForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingAttendedForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingAttendedForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddProfessionalBodyForExternalApplcantsCompletedEventHandler(object sender, AddProfessionalBodyForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProfessionalBodyForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProfessionalBodyForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateRefereeForExternalApplcantsCompletedEventHandler(object sender, CreateRefereeForExternalApplcantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRefereeForExternalApplcantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRefereeForExternalApplcantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteAcademicLineForExternalApplicantsCompletedEventHandler(object sender, DeleteAcademicLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAcademicLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAcademicLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteProfessionalLineForExternalApplicantsCompletedEventHandler(object sender, DeleteProfessionalLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProfessionalLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProfessionalLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteTrainingLineForExternalApplicantsCompletedEventHandler(object sender, DeleteTrainingLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTrainingLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTrainingLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteProffessionalBodyLineForExternalApplicantsCompletedEventHandler(object sender, DeleteProffessionalBodyLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProffessionalBodyLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProffessionalBodyLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteEmploymentHistoryLineForExternalApplicantsCompletedEventHandler(object sender, DeleteEmploymentHistoryLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmploymentHistoryLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmploymentHistoryLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteRefereeLineForExternalApplicantsCompletedEventHandler(object sender, DeleteRefereeLineForExternalApplicantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRefereeLineForExternalApplicantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRefereeLineForExternalApplicantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ApplyOnlineCompletedEventHandler(object sender, ApplyOnlineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyOnlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyOnlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddFavouriteJobsCompletedEventHandler(object sender, AddFavouriteJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFavouriteJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFavouriteJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteFavouriteJobsCompletedEventHandler(object sender, DeleteFavouriteJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFavouriteJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFavouriteJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddImprestSharepointLinksCompletedEventHandler(object sender, AddImprestSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddImprestSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddImprestSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddStoreRequsitionSharepointLinksCompletedEventHandler(object sender, AddStoreRequsitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStoreRequsitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStoreRequsitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddStaffClaimSharepointLinksCompletedEventHandler(object sender, AddStaffClaimSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStaffClaimSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStaffClaimSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddLeaveSharepointLinksCompletedEventHandler(object sender, AddLeaveSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLeaveSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLeaveSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddImprestSurrenderSharepointLinksCompletedEventHandler(object sender, AddImprestSurrenderSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddImprestSurrenderSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddImprestSurrenderSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddPurchaseRequisitionSharepointLinksCompletedEventHandler(object sender, AddPurchaseRequisitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPurchaseRequisitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPurchaseRequisitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddFleetRequisitionSharepointLinksCompletedEventHandler(object sender, AddFleetRequisitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetRequisitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetRequisitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTrainingRequisitionSharepointLinksCompletedEventHandler(object sender, AddTrainingRequisitionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingRequisitionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingRequisitionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddPettyCashSharepointLinksCompletedEventHandler(object sender, AddPettyCashSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPettyCashSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPettyCashSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddPettyCashSurrenderSharepointLinksCompletedEventHandler(object sender, AddPettyCashSurrenderSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPettyCashSurrenderSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPettyCashSurrenderSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnCreateStaffClaimApprovalRequestsCompletedEventHandler(object sender, FnCreateStaffClaimApprovalRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateStaffClaimApprovalRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateStaffClaimApprovalRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SuggestLinesFromWorksRequisitionTemplateCompletedEventHandler(object sender, SuggestLinesFromWorksRequisitionTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuggestLinesFromWorksRequisitionTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuggestLinesFromWorksRequisitionTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SuggestPersonnelEquipmentSpecificationCompletedEventHandler(object sender, SuggestPersonnelEquipmentSpecificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuggestPersonnelEquipmentSpecificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuggestPersonnelEquipmentSpecificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SuggestLinesFromRequisitionTemplateCompletedEventHandler(object sender, SuggestLinesFromRequisitionTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SuggestLinesFromRequisitionTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SuggestLinesFromRequisitionTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateRequisitionLinesCompletedEventHandler(object sender, UpdateRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeletePurchaseRequisitionLinesCompletedEventHandler(object sender, DeletePurchaseRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePurchaseRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePurchaseRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddProjectDetailsCompletedEventHandler(object sender, AddProjectDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProjectDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProjectDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdatePersonnelSpecificationsCompletedEventHandler(object sender, UpdatePersonnelSpecificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePersonnelSpecificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePersonnelSpecificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeletePersonnelSpecificationsCompletedEventHandler(object sender, DeletePersonnelSpecificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePersonnelSpecificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePersonnelSpecificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateEquipmentSpecificationsCompletedEventHandler(object sender, UpdateEquipmentSpecificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEquipmentSpecificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEquipmentSpecificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteEquipmentSpecificationsCompletedEventHandler(object sender, DeleteEquipmentSpecificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEquipmentSpecificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEquipmentSpecificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddVehicleMaintenanceRequestDetailsCompletedEventHandler(object sender, AddVehicleMaintenanceRequestDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVehicleMaintenanceRequestDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVehicleMaintenanceRequestDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendVehicleMaintenancetforApprovalCompletedEventHandler(object sender, SendVehicleMaintenancetforApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendVehicleMaintenancetforApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendVehicleMaintenancetforApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddFuelRequisitionDetailsCompletedEventHandler(object sender, AddFuelRequisitionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFuelRequisitionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFuelRequisitionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendVehicleRequisitionApprovalCompletedEventHandler(object sender, SendVehicleRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendVehicleRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendVehicleRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CloseDriverOpenTripsCompletedEventHandler(object sender, CloseDriverOpenTripsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseDriverOpenTripsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseDriverOpenTripsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddDriverAllocationsCompletedEventHandler(object sender, AddDriverAllocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDriverAllocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDriverAllocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddNonKeRRADriverAllocationsCompletedEventHandler(object sender, AddNonKeRRADriverAllocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNonKeRRADriverAllocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNonKeRRADriverAllocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendFuelRequisitionforApprovalCompletedEventHandler(object sender, SendFuelRequisitionforApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFuelRequisitionforApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFuelRequisitionforApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ProcessDriverAllocationsCompletedEventHandler(object sender, ProcessDriverAllocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessDriverAllocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessDriverAllocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpateDriverAllocationToImprestMemoCompletedEventHandler(object sender, UpateDriverAllocationToImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpateDriverAllocationToImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpateDriverAllocationToImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendDriverEmailNotificationCompletedEventHandler(object sender, SendDriverEmailNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDriverEmailNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDriverEmailNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateFleetRequisitionCompletedEventHandler(object sender, GenerateFleetRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateFleetRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateFleetRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ReassignDriverCompletedEventHandler(object sender, ReassignDriverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReassignDriverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReassignDriverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateFuelRequisitionCompletedEventHandler(object sender, GenerateFuelRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateFuelRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateFuelRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateMaintenanceRequisitionCompletedEventHandler(object sender, GenerateMaintenanceRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateMaintenanceRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateMaintenanceRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EscalatedHelpdeskRequestDynasoftCompletedEventHandler(object sender, EscalatedHelpdeskRequestDynasoftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EscalatedHelpdeskRequestDynasoftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EscalatedHelpdeskRequestDynasoftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateictreportCompletedEventHandler(object sender, GenerateictreportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateictreportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateictreportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateReopenreportCompletedEventHandler(object sender, GenerateReopenreportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateReopenreportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateReopenreportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateRMReportCompletedEventHandler(object sender, GenerateRMReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateRMReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateRMReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetAllItemsCompletedEventHandler(object sender, GetAllItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnNewStaffPerformanceContractCompletedEventHandler(object sender, FnNewStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSubmitSelectedCoreInitiativesCompletedEventHandler(object sender, FnSubmitSelectedCoreInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedCoreInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedCoreInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnsuggestsubindicatorsCompletedEventHandler(object sender, FnsuggestsubindicatorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnsuggestsubindicatorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnsuggestsubindicatorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSaveCoreInitiativesCompletedEventHandler(object sender, FnSaveCoreInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveCoreInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveCoreInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnRemoveCoreInitiativesCompletedEventHandler(object sender, FnRemoveCoreInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveCoreInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveCoreInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSaveAditionalInitiativesCompletedEventHandler(object sender, FnSaveAditionalInitiativesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveAditionalInitiativesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveAditionalInitiativesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnRemoveAditionalInitiativeCompletedEventHandler(object sender, FnRemoveAditionalInitiativeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveAditionalInitiativeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveAditionalInitiativeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnDeleteIndividualCardSubActivitiesCompletedEventHandler(object sender, FnDeleteIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnNewIndividualCardSubActivitiesCompletedEventHandler(object sender, FnNewIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnEditIndividualCardSubActivitiesCompletedEventHandler(object sender, FnEditIndividualCardSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditIndividualCardSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditIndividualCardSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSendStaffPerformanceContractApprovalCompletedEventHandler(object sender, FnSendStaffPerformanceContractApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendStaffPerformanceContractApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendStaffPerformanceContractApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnCancelStaffPerformanceContractCompletedEventHandler(object sender, FnCancelStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCancelStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCancelStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnLockStaffPerformanceContractCompletedEventHandler(object sender, FnLockStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLockStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLockStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSignStaffPerformanceContractCompletedEventHandler(object sender, FnSignStaffPerformanceContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSignStaffPerformanceContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSignStaffPerformanceContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSubmitSelectedPLogCategoriesCompletedEventHandler(object sender, FnSubmitSelectedPLogCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSelectedPLogCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSelectedPLogCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnNewPerformanceLogEntryCompletedEventHandler(object sender, FnNewPerformanceLogEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewPerformanceLogEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewPerformanceLogEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetPlogLinesCompletedEventHandler(object sender, FnGetPlogLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetPlogLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetPlogLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetSubPlogLinesCompletedEventHandler(object sender, FnGetSubPlogLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetSubPlogLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetSubPlogLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSuggestPlogLinesCompletedEventHandler(object sender, FnSuggestPlogLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSuggestPlogLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSuggestPlogLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSuggestPlogandSubPlogDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnUpdatePerformanceTargetLinesDetailsCompletedEventHandler(object sender, FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdatePerformanceTargetLinesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnRemovePerformanceLogLineCompletedEventHandler(object sender, FnRemovePerformanceLogLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemovePerformanceLogLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemovePerformanceLogLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertPlogSubActivitiesCompletedEventHandler(object sender, FnInsertPlogSubActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertPlogSubActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertPlogSubActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSendPlogApprovalCompletedEventHandler(object sender, FnSendPlogApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendPlogApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendPlogApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnCancelPlogApprovalCompletedEventHandler(object sender, FnCancelPlogApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCancelPlogApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCancelPlogApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnNewStandardAppraisalCompletedEventHandler(object sender, FnNewStandardAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnNewStandardAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnNewStandardAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnLoadCompetenciesCompletedEventHandler(object sender, FnLoadCompetenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLoadCompetenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLoadCompetenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnAddEvaluationPIPCompletedEventHandler(object sender, FnAddEvaluationPIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddEvaluationPIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddEvaluationPIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGenerateStandardAppraisalReportCompletedEventHandler(object sender, FnGenerateStandardAppraisalReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateStandardAppraisalReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateStandardAppraisalReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGeneratePlogReportCompletedEventHandler(object sender, FnGeneratePlogReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGeneratePlogReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGeneratePlogReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGenerateIndividualPcReportCompletedEventHandler(object sender, FnGenerateIndividualPcReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateIndividualPcReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateIndividualPcReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGenerateIndividualPcSubIndicatorReportCompletedEventHandler(object sender, FnGenerateIndividualPcSubIndicatorReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateIndividualPcSubIndicatorReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateIndividualPcSubIndicatorReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertJDTargetsCompletedEventHandler(object sender, FnInsertJDTargetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertJDTargetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertJDTargetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSuggestJDCompletedEventHandler(object sender, FnSuggestJDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSuggestJDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSuggestJDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGetAnnualWorkplanLinesCompletedEventHandler(object sender, FnGetAnnualWorkplanLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetAnnualWorkplanLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetAnnualWorkplanLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertSelectedAdditionalActivitiesCompletedEventHandler(object sender, FnInsertSelectedAdditionalActivitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertSelectedAdditionalActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertSelectedAdditionalActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGenerateCSPReportCompletedEventHandler(object sender, FnGenerateCSPReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateCSPReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateCSPReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGenerateAWPReportCompletedEventHandler(object sender, FnGenerateAWPReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateAWPReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateAWPReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGenerateBoardPCReportCompletedEventHandler(object sender, FnGenerateBoardPCReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateBoardPCReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateBoardPCReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSubmitStandardAppraisalCompletedEventHandler(object sender, FnSubmitStandardAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitStandardAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitStandardAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnCancelSubmitofStandardAppraisalCompletedEventHandler(object sender, FnCancelSubmitofStandardAppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCancelSubmitofStandardAppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCancelSubmitofStandardAppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSubmitStandardAppraisalObjCompletedEventHandler(object sender, FnSubmitStandardAppraisalObjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitStandardAppraisalObjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitStandardAppraisalObjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSubmitStandardAppraisalPECompletedEventHandler(object sender, FnSubmitStandardAppraisalPECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitStandardAppraisalPECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitStandardAppraisalPECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertStandardAppraisalPIPCompletedEventHandler(object sender, FnInsertStandardAppraisalPIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStandardAppraisalPIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStandardAppraisalPIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnEditStandardAppraisalPIPCompletedEventHandler(object sender, FnEditStandardAppraisalPIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditStandardAppraisalPIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditStandardAppraisalPIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnRemoveStandardAppraisalPIPCompletedEventHandler(object sender, FnRemoveStandardAppraisalPIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveStandardAppraisalPIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveStandardAppraisalPIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertStandardAppraisalTrainigNeedsCompletedEventHandler(object sender, FnInsertStandardAppraisalTrainigNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertStandardAppraisalTrainigNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertStandardAppraisalTrainigNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnRemoveStandardAppraisalTrainigNeedsCompletedEventHandler(object sender, FnRemoveStandardAppraisalTrainigNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRemoveStandardAppraisalTrainigNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRemoveStandardAppraisalTrainigNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnEditStandardAppraisalTrainigNeedsCompletedEventHandler(object sender, FnEditStandardAppraisalTrainigNeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditStandardAppraisalTrainigNeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditStandardAppraisalTrainigNeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSubmitStandardAppraisalConfirmationCompletedEventHandler(object sender, FnSubmitStandardAppraisalConfirmationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitStandardAppraisalConfirmationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitStandardAppraisalConfirmationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnSendAppraisalEmailCompletedEventHandler(object sender, FnSendAppraisalEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendAppraisalEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendAppraisalEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTrainingParticipantsCompletedEventHandler(object sender, AddTrainingParticipantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingParticipantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingParticipantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditTrainingParticipantsCompletedEventHandler(object sender, EditTrainingParticipantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditTrainingParticipantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditTrainingParticipantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreatePettyCashCompletedEventHandler(object sender, CreatePettyCashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePettyCashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePettyCashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreatePettyCashLinesCompletedEventHandler(object sender, CreatePettyCashLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePettyCashLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePettyCashLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void PopulatePettyCashCompletedEventHandler(object sender, PopulatePettyCashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulatePettyCashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulatePettyCashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditPettyCashLinesCompletedEventHandler(object sender, EditPettyCashLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditPettyCashLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditPettyCashLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeletePettyCashLinesCompletedEventHandler(object sender, DeletePettyCashLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePettyCashLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePettyCashLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendPettyCashRequestApprovalCompletedEventHandler(object sender, SendPettyCashRequestApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPettyCashRequestApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPettyCashRequestApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CancelPettyCashRequestApprovalCompletedEventHandler(object sender, CancelPettyCashRequestApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPettyCashRequestApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPettyCashRequestApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdatePettyCashSurrenderLineCompletedEventHandler(object sender, UpdatePettyCashSurrenderLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePettyCashSurrenderLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePettyCashSurrenderLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendPettyCashSurrenderApprovalCompletedEventHandler(object sender, SendPettyCashSurrenderApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPettyCashSurrenderApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPettyCashSurrenderApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CancelPettyCashSurrenderApprovalCompletedEventHandler(object sender, CancelPettyCashSurrenderApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPettyCashSurrenderApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPettyCashSurrenderApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateTrainingRequisitionCompletedEventHandler(object sender, CreateTrainingRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTrainingRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTrainingRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTrainingParticipants2CompletedEventHandler(object sender, AddTrainingParticipants2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingParticipants2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingParticipants2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditTrainingParticipants2CompletedEventHandler(object sender, EditTrainingParticipants2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditTrainingParticipants2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditTrainingParticipants2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteTrainingParticipants2CompletedEventHandler(object sender, DeleteTrainingParticipants2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTrainingParticipants2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTrainingParticipants2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTrainingCost2CompletedEventHandler(object sender, AddTrainingCost2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingCost2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingCost2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteTrainingcost2CompletedEventHandler(object sender, DeleteTrainingcost2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTrainingcost2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTrainingcost2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendTrainingRequestApprovalCompletedEventHandler(object sender, SendTrainingRequestApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTrainingRequestApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTrainingRequestApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CancelTrainingRequestApprovalCompletedEventHandler(object sender, CancelTrainingRequestApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelTrainingRequestApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelTrainingRequestApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGenerateTrainingApplicationReportCompletedEventHandler(object sender, FnGenerateTrainingApplicationReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateTrainingApplicationReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateTrainingApplicationReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGenerateTrainingPlanReportCompletedEventHandler(object sender, FnGenerateTrainingPlanReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateTrainingPlanReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateTrainingPlanReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateNewTrainingRequestCompletedEventHandler(object sender, CreateNewTrainingRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewTrainingRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewTrainingRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateNewTrainingNeedsLinesCompletedEventHandler(object sender, CreateNewTrainingNeedsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewTrainingNeedsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewTrainingNeedsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendTrainingNeedsApprovalCompletedEventHandler(object sender, SendTrainingNeedsApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTrainingNeedsApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTrainingNeedsApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnEditTrainingNeedsRequestLinesCompletedEventHandler(object sender, FnEditTrainingNeedsRequestLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditTrainingNeedsRequestLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditTrainingNeedsRequestLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnDeleteTrainingNeedsLinesCompletedEventHandler(object sender, FnDeleteTrainingNeedsLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteTrainingNeedsLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteTrainingNeedsLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateNewTrainingFeedbackCompletedEventHandler(object sender, CreateNewTrainingFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewTrainingFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewTrainingFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateTrainingFeedbackLinesCompletedEventHandler(object sender, CreateTrainingFeedbackLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTrainingFeedbackLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTrainingFeedbackLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGenerateTrainingFeedbackReportCompletedEventHandler(object sender, FnGenerateTrainingFeedbackReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateTrainingFeedbackReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateTrainingFeedbackReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnEditTrainingFeedbackLinesCompletedEventHandler(object sender, FnEditTrainingFeedbackLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditTrainingFeedbackLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditTrainingFeedbackLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnDeleteTrainingFeedbackLinesCompletedEventHandler(object sender, FnDeleteTrainingFeedbackLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteTrainingFeedbackLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteTrainingFeedbackLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SubmitTrainingFeedbackCompletedEventHandler(object sender, SubmitTrainingFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitTrainingFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitTrainingFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateNewTrainingEvaluationCompletedEventHandler(object sender, CreateNewTrainingEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewTrainingEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewTrainingEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SubmitTrainingEvaluationCompletedEventHandler(object sender, SubmitTrainingEvaluationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitTrainingEvaluationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitTrainingEvaluationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnGenerateTrainingEvaluationReportCompletedEventHandler(object sender, FnGenerateTrainingEvaluationReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateTrainingEvaluationReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateTrainingEvaluationReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FnInsertEvaluationLinesCompletedEventHandler(object sender, FnInsertEvaluationLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertEvaluationLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertEvaluationLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void LeaveApplicationCompletedEventHandler(object sender, LeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GeneratePayslipCompletedEventHandler(object sender, GeneratePayslipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePayslipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePayslipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateImprestMemoCompletedEventHandler(object sender, GenerateImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateEmployeeStatementCompletedEventHandler(object sender, GenerateEmployeeStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateEmployeeStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateEmployeeStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateP9CompletedEventHandler(object sender, GenerateP9CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateP9CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateP9CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GeneratePurchaseRequisitionCompletedEventHandler(object sender, GeneratePurchaseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePurchaseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePurchaseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateStoreRequisitionCompletedEventHandler(object sender, GenerateStoreRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateStoreRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateStoreRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateIssueVoucherCompletedEventHandler(object sender, GenerateIssueVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateIssueVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateIssueVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GeneratePettyCashVoucherCompletedEventHandler(object sender, GeneratePettyCashVoucherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePettyCashVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePettyCashVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateStaffClaimCompletedEventHandler(object sender, GenerateStaffClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateStaffClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateStaffClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddHobbyCompletedEventHandler(object sender, AddHobbyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHobbyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHobbyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateGeneralDetailsCompletedEventHandler(object sender, UpdateGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdatePersonalDetailsCompletedEventHandler(object sender, UpdatePersonalDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePersonalDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePersonalDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateCommunicationDetailsCompletedEventHandler(object sender, UpdateCommunicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCommunicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCommunicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddRefereeCompletedEventHandler(object sender, AddRefereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRefereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRefereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddQualificationCompletedEventHandler(object sender, AddQualificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQualificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQualificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ApplyCompletedEventHandler(object sender, ApplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ImprestGeneralDetailsCompletedEventHandler(object sender, ImprestGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImprestGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImprestGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ImprestGeneralDetails1CompletedEventHandler(object sender, ImprestGeneralDetails1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImprestGeneralDetails1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImprestGeneralDetails1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetImprestObjectiveCompletedEventHandler(object sender, GetImprestObjectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImprestObjectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImprestObjectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTeamMemberCompletedEventHandler(object sender, AddTeamMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTeamMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTeamMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTeamMember1CompletedEventHandler(object sender, AddTeamMember1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTeamMember1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTeamMember1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddFuelCompletedEventHandler(object sender, AddFuelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFuelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFuelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddCasualsCompletedEventHandler(object sender, AddCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddOtherCostsCompletedEventHandler(object sender, AddOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendImprestMemoApprovalCompletedEventHandler(object sender, SendImprestMemoApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendImprestMemoApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendImprestMemoApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateImprestSurrenderCompletedEventHandler(object sender, CreateImprestSurrenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateImprestSurrenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateImprestSurrenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateImprestSurrender1CompletedEventHandler(object sender, CreateImprestSurrender1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateImprestSurrender1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateImprestSurrender1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void PopulatePettyCashSurrenderCompletedEventHandler(object sender, PopulatePettyCashSurrenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulatePettyCashSurrenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulatePettyCashSurrenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendImprestSurrenderApprovalCompletedEventHandler(object sender, SendImprestSurrenderApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendImprestSurrenderApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendImprestSurrenderApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateSurrenderLineCompletedEventHandler(object sender, UpdateSurrenderLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSurrenderLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSurrenderLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateWorksPurchaseRequisitionCompletedEventHandler(object sender, CreateWorksPurchaseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWorksPurchaseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWorksPurchaseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreatePurchaseRequisitionCompletedEventHandler(object sender, CreatePurchaseRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePurchaseRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePurchaseRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreatePurchaseStoreRequisitionCompletedEventHandler(object sender, CreatePurchaseStoreRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePurchaseStoreRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePurchaseStoreRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateRequisitionLineCompletedEventHandler(object sender, CreateRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendPurchaseRequisitionApprovalCompletedEventHandler(object sender, SendPurchaseRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPurchaseRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPurchaseRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateFleetRequisitionCompletedEventHandler(object sender, CreateFleetRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFleetRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFleetRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddFleetRequisitionStaffCompletedEventHandler(object sender, AddFleetRequisitionStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetRequisitionStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetRequisitionStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddFleetRequisitionNonStaffCompletedEventHandler(object sender, AddFleetRequisitionNonStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFleetRequisitionNonStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFleetRequisitionNonStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendFleetRequisitionApprovalCompletedEventHandler(object sender, SendFleetRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFleetRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFleetRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveStaffFromTravelRequisitionCompletedEventHandler(object sender, RemoveStaffFromTravelRequisitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveStaffFromTravelRequisitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveStaffFromTravelRequisitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveMemberFromImprestMemoCompletedEventHandler(object sender, RemoveMemberFromImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveMemberFromImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveMemberFromImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditTeamMemberCompletedEventHandler(object sender, EditTeamMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditTeamMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditTeamMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveFuelFromImprestMemoCompletedEventHandler(object sender, RemoveFuelFromImprestMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFuelFromImprestMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFuelFromImprestMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditFuelCompletedEventHandler(object sender, EditFuelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditFuelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditFuelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveCasualsCompletedEventHandler(object sender, RemoveCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditCasualsCompletedEventHandler(object sender, EditCasualsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCasualsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCasualsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void RemoveOtherCostsCompletedEventHandler(object sender, RemoveOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditOtherCostsCompletedEventHandler(object sender, EditOtherCostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditOtherCostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditOtherCostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GenerateLeaveFormCompletedEventHandler(object sender, GenerateLeaveFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateLeaveFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateLeaveFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendRecordForApprovalCompletedEventHandler(object sender, SendRecordForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendRecordForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendRecordForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CancelRecordApprovalCompletedEventHandler(object sender, CancelRecordApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelRecordApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelRecordApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteRequisitionLineCompletedEventHandler(object sender, DeleteRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendStaffClaimApprovalCompletedEventHandler(object sender, SendStaffClaimApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendStaffClaimApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendStaffClaimApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ApproveStaffClaimCompletedEventHandler(object sender, ApproveStaffClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveStaffClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveStaffClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CancelStaffClaimRecordApprovalCompletedEventHandler(object sender, CancelStaffClaimRecordApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelStaffClaimRecordApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelStaffClaimRecordApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateStaffClaimCompletedEventHandler(object sender, CreateStaffClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStaffClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStaffClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateStaffClaim1CompletedEventHandler(object sender, CreateStaffClaim1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStaffClaim1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStaffClaim1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteStaffClaimLineCompletedEventHandler(object sender, DeleteStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateStaffClaimLineCompletedEventHandler(object sender, CreateStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void EditStaffClaimLineCompletedEventHandler(object sender, EditStaffClaimLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditStaffClaimLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditStaffClaimLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void SendStoreRequisitionApprovalCompletedEventHandler(object sender, SendStoreRequisitionApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendStoreRequisitionApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendStoreRequisitionApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateStoreRequisitionLineCompletedEventHandler(object sender, CreateStoreRequisitionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStoreRequisitionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStoreRequisitionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ApplyexternalHrJobsCompletedEventHandler(object sender, ApplyexternalHrJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyexternalHrJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyexternalHrJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void ApplyinternalHrJobsCompletedEventHandler(object sender, ApplyinternalHrJobsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyinternalHrJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyinternalHrJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateEmploymentHistoryCompletedEventHandler(object sender, UpdateEmploymentHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEmploymentHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEmploymentHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddEmploymentHistoryCompletedEventHandler(object sender, AddEmploymentHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmploymentHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmploymentHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddAcademicQualificationsCompletedEventHandler(object sender, AddAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddProffessionalQualificationsCompletedEventHandler(object sender, AddProffessionalQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProffessionalQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProffessionalQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddTrainingAttendedCompletedEventHandler(object sender, AddTrainingAttendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrainingAttendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrainingAttendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddProfessionalBodyCompletedEventHandler(object sender, AddProfessionalBodyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProfessionalBodyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProfessionalBodyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddApplicantAccomplishmentCompletedEventHandler(object sender, AddApplicantAccomplishmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddApplicantAccomplishmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddApplicantAccomplishmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddAbilityDetailsCompletedEventHandler(object sender, AddAbilityDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAbilityDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAbilityDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void CreateRefereeCompletedEventHandler(object sender, CreateRefereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRefereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRefereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddCurrentDutiesSkillsCompletedEventHandler(object sender, AddCurrentDutiesSkillsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCurrentDutiesSkillsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCurrentDutiesSkillsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddOtherPersonalDetailsCompletedEventHandler(object sender, AddOtherPersonalDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOtherPersonalDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOtherPersonalDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void AddDutiesDetailsCompletedEventHandler(object sender, AddDutiesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDutiesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDutiesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteAcademicLineCompletedEventHandler(object sender, DeleteAcademicLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAcademicLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAcademicLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteProfessionalLineCompletedEventHandler(object sender, DeleteProfessionalLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProfessionalLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProfessionalLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591